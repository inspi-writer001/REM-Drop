{
	"id": "a5454cb25cb28107df191910a1d6bf3f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/extension/Drop.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./interface/IDrop.sol\";\nimport \"../lib/MerkleProof.sol\";\n\nabstract contract Drop is IDrop {\n    /// @dev The sender is not authorized to perform the action\n    error DropUnauthorized();\n\n    /// @dev Exceeded the max token total supply\n    error DropExceedMaxSupply();\n\n    /// @dev No active claim condition\n    error DropNoActiveCondition();\n\n    /// @dev Claim condition invalid currency or price\n    error DropClaimInvalidTokenPrice(\n        address expectedCurrency,\n        uint256 expectedPricePerToken,\n        address actualCurrency,\n        uint256 actualExpectedPricePerToken\n    );\n\n    /// @dev Claim condition exceeded limit\n    error DropClaimExceedLimit(uint256 expected, uint256 actual);\n\n    /// @dev Claim condition exceeded max supply\n    error DropClaimExceedMaxSupply(uint256 expected, uint256 actual);\n\n    /// @dev Claim condition not started yet\n    error DropClaimNotStarted(uint256 expected, uint256 actual);\n\n    /*///////////////////////////////////////////////////////////////\n                            State variables\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev The active conditions for claiming tokens.\n    ClaimConditionList public claimCondition;\n\n    /*///////////////////////////////////////////////////////////////\n                            Drop logic\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev Lets an account claim tokens.\n    function claim(\n        address _receiver,\n        uint256 _quantity,\n        address _currency,\n        uint256 _pricePerToken,\n        AllowlistProof calldata _allowlistProof,\n        bytes memory _data\n    ) public payable virtual override {\n        _beforeClaim(_receiver, _quantity, _currency, _pricePerToken, _allowlistProof, _data);\n\n        uint256 activeConditionId = getActiveClaimConditionId();\n\n        verifyClaim(activeConditionId, _dropMsgSender(), _quantity, _currency, _pricePerToken, _allowlistProof);\n\n        // Update contract state.\n        claimCondition.conditions[activeConditionId].supplyClaimed += _quantity;\n        claimCondition.supplyClaimedByWallet[activeConditionId][_dropMsgSender()] += _quantity;\n\n        // If there's a price, collect price.\n        _collectPriceOnClaim(address(0), _quantity, _currency, _pricePerToken);\n\n        // Mint the relevant tokens to claimer.\n        uint256 startTokenId = _transferTokensOnClaim(_receiver, _quantity);\n\n        emit TokensClaimed(activeConditionId, _dropMsgSender(), _receiver, startTokenId, _quantity);\n\n        _afterClaim(_receiver, _quantity, _currency, _pricePerToken, _allowlistProof, _data);\n    }\n\n    /// @dev Lets a contract admin set claim conditions.\n    function setClaimConditions(\n        ClaimCondition[] calldata _conditions,\n        bool _resetClaimEligibility\n    ) external virtual override {\n        if (!_canSetClaimConditions()) {\n            revert DropUnauthorized();\n        }\n\n        uint256 existingStartIndex = claimCondition.currentStartId;\n        uint256 existingPhaseCount = claimCondition.count;\n\n        /**\n         *  The mapping `supplyClaimedByWallet` uses a claim condition's UID as a key.\n         *\n         *  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n         *  conditions in `_conditions`, effectively resetting the restrictions on claims expressed\n         *  by `supplyClaimedByWallet`.\n         */\n        uint256 newStartIndex = existingStartIndex;\n        if (_resetClaimEligibility) {\n            newStartIndex = existingStartIndex + existingPhaseCount;\n        }\n\n        claimCondition.count = _conditions.length;\n        claimCondition.currentStartId = newStartIndex;\n\n        uint256 lastConditionStartTimestamp;\n        for (uint256 i = 0; i < _conditions.length; i++) {\n            require(i == 0 || lastConditionStartTimestamp < _conditions[i].startTimestamp, \"ST\");\n\n            uint256 supplyClaimedAlready = claimCondition.conditions[newStartIndex + i].supplyClaimed;\n            if (supplyClaimedAlready > _conditions[i].maxClaimableSupply) {\n                revert DropExceedMaxSupply();\n            }\n\n            claimCondition.conditions[newStartIndex + i] = _conditions[i];\n            claimCondition.conditions[newStartIndex + i].supplyClaimed = supplyClaimedAlready;\n\n            lastConditionStartTimestamp = _conditions[i].startTimestamp;\n        }\n\n        /**\n         *  Gas refunds (as much as possible)\n         *\n         *  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n         *  conditions in `_conditions`. So, we delete claim conditions with UID < `newStartIndex`.\n         *\n         *  If `_resetClaimEligibility == false`, and there are more existing claim conditions\n         *  than in `_conditions`, we delete the existing claim conditions that don't get replaced\n         *  by the conditions in `_conditions`.\n         */\n        if (_resetClaimEligibility) {\n            for (uint256 i = existingStartIndex; i < newStartIndex; i++) {\n                delete claimCondition.conditions[i];\n            }\n        } else {\n            if (existingPhaseCount > _conditions.length) {\n                for (uint256 i = _conditions.length; i < existingPhaseCount; i++) {\n                    delete claimCondition.conditions[newStartIndex + i];\n                }\n            }\n        }\n\n        emit ClaimConditionsUpdated(_conditions, _resetClaimEligibility);\n    }\n\n    /// @dev Checks a request to claim NFTs against the active claim condition's criteria.\n    function verifyClaim(\n        uint256 _conditionId,\n        address _claimer,\n        uint256 _quantity,\n        address _currency,\n        uint256 _pricePerToken,\n        AllowlistProof calldata _allowlistProof\n    ) public view virtual returns (bool isOverride) {\n        ClaimCondition memory currentClaimPhase = claimCondition.conditions[_conditionId];\n        uint256 claimLimit = currentClaimPhase.quantityLimitPerWallet;\n        uint256 claimPrice = currentClaimPhase.pricePerToken;\n        address claimCurrency = currentClaimPhase.currency;\n\n        /*\n         * Here `isOverride` implies that if the merkle proof verification fails,\n         * the claimer would claim through open claim limit instead of allowlisted limit.\n         */\n        if (currentClaimPhase.merkleRoot != bytes32(0)) {\n            (isOverride, ) = MerkleProof.verify(\n                _allowlistProof.proof,\n                currentClaimPhase.merkleRoot,\n                keccak256(\n                    abi.encodePacked(\n                        _claimer,\n                        _allowlistProof.quantityLimitPerWallet,\n                        _allowlistProof.pricePerToken,\n                        _allowlistProof.currency\n                    )\n                )\n            );\n        }\n\n        if (isOverride) {\n            claimLimit = _allowlistProof.quantityLimitPerWallet != 0\n                ? _allowlistProof.quantityLimitPerWallet\n                : claimLimit;\n            claimPrice = _allowlistProof.pricePerToken != type(uint256).max\n                ? _allowlistProof.pricePerToken\n                : claimPrice;\n            claimCurrency = _allowlistProof.pricePerToken != type(uint256).max && _allowlistProof.currency != address(0)\n                ? _allowlistProof.currency\n                : claimCurrency;\n        }\n\n        uint256 supplyClaimedByWallet = claimCondition.supplyClaimedByWallet[_conditionId][_claimer];\n\n        if (_currency != claimCurrency || _pricePerToken != claimPrice) {\n            revert DropClaimInvalidTokenPrice(_currency, _pricePerToken, claimCurrency, claimPrice);\n        }\n\n        if (_quantity == 0 || (_quantity + supplyClaimedByWallet > claimLimit)) {\n            revert DropClaimExceedLimit(claimLimit, _quantity + supplyClaimedByWallet);\n        }\n\n        if (currentClaimPhase.supplyClaimed + _quantity > currentClaimPhase.maxClaimableSupply) {\n            revert DropClaimExceedMaxSupply(\n                currentClaimPhase.maxClaimableSupply,\n                currentClaimPhase.supplyClaimed + _quantity\n            );\n        }\n\n        if (currentClaimPhase.startTimestamp > block.timestamp) {\n            revert DropClaimNotStarted(currentClaimPhase.startTimestamp, block.timestamp);\n        }\n    }\n\n    /// @dev At any given moment, returns the uid for the active claim condition.\n    function getActiveClaimConditionId() public view returns (uint256) {\n        for (uint256 i = claimCondition.currentStartId + claimCondition.count; i > claimCondition.currentStartId; i--) {\n            if (block.timestamp >= claimCondition.conditions[i - 1].startTimestamp) {\n                return i - 1;\n            }\n        }\n\n        revert DropNoActiveCondition();\n    }\n\n    /// @dev Returns the claim condition at the given uid.\n    function getClaimConditionById(uint256 _conditionId) external view returns (ClaimCondition memory condition) {\n        condition = claimCondition.conditions[_conditionId];\n    }\n\n    /// @dev Returns the supply claimed by claimer for a given conditionId.\n    function getSupplyClaimedByWallet(\n        uint256 _conditionId,\n        address _claimer\n    ) public view returns (uint256 supplyClaimedByWallet) {\n        supplyClaimedByWallet = claimCondition.supplyClaimedByWallet[_conditionId][_claimer];\n    }\n\n    /*////////////////////////////////////////////////////////////////////\n        Optional hooks that can be implemented in the derived contract\n    ///////////////////////////////////////////////////////////////////*/\n\n    /// @dev Exposes the ability to override the msg sender.\n    function _dropMsgSender() internal virtual returns (address) {\n        return msg.sender;\n    }\n\n    /// @dev Runs before every `claim` function call.\n    function _beforeClaim(\n        address _receiver,\n        uint256 _quantity,\n        address _currency,\n        uint256 _pricePerToken,\n        AllowlistProof calldata _allowlistProof,\n        bytes memory _data\n    ) internal virtual {}\n\n    /// @dev Runs after every `claim` function call.\n    function _afterClaim(\n        address _receiver,\n        uint256 _quantity,\n        address _currency,\n        uint256 _pricePerToken,\n        AllowlistProof calldata _allowlistProof,\n        bytes memory _data\n    ) internal virtual {}\n\n    /*///////////////////////////////////////////////////////////////\n        Virtual functions: to be implemented in derived contract\n    //////////////////////////////////////////////////////////////*/\n\n    /// @dev Collects and distributes the primary sale value of NFTs being claimed.\n    function _collectPriceOnClaim(\n        address _primarySaleRecipient,\n        uint256 _quantityToClaim,\n        address _currency,\n        uint256 _pricePerToken\n    ) internal virtual;\n\n    /// @dev Transfers the NFTs being claimed.\n    function _transferTokensOnClaim(\n        address _to,\n        uint256 _quantityBeingClaimed\n    ) internal virtual returns (uint256 startTokenId);\n\n    /// @dev Determine what wallet can update claim conditions\n    function _canSetClaimConditions() internal view virtual returns (bool);\n}"
			},
			"contracts/lib/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: Apache 2.0\npragma solidity ^0.8.0;\n\n/// @author OpenZeppelin, thirdweb\n\nlibrary MerkleProof {\n    function verify(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool, uint256) {\n        bytes32 computedHash = leaf;\n        uint256 index = 0;\n\n        for (uint256 i = 0; i < proof.length; i++) {\n            index *= 2;\n            bytes32 proofElement = proof[i];\n\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = _efficientHash(computedHash, proofElement);\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = _efficientHash(proofElement, computedHash);\n                index += 1;\n            }\n        }\n\n        // Check if the computed hash (root) is equal to the provided root\n        return (computedHash == root, index);\n    }\n\n    /**\n     * @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory.\n     */\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}"
			},
			"contracts/extension/interface/IDrop.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./IClaimConditionMultiPhase.sol\";\n\n/**\n *  The interface `IDrop` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n *\n *  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n *  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n *  or added to by the contract admin. At any moment, there is only one active claim condition.\n */\n\ninterface IDrop is IClaimConditionMultiPhase {\n    /**\n     *  @param proof Proof of concerned wallet's inclusion in an allowlist.\n     *  @param quantityLimitPerWallet The total quantity of tokens the allowlisted wallet is eligible to claim over time.\n     *  @param pricePerToken The price per token the allowlisted wallet must pay to claim tokens.\n     *  @param currency The currency in which the allowlisted wallet must pay the price for claiming tokens.\n     */\n    struct AllowlistProof {\n        bytes32[] proof;\n        uint256 quantityLimitPerWallet;\n        uint256 pricePerToken;\n        address currency;\n    }\n\n    /// @notice Emitted when tokens are claimed via `claim`.\n    event TokensClaimed(\n        uint256 indexed claimConditionIndex,\n        address indexed claimer,\n        address indexed receiver,\n        uint256 startTokenId,\n        uint256 quantityClaimed\n    );\n\n    /// @notice Emitted when the contract's claim conditions are updated.\n    event ClaimConditionsUpdated(ClaimCondition[] claimConditions, bool resetEligibility);\n\n    /**\n     *  @notice Lets an account claim a given quantity of NFTs.\n     *\n     *  @param receiver                       The receiver of the NFTs to claim.\n     *  @param quantity                       The quantity of NFTs to claim.\n     *  @param currency                       The currency in which to pay for the claim.\n     *  @param pricePerToken                  The price per token to pay for the claim.\n     *  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n     *                                        of the claim conditions that apply.\n     *  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface.\n     */\n    function claim(\n        address receiver,\n        uint256 quantity,\n        address currency,\n        uint256 pricePerToken,\n        AllowlistProof calldata allowlistProof,\n        bytes memory data\n    ) external payable;\n\n    /**\n     *  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n     *\n     *  @param phases                   Claim conditions in ascending order by `startTimestamp`.\n     *\n     *  @param resetClaimEligibility    Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,\n     *                                  in the new claim conditions being set.\n     *\n     */\n    function setClaimConditions(ClaimCondition[] calldata phases, bool resetClaimEligibility) external;\n}"
			},
			"contracts/extension/interface/IClaimConditionMultiPhase.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./IClaimCondition.sol\";\n\n/**\n *  The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n *\n *  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n *  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n *  or added to by the contract admin. At any moment, there is only one active claim condition.\n */\n\ninterface IClaimConditionMultiPhase is IClaimCondition {\n    /**\n     *  @notice The set of all claim conditions, at any given moment.\n     *  Claim Phase ID = [currentStartId, currentStartId + length - 1];\n     *\n     *  @param currentStartId           The uid for the first claim condition amongst the current set of\n     *                                  claim conditions. The uid for each next claim condition is one\n     *                                  more than the previous claim condition's uid.\n     *\n     *  @param count                    The total number of phases / claim conditions in the list\n     *                                  of claim conditions.\n     *\n     *  @param conditions                   The claim conditions at a given uid. Claim conditions\n     *                                  are ordered in an ascending order by their `startTimestamp`.\n     *\n     *  @param supplyClaimedByWallet    Map from a claim condition uid and account to supply claimed by account.\n     */\n    struct ClaimConditionList {\n        uint256 currentStartId;\n        uint256 count;\n        mapping(uint256 => ClaimCondition) conditions;\n        mapping(uint256 => mapping(address => uint256)) supplyClaimedByWallet;\n    }\n}"
			},
			"contracts/extension/interface/IClaimCondition.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n *  The interface `IClaimCondition` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n *\n *  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n *  or added to by the contract admin. At any moment, there is only one active claim condition.\n */\n\ninterface IClaimCondition {\n    /**\n     *  @notice The criteria that make up a claim condition.\n     *\n     *  @param startTimestamp                 The unix timestamp after which the claim condition applies.\n     *                                        The same claim condition applies until the `startTimestamp`\n     *                                        of the next claim condition.\n     *\n     *  @param maxClaimableSupply             The maximum total number of tokens that can be claimed under\n     *                                        the claim condition.\n     *\n     *  @param supplyClaimed                  At any given point, the number of tokens that have been claimed\n     *                                        under the claim condition.\n     *\n     *  @param quantityLimitPerWallet         The maximum number of tokens that can be claimed by a wallet.\n     *\n     *  @param merkleRoot                     The allowlist of addresses that can claim tokens under the claim\n     *                                        condition.\n     *\n     *  @param pricePerToken                  The price required to pay per token claimed.\n     *\n     *  @param currency                       The currency in which the `pricePerToken` must be paid.\n     *\n     *  @param metadata                       Claim condition metadata.\n     */\n    struct ClaimCondition {\n        uint256 startTimestamp;\n        uint256 maxClaimableSupply;\n        uint256 supplyClaimed;\n        uint256 quantityLimitPerWallet;\n        bytes32 merkleRoot;\n        uint256 pricePerToken;\n        address currency;\n        string metadata;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/extension/Drop.sol": {
				"Drop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "DropClaimExceedLimit",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "DropClaimExceedMaxSupply",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "expectedCurrency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expectedPricePerToken",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "actualCurrency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "actualExpectedPricePerToken",
									"type": "uint256"
								}
							],
							"name": "DropClaimInvalidTokenPrice",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "DropClaimNotStarted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DropExceedMaxSupply",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DropNoActiveCondition",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DropUnauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxClaimableSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyClaimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadata",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct IClaimCondition.ClaimCondition[]",
									"name": "claimConditions",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "resetEligibility",
									"type": "bool"
								}
							],
							"name": "ClaimConditionsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimConditionIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityClaimed",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pricePerToken",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "bytes32[]",
											"name": "proof",
											"type": "bytes32[]"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										}
									],
									"internalType": "struct IDrop.AllowlistProof",
									"name": "_allowlistProof",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimCondition",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "currentStartId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getActiveClaimConditionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_conditionId",
									"type": "uint256"
								}
							],
							"name": "getClaimConditionById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxClaimableSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyClaimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadata",
											"type": "string"
										}
									],
									"internalType": "struct IClaimCondition.ClaimCondition",
									"name": "condition",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_conditionId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_claimer",
									"type": "address"
								}
							],
							"name": "getSupplyClaimedByWallet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "supplyClaimedByWallet",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxClaimableSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyClaimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadata",
											"type": "string"
										}
									],
									"internalType": "struct IClaimCondition.ClaimCondition[]",
									"name": "_conditions",
									"type": "tuple[]"
								},
								{
									"internalType": "bool",
									"name": "_resetClaimEligibility",
									"type": "bool"
								}
							],
							"name": "setClaimConditions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_conditionId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_claimer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_pricePerToken",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "bytes32[]",
											"name": "proof",
											"type": "bytes32[]"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										}
									],
									"internalType": "struct IDrop.AllowlistProof",
									"name": "_allowlistProof",
									"type": "tuple"
								}
							],
							"name": "verifyClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOverride",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"DropClaimExceedLimit(uint256,uint256)": [
								{
									"details": "Claim condition exceeded limit"
								}
							],
							"DropClaimExceedMaxSupply(uint256,uint256)": [
								{
									"details": "Claim condition exceeded max supply"
								}
							],
							"DropClaimInvalidTokenPrice(address,uint256,address,uint256)": [
								{
									"details": "Claim condition invalid currency or price"
								}
							],
							"DropClaimNotStarted(uint256,uint256)": [
								{
									"details": "Claim condition not started yet"
								}
							],
							"DropExceedMaxSupply()": [
								{
									"details": "Exceeded the max token total supply"
								}
							],
							"DropNoActiveCondition()": [
								{
									"details": "No active claim condition"
								}
							],
							"DropUnauthorized()": [
								{
									"details": "The sender is not authorized to perform the action"
								}
							]
						},
						"kind": "dev",
						"methods": {
							"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
								"details": "Lets an account claim tokens."
							},
							"getActiveClaimConditionId()": {
								"details": "At any given moment, returns the uid for the active claim condition."
							},
							"getClaimConditionById(uint256)": {
								"details": "Returns the claim condition at the given uid."
							},
							"getSupplyClaimedByWallet(uint256,address)": {
								"details": "Returns the supply claimed by claimer for a given conditionId."
							},
							"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
								"details": "Lets a contract admin set claim conditions."
							},
							"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": {
								"details": "Checks a request to claim NFTs against the active claim condition's criteria."
							}
						},
						"stateVariables": {
							"claimCondition": {
								"details": "The active conditions for claiming tokens."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
							"claimCondition()": "d637ed59",
							"getActiveClaimConditionId()": "c68907de",
							"getClaimConditionById(uint256)": "6f8934f4",
							"getSupplyClaimedByWallet(uint256,address)": "ad1eefc5",
							"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7",
							"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))": "23a2902b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"DropClaimExceedLimit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"DropClaimExceedMaxSupply\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expectedPricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"actualCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualExpectedPricePerToken\",\"type\":\"uint256\"}],\"name\":\"DropClaimInvalidTokenPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"DropClaimNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DropExceedMaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DropNoActiveCondition\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DropUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimCondition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentStartId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveClaimConditionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"}],\"name\":\"getClaimConditionById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition\",\"name\":\"condition\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getSupplyClaimedByWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"supplyClaimedByWallet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"_conditions\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"_resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_conditionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"_allowlistProof\",\"type\":\"tuple\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOverride\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"DropClaimExceedLimit(uint256,uint256)\":[{\"details\":\"Claim condition exceeded limit\"}],\"DropClaimExceedMaxSupply(uint256,uint256)\":[{\"details\":\"Claim condition exceeded max supply\"}],\"DropClaimInvalidTokenPrice(address,uint256,address,uint256)\":[{\"details\":\"Claim condition invalid currency or price\"}],\"DropClaimNotStarted(uint256,uint256)\":[{\"details\":\"Claim condition not started yet\"}],\"DropExceedMaxSupply()\":[{\"details\":\"Exceeded the max token total supply\"}],\"DropNoActiveCondition()\":[{\"details\":\"No active claim condition\"}],\"DropUnauthorized()\":[{\"details\":\"The sender is not authorized to perform the action\"}]},\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"details\":\"Lets an account claim tokens.\"},\"getActiveClaimConditionId()\":{\"details\":\"At any given moment, returns the uid for the active claim condition.\"},\"getClaimConditionById(uint256)\":{\"details\":\"Returns the claim condition at the given uid.\"},\"getSupplyClaimedByWallet(uint256,address)\":{\"details\":\"Returns the supply claimed by claimer for a given conditionId.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"details\":\"Lets a contract admin set claim conditions.\"},\"verifyClaim(uint256,address,uint256,address,uint256,(bytes32[],uint256,uint256,address))\":{\"details\":\"Checks a request to claim NFTs against the active claim condition's criteria.\"}},\"stateVariables\":{\"claimCondition\":{\"details\":\"The active conditions for claiming tokens.\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/Drop.sol\":\"Drop\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/Drop.sol\":{\"keccak256\":\"0x4161a9037c596f6da6b70d8f41c5edbce350c44d418b202247054a94472f517d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://219597e588b9f943e1a74e9c73ef6090f55070f7bbc8fafef2efc9f4023d09a1\",\"dweb:/ipfs/QmWR1XGDiG5khsg6Dpeh2cabUCG3JJ4KSvLsXiXzqBR5NJ\"]},\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x7eb50217f513a762467f67bf65b264f8b408d98ac755ab5b34505fa55dda7714\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fab23b3d54bd6bdafd5e43156df69d799e7f6e5fdbb2bc88f3a51c2c31586786\",\"dweb:/ipfs/QmTMHziEAzbuv11AgVC3i3RpCtoxjHCciKL2tLBR3uQREe\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x292ecd48ea8e0d58e192c4ceeb617c0664f453d47c59b8311417fee3f6be6bbe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82c7de86e56e2d8192afddfcce24bc5af1b786c8799c0194f40e69f3a8aaa3ce\",\"dweb:/ipfs/Qmdr1z3iCuGgvU2UEfAyi2wsYx7aaVbn128zhNQP8jSHm9\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0x8e981fc1753981a493ece022a3aa947ab7a2be3ab4ec6678f9ef180fc61cb5a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d819d70571c509cbfb13bdcecea3850cc19d63095a63e13485c5719f2f5835c9\",\"dweb:/ipfs/QmVEzz3vZvfKbUkM8nAtixmXcwbtot3i5P1Bzngkkg9gqm\"]},\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xb40798a3d44b4028f7e56220a2fabb7c91416b0dce9413821f8d62f5bb7d152b\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://1fe861d8c6b2dbe5df20aa27053a4d5e2d848937c81b1918bd5a86847d85453c\",\"dweb:/ipfs/QmQ3LYRBh3pXynUEhxq8iaHuUCWpaoCkYJrp9Mc1dTGCgi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 50,
								"contract": "contracts/extension/Drop.sol:Drop",
								"label": "claimCondition",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(ClaimConditionList)743_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_struct(ClaimCondition)719_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IClaimCondition.ClaimCondition)",
								"numberOfBytes": "32",
								"value": "t_struct(ClaimCondition)719_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(ClaimCondition)719_storage": {
								"encoding": "inplace",
								"label": "struct IClaimCondition.ClaimCondition",
								"members": [
									{
										"astId": 704,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "startTimestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 706,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "maxClaimableSupply",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 708,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "supplyClaimed",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 710,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "quantityLimitPerWallet",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 712,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "merkleRoot",
										"offset": 0,
										"slot": "4",
										"type": "t_bytes32"
									},
									{
										"astId": 714,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "pricePerToken",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 716,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "currency",
										"offset": 0,
										"slot": "6",
										"type": "t_address"
									},
									{
										"astId": 718,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "metadata",
										"offset": 0,
										"slot": "7",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "256"
							},
							"t_struct(ClaimConditionList)743_storage": {
								"encoding": "inplace",
								"label": "struct IClaimConditionMultiPhase.ClaimConditionList",
								"members": [
									{
										"astId": 729,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "currentStartId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 731,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "count",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 736,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "conditions",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(ClaimCondition)719_storage)"
									},
									{
										"astId": 742,
										"contract": "contracts/extension/Drop.sol:Drop",
										"label": "supplyClaimedByWallet",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
								"notice": "Emitted when the contract's claim conditions are updated."
							},
							"TokensClaimed(uint256,address,address,uint256,uint256)": {
								"notice": "Emitted when tokens are claimed via `claim`."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IClaimCondition.sol": {
				"IClaimCondition": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The interface `IClaimCondition` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IClaimCondition.sol\":\"IClaimCondition\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x7eb50217f513a762467f67bf65b264f8b408d98ac755ab5b34505fa55dda7714\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fab23b3d54bd6bdafd5e43156df69d799e7f6e5fdbb2bc88f3a51c2c31586786\",\"dweb:/ipfs/QmTMHziEAzbuv11AgVC3i3RpCtoxjHCciKL2tLBR3uQREe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "The interface `IClaimCondition` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.",
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IClaimConditionMultiPhase.sol": {
				"IClaimConditionMultiPhase": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":\"IClaimConditionMultiPhase\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x7eb50217f513a762467f67bf65b264f8b408d98ac755ab5b34505fa55dda7714\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fab23b3d54bd6bdafd5e43156df69d799e7f6e5fdbb2bc88f3a51c2c31586786\",\"dweb:/ipfs/QmTMHziEAzbuv11AgVC3i3RpCtoxjHCciKL2tLBR3uQREe\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x292ecd48ea8e0d58e192c4ceeb617c0664f453d47c59b8311417fee3f6be6bbe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82c7de86e56e2d8192afddfcce24bc5af1b786c8799c0194f40e69f3a8aaa3ce\",\"dweb:/ipfs/Qmdr1z3iCuGgvU2UEfAyi2wsYx7aaVbn128zhNQP8jSHm9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.",
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IDrop.sol": {
				"IDrop": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxClaimableSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyClaimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadata",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct IClaimCondition.ClaimCondition[]",
									"name": "claimConditions",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "resetEligibility",
									"type": "bool"
								}
							],
							"name": "ClaimConditionsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimConditionIndex",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityClaimed",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "pricePerToken",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "bytes32[]",
											"name": "proof",
											"type": "bytes32[]"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										}
									],
									"internalType": "struct IDrop.AllowlistProof",
									"name": "allowlistProof",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "startTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "maxClaimableSupply",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyClaimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantityLimitPerWallet",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "string",
											"name": "metadata",
											"type": "string"
										}
									],
									"internalType": "struct IClaimCondition.ClaimCondition[]",
									"name": "phases",
									"type": "tuple[]"
								},
								{
									"internalType": "bool",
									"name": "resetClaimEligibility",
									"type": "bool"
								}
							],
							"name": "setClaimConditions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
								"params": {
									"allowlistProof": "The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.",
									"currency": "The currency in which to pay for the claim.",
									"data": "Arbitrary bytes data that can be leveraged in the implementation of this interface.",
									"pricePerToken": "The price per token to pay for the claim.",
									"quantity": "The quantity of NFTs to claim.",
									"receiver": "The receiver of the NFTs to claim."
								}
							},
							"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
								"params": {
									"phases": "Claim conditions in ascending order by `startTimestamp`.",
									"resetClaimEligibility": "Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": "84bb1e42",
							"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": "74bc7db7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"claimConditions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"resetEligibility\",\"type\":\"bool\"}],\"name\":\"ClaimConditionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimConditionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityClaimed\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"internalType\":\"struct IDrop.AllowlistProof\",\"name\":\"allowlistProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxClaimableSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityLimitPerWallet\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"internalType\":\"struct IClaimCondition.ClaimCondition[]\",\"name\":\"phases\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"resetClaimEligibility\",\"type\":\"bool\"}],\"name\":\"setClaimConditions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"params\":{\"allowlistProof\":\"The proof of the claimer's inclusion in the merkle root allowlist                                        of the claim conditions that apply.\",\"currency\":\"The currency in which to pay for the claim.\",\"data\":\"Arbitrary bytes data that can be leveraged in the implementation of this interface.\",\"pricePerToken\":\"The price per token to pay for the claim.\",\"quantity\":\"The quantity of NFTs to claim.\",\"receiver\":\"The receiver of the NFTs to claim.\"}},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"params\":{\"phases\":\"Claim conditions in ascending order by `startTimestamp`.\",\"resetClaimEligibility\":\"Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,                                  in the new claim conditions being set.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Emitted when the contract's claim conditions are updated.\"},\"TokensClaimed(uint256,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are claimed via `claim`.\"}},\"kind\":\"user\",\"methods\":{\"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)\":{\"notice\":\"Lets an account claim a given quantity of NFTs.\"},\"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)\":{\"notice\":\"Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\"}},\"notice\":\"The interface `IDrop` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IDrop.sol\":\"IDrop\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IClaimCondition.sol\":{\"keccak256\":\"0x7eb50217f513a762467f67bf65b264f8b408d98ac755ab5b34505fa55dda7714\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fab23b3d54bd6bdafd5e43156df69d799e7f6e5fdbb2bc88f3a51c2c31586786\",\"dweb:/ipfs/QmTMHziEAzbuv11AgVC3i3RpCtoxjHCciKL2tLBR3uQREe\"]},\"contracts/extension/interface/IClaimConditionMultiPhase.sol\":{\"keccak256\":\"0x292ecd48ea8e0d58e192c4ceeb617c0664f453d47c59b8311417fee3f6be6bbe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82c7de86e56e2d8192afddfcce24bc5af1b786c8799c0194f40e69f3a8aaa3ce\",\"dweb:/ipfs/Qmdr1z3iCuGgvU2UEfAyi2wsYx7aaVbn128zhNQP8jSHm9\"]},\"contracts/extension/interface/IDrop.sol\":{\"keccak256\":\"0x8e981fc1753981a493ece022a3aa947ab7a2be3ab4ec6678f9ef180fc61cb5a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d819d70571c509cbfb13bdcecea3850cc19d63095a63e13485c5719f2f5835c9\",\"dweb:/ipfs/QmVEzz3vZvfKbUkM8nAtixmXcwbtot3i5P1Bzngkkg9gqm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimConditionsUpdated((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
								"notice": "Emitted when the contract's claim conditions are updated."
							},
							"TokensClaimed(uint256,address,address,uint256,uint256)": {
								"notice": "Emitted when tokens are claimed via `claim`."
							}
						},
						"kind": "user",
						"methods": {
							"claim(address,uint256,address,uint256,(bytes32[],uint256,uint256,address),bytes)": {
								"notice": "Lets an account claim a given quantity of NFTs."
							},
							"setClaimConditions((uint256,uint256,uint256,uint256,bytes32,uint256,address,string)[],bool)": {
								"notice": "Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions."
							}
						},
						"notice": "The interface `IDrop` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten  or added to by the contract admin. At any moment, there is only one active claim condition.",
						"version": 1
					}
				}
			},
			"contracts/lib/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"author": "OpenZeppelin, thirdweb",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/MerkleProof.sol\":100:1361  library MerkleProof {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/MerkleProof.sol\":100:1361  library MerkleProof {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204ecf71dca97bf2c020fdf8fab86b9aa7a2a104dd313acc2c0cf88bababafe35164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204ecf71dca97bf2c020fdf8fab86b9aa7a2a104dd313acc2c0cf88bababafe35164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCF PUSH18 0xDCA97BF2C020FDF8FAB86B9AA7A2A104DD31 GASPRICE 0xCC 0x2C 0xC EXTCALL DUP12 0xAB 0xAB 0xAF CALLF 0x5164 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "100:1261:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204ecf71dca97bf2c020fdf8fab86b9aa7a2a104dd313acc2c0cf88bababafe35164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCF PUSH18 0xDCA97BF2C020FDF8FAB86B9AA7A2A104DD31 GASPRICE 0xCC 0x2C 0xC EXTCALL DUP12 0xAB 0xAB 0xAF CALLF 0x5164 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "100:1261:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_efficientHash(bytes32,bytes32)": "infinite",
								"verify(bytes32[] calldata,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 100,
									"end": 1361,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ecf71dca97bf2c020fdf8fab86b9aa7a2a104dd313acc2c0cf88bababafe35164736f6c634300081e0033",
									".code": [
										{
											"begin": 100,
											"end": 1361,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 100,
											"end": 1361,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/extension/Drop.sol",
								"contracts/extension/interface/IClaimCondition.sol",
								"contracts/extension/interface/IClaimConditionMultiPhase.sol",
								"contracts/extension/interface/IDrop.sol",
								"contracts/lib/MerkleProof.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"OpenZeppelin, thirdweb\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/MerkleProof.sol\":{\"keccak256\":\"0xb40798a3d44b4028f7e56220a2fabb7c91416b0dce9413821f8d62f5bb7d152b\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://1fe861d8c6b2dbe5df20aa27053a4d5e2d848937c81b1918bd5a86847d85453c\",\"dweb:/ipfs/QmQ3LYRBh3pXynUEhxq8iaHuUCWpaoCkYJrp9Mc1dTGCgi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/extension/Drop.sol": {
				"ast": {
					"absolutePath": "contracts/extension/Drop.sol",
					"exportedSymbols": {
						"Drop": [
							698
						],
						"IClaimCondition": [
							720
						],
						"IClaimConditionMultiPhase": [
							744
						],
						"IDrop": [
							811
						],
						"MerkleProof": [
							903
						]
					},
					"id": 699,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "contracts/extension/interface/IDrop.sol",
							"file": "./interface/IDrop.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 812,
							"src": "86:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/MerkleProof.sol",
							"file": "../lib/MerkleProof.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 699,
							"sourceUnit": 904,
							"src": "118:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IDrop",
										"nameLocations": [
											"178:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 811,
										"src": "178:5:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "178:5:0"
								}
							],
							"canonicalName": "Drop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 698,
							"linearizedBaseContracts": [
								698,
								811,
								744,
								720
							],
							"name": "Drop",
							"nameLocation": "170:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "190:59:0",
										"text": "@dev The sender is not authorized to perform the action"
									},
									"errorSelector": "56c4ef51",
									"id": 8,
									"name": "DropUnauthorized",
									"nameLocation": "260:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:2:0"
									},
									"src": "254:25:0"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "285:44:0",
										"text": "@dev Exceeded the max token total supply"
									},
									"errorSelector": "0656a73e",
									"id": 11,
									"name": "DropExceedMaxSupply",
									"nameLocation": "340:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:2:0"
									},
									"src": "334:28:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "368:34:0",
										"text": "@dev No active claim condition"
									},
									"errorSelector": "f40f1cc0",
									"id": 14,
									"name": "DropNoActiveCondition",
									"nameLocation": "413:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:0"
									},
									"src": "407:30:0"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "443:50:0",
										"text": "@dev Claim condition invalid currency or price"
									},
									"errorSelector": "f13474e9",
									"id": 25,
									"name": "DropClaimInvalidTokenPrice",
									"nameLocation": "504:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "expectedCurrency",
												"nameLocation": "548:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "540:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "expectedPricePerToken",
												"nameLocation": "582:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "574:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "actualCurrency",
												"nameLocation": "621:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "613:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "actualExpectedPricePerToken",
												"nameLocation": "653:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "645:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:156:0"
									},
									"src": "498:189:0"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "693:39:0",
										"text": "@dev Claim condition exceeded limit"
									},
									"errorSelector": "9e7762db",
									"id": 32,
									"name": "DropClaimExceedLimit",
									"nameLocation": "743:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "772:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "764:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "actual",
												"nameLocation": "790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:34:0"
									},
									"src": "737:61:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "804:44:0",
										"text": "@dev Claim condition exceeded max supply"
									},
									"errorSelector": "fe381cc9",
									"id": 39,
									"name": "DropClaimExceedMaxSupply",
									"nameLocation": "859:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "892:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "884:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "actual",
												"nameLocation": "910:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "902:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:34:0"
									},
									"src": "853:65:0"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "924:40:0",
										"text": "@dev Claim condition not started yet"
									},
									"errorSelector": "4562091e",
									"id": 46,
									"name": "DropClaimNotStarted",
									"nameLocation": "975:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "1003:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "995:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "actual",
												"nameLocation": "1021:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1013:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:34:0"
									},
									"src": "969:60:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1219:51:0",
										"text": "@dev The active conditions for claiming tokens."
									},
									"functionSelector": "d637ed59",
									"id": 50,
									"mutability": "mutable",
									"name": "claimCondition",
									"nameLocation": "1301:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 698,
									"src": "1275:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
										"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList"
									},
									"typeName": {
										"id": 49,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 48,
											"name": "ClaimConditionList",
											"nameLocations": [
												"1275:18:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 743,
											"src": "1275:18:0"
										},
										"referencedDeclaration": 743,
										"src": "1275:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage_ptr",
											"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										800
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "1787:944:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1810:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1821:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 71,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 72,
															"name": "_pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1843:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 73,
															"name": "_allowlistProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1859:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															}
														},
														{
															"id": 74,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 68,
														"name": "_beforeClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1797:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_AllowlistProof_$761_calldata_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,struct IDrop.AllowlistProof calldata,bytes memory)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1797:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1797:85:0"
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "activeConditionId",
														"nameLocation": "1901:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 147,
														"src": "1893:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 81,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 79,
														"name": "getActiveClaimConditionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "1921:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1893:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "activeConditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1971:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 84,
																"name": "_dropMsgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "1990:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
																	"typeString": "function () returns (address)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1990:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "2008:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 87,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "2019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 88,
															"name": "_pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2030:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 89,
															"name": "_allowlistProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "2046:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															}
														],
														"id": 82,
														"name": "verifyClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "1959:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_AllowlistProof_$761_calldata_ptr_$returns$_t_bool_$",
															"typeString": "function (uint256,address,uint256,address,uint256,struct IDrop.AllowlistProof calldata) view returns (bool)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1959:103:0"
											},
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 92,
																	"name": "claimCondition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "2107:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																		"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2122:10:0",
																"memberName": "conditions",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 736,
																"src": "2107:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																	"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																}
															},
															"id": 96,
															"indexExpression": {
																"id": 94,
																"name": "activeConditionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2133:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2107:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																"typeString": "struct IClaimCondition.ClaimCondition storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2152:13:0",
														"memberName": "supplyClaimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 708,
														"src": "2107:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 98,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2169:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2107:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2107:71:0"
											},
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 101,
																	"name": "claimCondition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "2188:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																		"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2203:21:0",
																"memberName": "supplyClaimedByWallet",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 742,
																"src": "2188:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 107,
															"indexExpression": {
																"id": 103,
																"name": "activeConditionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2225:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2188:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 108,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 104,
																"name": "_dropMsgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "2244:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
																	"typeString": "function () returns (address)"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2244:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2188:73:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 109,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2265:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2188:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2188:86:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2360:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2352:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2352:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2352:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "2364:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 118,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "2375:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "_pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2386:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "_collectPriceOnClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "2331:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,address,uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2331:70:0"
											},
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "2468:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 147,
														"src": "2460:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"arguments": [
														{
															"id": 125,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "2506:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 126,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "2517:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 124,
														"name": "_transferTokensOnClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "2483:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2460:67:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 130,
															"name": "activeConditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2557:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_dropMsgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "2576:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
																	"typeString": "function () returns (address)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2576:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "2594:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 134,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2605:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 135,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "2619:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 129,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "2543:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "EmitStatement",
												"src": "2538:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 139,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "2652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 140,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "2663:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 141,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "2674:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "_pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2685:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 143,
															"name": "_allowlistProof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "2701:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															}
														},
														{
															"id": 144,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "2718:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																"typeString": "struct IDrop.AllowlistProof calldata"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 138,
														"name": "_afterClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "2640:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_struct$_AllowlistProof_$761_calldata_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,struct IDrop.AllowlistProof calldata,bytes memory)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "2640:84:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1501:38:0",
										"text": "@dev Lets an account claim tokens."
									},
									"functionSelector": "84bb1e42",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "1553:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 66,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1778:8:0"
									},
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "1576:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1568:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "1603:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1595:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "1630:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1622:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_pricePerToken",
												"nameLocation": "1657:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1649:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_allowlistProof",
												"nameLocation": "1705:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1681:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
													"typeString": "struct IDrop.AllowlistProof"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "AllowlistProof",
														"nameLocations": [
															"1681:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "1681:14:0"
													},
													"referencedDeclaration": 761,
													"src": "1681:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AllowlistProof_$761_storage_ptr",
														"typeString": "struct IDrop.AllowlistProof"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1743:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1730:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 63,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1730:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1558:196:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1787:0:0"
									},
									"scope": 698,
									"src": "1544:1187:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										810
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2938:2611:0",
										"statements": [
											{
												"condition": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2952:25:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 159,
															"name": "_canSetClaimConditions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "2953:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2953:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2948:81:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2979:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 162,
																	"name": "DropUnauthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "3000:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3000:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2993:25:0"
														}
													]
												}
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"mutability": "mutable",
														"name": "existingStartIndex",
														"nameLocation": "3047:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3039:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"expression": {
														"id": 169,
														"name": "claimCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3068:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
															"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3083:14:0",
													"memberName": "currentStartId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 729,
													"src": "3068:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3039:58:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "existingPhaseCount",
														"nameLocation": "3115:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3107:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"expression": {
														"id": 174,
														"name": "claimCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3136:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
															"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3151:5:0",
													"memberName": "count",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 731,
													"src": "3136:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3107:49:0"
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "newStartIndex",
														"nameLocation": "3529:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3521:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"documentation": "  The mapping `supplyClaimedByWallet` uses a claim condition's UID as a key.\n  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n  conditions in `_conditions`, effectively resetting the restrictions on claims expressed\n  by `supplyClaimedByWallet`.",
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "existingStartIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "3545:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:42:0"
											},
											{
												"condition": {
													"id": 182,
													"name": "_resetClaimEligibility",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 155,
													"src": "3577:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "IfStatement",
												"src": "3573:108:0",
												"trueBody": {
													"id": 189,
													"nodeType": "Block",
													"src": "3601:80:0",
													"statements": [
														{
															"expression": {
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "newStartIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "3615:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 184,
																		"name": "existingStartIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "3631:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 185,
																		"name": "existingPhaseCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "3652:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3631:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3615:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 188,
															"nodeType": "ExpressionStatement",
															"src": "3615:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 191,
															"name": "claimCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "3691:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3706:5:0",
														"memberName": "count",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 731,
														"src": "3691:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 194,
															"name": "_conditions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "3714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3726:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3714:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3691:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "3691:41:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 198,
															"name": "claimCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "3742:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3757:14:0",
														"memberName": "currentStartId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 729,
														"src": "3742:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 201,
														"name": "newStartIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3774:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3742:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "3742:45:0"
											},
											{
												"assignments": [
													205
												],
												"declarations": [
													{
														"constant": false,
														"id": 205,
														"mutability": "mutable",
														"name": "lastConditionStartTimestamp",
														"nameLocation": "3806:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 339,
														"src": "3798:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 206,
												"nodeType": "VariableDeclarationStatement",
												"src": "3798:35:0"
											},
											{
												"body": {
													"id": 283,
													"nodeType": "Block",
													"src": "3892:594:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 219,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "3914:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3919:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3914:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 222,
																				"name": "lastConditionStartTimestamp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 205,
																				"src": "3924:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 223,
																						"name": "_conditions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "3954:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																						}
																					},
																					"id": 225,
																					"indexExpression": {
																						"id": 224,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 208,
																						"src": "3966:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3954:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ClaimCondition_$719_calldata_ptr",
																						"typeString": "struct IClaimCondition.ClaimCondition calldata"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3969:14:0",
																				"memberName": "startTimestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 704,
																				"src": "3954:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3924:59:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3914:69:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5354",
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3985:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																			"typeString": "literal_string \"ST\""
																		},
																		"value": "ST"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																			"typeString": "literal_string \"ST\""
																		}
																	],
																	"id": 218,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:84:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 231,
															"nodeType": "ExpressionStatement",
															"src": "3906:84:0"
														},
														{
															"assignments": [
																233
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 233,
																	"mutability": "mutable",
																	"name": "supplyClaimedAlready",
																	"nameLocation": "4013:20:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 283,
																	"src": "4005:28:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 232,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4005:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 241,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 234,
																			"name": "claimCondition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "4036:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																				"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4051:10:0",
																		"memberName": "conditions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 736,
																		"src": "4036:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																			"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																		}
																	},
																	"id": 239,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 236,
																			"name": "newStartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "4062:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 237,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "4078:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4062:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4036:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																		"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																	}
																},
																"id": 240,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4081:13:0",
																"memberName": "supplyClaimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 708,
																"src": "4036:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4005:89:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 242,
																	"name": "supplyClaimedAlready",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "4112:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 243,
																			"name": "_conditions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "4135:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																			}
																		},
																		"id": 245,
																		"indexExpression": {
																			"id": 244,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "4147:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4135:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ClaimCondition_$719_calldata_ptr",
																			"typeString": "struct IClaimCondition.ClaimCondition calldata"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4150:18:0",
																	"memberName": "maxClaimableSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 706,
																	"src": "4135:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4112:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 252,
															"nodeType": "IfStatement",
															"src": "4108:123:0",
															"trueBody": {
																"id": 251,
																"nodeType": "Block",
																"src": "4170:61:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 248,
																				"name": "DropExceedMaxSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "4195:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4195:21:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 250,
																		"nodeType": "RevertStatement",
																		"src": "4188:28:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 253,
																			"name": "claimCondition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "4245:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																				"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4260:10:0",
																		"memberName": "conditions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 736,
																		"src": "4245:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																			"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																		}
																	},
																	"id": 259,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 255,
																			"name": "newStartIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "4271:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 256,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "4287:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4271:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4245:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																		"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 260,
																		"name": "_conditions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "4292:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																			"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																		}
																	},
																	"id": 262,
																	"indexExpression": {
																		"id": 261,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "4304:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4292:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimCondition_$719_calldata_ptr",
																		"typeString": "struct IClaimCondition.ClaimCondition calldata"
																	}
																},
																"src": "4245:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																	"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "4245:61:0"
														},
														{
															"expression": {
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 265,
																				"name": "claimCondition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "4320:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																					"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																				}
																			},
																			"id": 270,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4335:10:0",
																			"memberName": "conditions",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "4320:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																				"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																			}
																		},
																		"id": 271,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 267,
																				"name": "newStartIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "4346:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 268,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "4362:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4346:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4320:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																			"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4365:13:0",
																	"memberName": "supplyClaimed",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 708,
																	"src": "4320:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 273,
																	"name": "supplyClaimedAlready",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "4381:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4320:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "4320:81:0"
														},
														{
															"expression": {
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 276,
																	"name": "lastConditionStartTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4416:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 277,
																			"name": "_conditions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "4446:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																			}
																		},
																		"id": 279,
																		"indexExpression": {
																			"id": 278,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "4458:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4446:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ClaimCondition_$719_calldata_ptr",
																			"typeString": "struct IClaimCondition.ClaimCondition calldata"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4461:14:0",
																	"memberName": "startTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 704,
																	"src": "4446:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4416:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 282,
															"nodeType": "ExpressionStatement",
															"src": "4416:59:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3863:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 212,
															"name": "_conditions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "3867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3879:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3867:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3863:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"initializationExpression": {
													"assignments": [
														208
													],
													"declarations": [
														{
															"constant": false,
															"id": 208,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3856:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 284,
															"src": "3848:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 207,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 210,
													"initialValue": {
														"hexValue": "30",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3860:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3848:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3887:3:0",
														"subExpression": {
															"id": 215,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3887:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"nodeType": "ExpressionStatement",
													"src": "3887:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3843:643:0"
											},
											{
												"condition": {
													"id": 285,
													"name": "_resetClaimEligibility",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 155,
													"src": "5026:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": "  Gas refunds (as much as possible)\n  If `_resetClaimEligibility == true`, we assign completely new UIDs to the claim\n  conditions in `_conditions`. So, we delete claim conditions with UID < `newStartIndex`.\n  If `_resetClaimEligibility == false`, and there are more existing claim conditions\n  than in `_conditions`, we delete the existing claim conditions that don't get replaced\n  by the conditions in `_conditions`.",
												"falseBody": {
													"id": 332,
													"nodeType": "Block",
													"src": "5209:259:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 305,
																	"name": "existingPhaseCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "5227:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"id": 306,
																		"name": "_conditions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "5248:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																			"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5260:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5248:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5227:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 331,
															"nodeType": "IfStatement",
															"src": "5223:235:0",
															"trueBody": {
																"id": 330,
																"nodeType": "Block",
																"src": "5268:190:0",
																"statements": [
																	{
																		"body": {
																			"id": 328,
																			"nodeType": "Block",
																			"src": "5352:92:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 326,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "delete",
																						"prefix": true,
																						"src": "5374:51:0",
																						"subExpression": {
																							"baseExpression": {
																								"expression": {
																									"id": 320,
																									"name": "claimCondition",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 50,
																									"src": "5381:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																										"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																									}
																								},
																								"id": 321,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5396:10:0",
																								"memberName": "conditions",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 736,
																								"src": "5381:25:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																									"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																								}
																							},
																							"id": 325,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 322,
																									"name": "newStartIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 179,
																									"src": "5407:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"id": 323,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 310,
																									"src": "5423:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "5407:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5381:44:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																								"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 327,
																					"nodeType": "ExpressionStatement",
																					"src": "5374:51:0"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 314,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 310,
																				"src": "5323:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 315,
																				"name": "existingPhaseCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 173,
																				"src": "5327:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5323:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 329,
																		"initializationExpression": {
																			"assignments": [
																				310
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 310,
																					"mutability": "mutable",
																					"name": "i",
																					"nameLocation": "5299:1:0",
																					"nodeType": "VariableDeclaration",
																					"scope": 329,
																					"src": "5291:9:0",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 309,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5291:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 313,
																			"initialValue": {
																				"expression": {
																					"id": 311,
																					"name": "_conditions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 153,
																					"src": "5303:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
																					}
																				},
																				"id": 312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5315:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "5303:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "5291:30:0"
																		},
																		"isSimpleCounterLoop": true,
																		"loopExpression": {
																			"expression": {
																				"id": 318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5347:3:0",
																				"subExpression": {
																					"id": 317,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 310,
																					"src": "5347:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 319,
																			"nodeType": "ExpressionStatement",
																			"src": "5347:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "5286:158:0"
																	}
																]
															}
														}
													]
												},
												"id": 333,
												"nodeType": "IfStatement",
												"src": "5022:446:0",
												"trueBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "5050:153:0",
													"statements": [
														{
															"body": {
																"id": 302,
																"nodeType": "Block",
																"src": "5125:68:0",
																"statements": [
																	{
																		"expression": {
																			"id": 300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "5143:35:0",
																			"subExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 296,
																						"name": "claimCondition",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 50,
																						"src": "5150:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																							"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																						}
																					},
																					"id": 297,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5165:10:0",
																					"memberName": "conditions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 736,
																					"src": "5150:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																						"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																					}
																				},
																				"id": 299,
																				"indexExpression": {
																					"id": 298,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 287,
																					"src": "5176:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5150:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																					"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 301,
																		"nodeType": "ExpressionStatement",
																		"src": "5143:35:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 290,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "5101:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 291,
																	"name": "newStartIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "5105:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5101:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"initializationExpression": {
																"assignments": [
																	287
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 287,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5077:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 303,
																		"src": "5069:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 286,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5069:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 289,
																"initialValue": {
																	"id": 288,
																	"name": "existingStartIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5081:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5069:30:0"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5120:3:0",
																	"subExpression": {
																		"id": 293,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "5120:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 295,
																"nodeType": "ExpressionStatement",
																"src": "5120:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5064:129:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 335,
															"name": "_conditions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5506:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
															}
														},
														{
															"id": 336,
															"name": "_resetClaimEligibility",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "5519:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition calldata[] calldata"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "ClaimConditionsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5483:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_ClaimCondition_$719_memory_ptr_$dyn_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (struct IClaimCondition.ClaimCondition memory[] memory,bool)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5483:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "5478:64:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "2737:52:0",
										"text": "@dev Lets a contract admin set claim conditions."
									},
									"functionSelector": "74bc7db7",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimConditions",
									"nameLocation": "2803:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2929:8:0"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "_conditions",
												"nameLocation": "2857:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2831:37:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IClaimCondition.ClaimCondition[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 150,
															"name": "ClaimCondition",
															"nameLocations": [
																"2831:14:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 719,
															"src": "2831:14:0"
														},
														"referencedDeclaration": 719,
														"src": "2831:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "2831:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_storage_$dyn_storage_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_resetClaimEligibility",
												"nameLocation": "2883:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "2878:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:90:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2938:0:0"
									},
									"scope": 698,
									"src": "2794:2755:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5910:2476:0",
										"statements": [
											{
												"assignments": [
													361
												],
												"declarations": [
													{
														"constant": false,
														"id": 361,
														"mutability": "mutable",
														"name": "currentClaimPhase",
														"nameLocation": "5942:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "5920:39:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition"
														},
														"typeName": {
															"id": 360,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 359,
																"name": "ClaimCondition",
																"nameLocations": [
																	"5920:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 719,
																"src": "5920:14:0"
															},
															"referencedDeclaration": 719,
															"src": "5920:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 366,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 362,
															"name": "claimCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "5962:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5977:10:0",
														"memberName": "conditions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 736,
														"src": "5962:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
															"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
														}
													},
													"id": 365,
													"indexExpression": {
														"id": 364,
														"name": "_conditionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "5988:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5962:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
														"typeString": "struct IClaimCondition.ClaimCondition storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5920:81:0"
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "claimLimit",
														"nameLocation": "6019:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "6011:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6011:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"expression": {
														"id": 369,
														"name": "currentClaimPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6032:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition memory"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6050:22:0",
													"memberName": "quantityLimitPerWallet",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 710,
													"src": "6032:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6011:61:0"
											},
											{
												"assignments": [
													373
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "claimPrice",
														"nameLocation": "6090:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "6082:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 372,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"expression": {
														"id": 374,
														"name": "currentClaimPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6103:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition memory"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6121:13:0",
													"memberName": "pricePerToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 714,
													"src": "6103:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6082:52:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "claimCurrency",
														"nameLocation": "6152:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "6144:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6144:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"expression": {
														"id": 379,
														"name": "currentClaimPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6168:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition memory"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6186:8:0",
													"memberName": "currency",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 716,
													"src": "6168:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6144:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 382,
															"name": "currentClaimPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "6404:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition memory"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6422:10:0",
														"memberName": "merkleRoot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 712,
														"src": "6404:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 384,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "6436:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6436:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6404:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 413,
												"nodeType": "IfStatement",
												"src": "6400:515:0",
												"trueBody": {
													"id": 412,
													"nodeType": "Block",
													"src": "6448:467:0",
													"statements": [
														{
															"expression": {
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 389,
																			"name": "isOverride",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "6463:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		null
																	],
																	"id": 390,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6462:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$__$",
																		"typeString": "tuple(bool,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 393,
																				"name": "_allowlistProof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 354,
																				"src": "6515:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																					"typeString": "struct IDrop.AllowlistProof calldata"
																				}
																			},
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:5:0",
																			"memberName": "proof",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 754,
																			"src": "6515:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																				"typeString": "bytes32[] calldata"
																			}
																		},
																		{
																			"expression": {
																				"id": 395,
																				"name": "currentClaimPhase",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 361,
																				"src": "6554:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																					"typeString": "struct IClaimCondition.ClaimCondition memory"
																				}
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6572:10:0",
																			"memberName": "merkleRoot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 712,
																			"src": "6554:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 400,
																							"name": "_claimer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 345,
																							"src": "6673:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"id": 401,
																								"name": "_allowlistProof",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 354,
																								"src": "6707:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																									"typeString": "struct IDrop.AllowlistProof calldata"
																								}
																							},
																							"id": 402,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6723:22:0",
																							"memberName": "quantityLimitPerWallet",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 756,
																							"src": "6707:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 403,
																								"name": "_allowlistProof",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 354,
																								"src": "6771:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																									"typeString": "struct IDrop.AllowlistProof calldata"
																								}
																							},
																							"id": 404,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6787:13:0",
																							"memberName": "pricePerToken",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 758,
																							"src": "6771:29:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 405,
																								"name": "_allowlistProof",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 354,
																								"src": "6826:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																									"typeString": "struct IDrop.AllowlistProof calldata"
																								}
																							},
																							"id": 406,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6842:8:0",
																							"memberName": "currency",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 760,
																							"src": "6826:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 398,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "6631:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 399,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6635:12:0",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "6631:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6631:241:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 397,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "6600:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6600:290:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																				"typeString": "bytes32[] calldata"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"expression": {
																			"id": 391,
																			"name": "MerkleProof",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "6479:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_MerkleProof_$903_$",
																				"typeString": "type(library MerkleProof)"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6491:6:0",
																		"memberName": "verify",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 890,
																		"src": "6479:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_t_uint256_$",
																			"typeString": "function (bytes32[] calldata,bytes32,bytes32) pure returns (bool,uint256)"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6479:425:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"src": "6462:442:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 411,
															"nodeType": "ExpressionStatement",
															"src": "6462:442:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 414,
													"name": "isOverride",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 357,
													"src": "6929:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "6925:534:0",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "6941:518:0",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 415,
																	"name": "claimLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "6955:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 416,
																				"name": "_allowlistProof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 354,
																				"src": "6968:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																					"typeString": "struct IDrop.AllowlistProof calldata"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6984:22:0",
																			"memberName": "quantityLimitPerWallet",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 756,
																			"src": "6968:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7010:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6968:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 422,
																		"name": "claimLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "7087:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "6968:129:0",
																	"trueExpression": {
																		"expression": {
																			"id": 420,
																			"name": "_allowlistProof",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "7030:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																				"typeString": "struct IDrop.AllowlistProof calldata"
																			}
																		},
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7046:22:0",
																		"memberName": "quantityLimitPerWallet",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 756,
																		"src": "7030:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6955:142:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6955:142:0"
														},
														{
															"expression": {
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 426,
																	"name": "claimPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "7111:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 427,
																				"name": "_allowlistProof",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 354,
																				"src": "7124:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																					"typeString": "struct IDrop.AllowlistProof calldata"
																				}
																			},
																			"id": 428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "7140:13:0",
																			"memberName": "pricePerToken",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 758,
																			"src": "7124:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "7162:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 430,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "7162:7:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 429,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "7157:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7157:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "7171:3:0",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "7157:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7124:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 437,
																		"name": "claimPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7241:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7124:127:0",
																	"trueExpression": {
																		"expression": {
																			"id": 435,
																			"name": "_allowlistProof",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "7193:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																				"typeString": "struct IDrop.AllowlistProof calldata"
																			}
																		},
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7209:13:0",
																		"memberName": "pricePerToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 758,
																		"src": "7193:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:140:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 440,
															"nodeType": "ExpressionStatement",
															"src": "7111:140:0"
														},
														{
															"expression": {
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 441,
																	"name": "claimCurrency",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "7265:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 442,
																					"name": "_allowlistProof",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "7281:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																						"typeString": "struct IDrop.AllowlistProof calldata"
																					}
																				},
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7297:13:0",
																				"memberName": "pricePerToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 758,
																				"src": "7281:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 446,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "7319:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 445,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "7319:7:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							}
																						],
																						"id": 444,
																						"name": "type",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967269,
																						"src": "7314:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7314:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_meta_type_t_uint256",
																						"typeString": "type(uint256)"
																					}
																				},
																				"id": 448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "7328:3:0",
																				"memberName": "max",
																				"nodeType": "MemberAccess",
																				"src": "7314:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7281:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 450,
																					"name": "_allowlistProof",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "7335:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																						"typeString": "struct IDrop.AllowlistProof calldata"
																					}
																				},
																				"id": 451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7351:8:0",
																				"memberName": "currency",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 760,
																				"src": "7335:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 454,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "7371:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7363:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 452,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "7363:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7363:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7335:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "7281:92:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 460,
																		"name": "claimCurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "7435:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7281:167:0",
																	"trueExpression": {
																		"expression": {
																			"id": 458,
																			"name": "_allowlistProof",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "7392:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
																				"typeString": "struct IDrop.AllowlistProof calldata"
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7408:8:0",
																		"memberName": "currency",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 760,
																		"src": "7392:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7265:183:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 463,
															"nodeType": "ExpressionStatement",
															"src": "7265:183:0"
														}
													]
												}
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "supplyClaimedByWallet",
														"nameLocation": "7477:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "7469:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 468,
																"name": "claimCondition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "7501:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																	"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7516:21:0",
															"memberName": "supplyClaimedByWallet",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 742,
															"src": "7501:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 471,
														"indexExpression": {
															"id": 470,
															"name": "_conditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "7538:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7501:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 473,
													"indexExpression": {
														"id": 472,
														"name": "_claimer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "7552:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7501:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7469:92:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 475,
															"name": "_currency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "7576:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 476,
															"name": "claimCurrency",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "7589:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "7576:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 478,
															"name": "_pricePerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "7606:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 479,
															"name": "claimPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "7624:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7606:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7576:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 490,
												"nodeType": "IfStatement",
												"src": "7572:176:0",
												"trueBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "7636:112:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "_currency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "7684:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 484,
																		"name": "_pricePerToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 351,
																		"src": "7695:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 485,
																		"name": "claimCurrency",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "7711:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 486,
																		"name": "claimPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7726:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 482,
																	"name": "DropClaimInvalidTokenPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "7657:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address,uint256) pure returns (error)"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7657:80:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 488,
															"nodeType": "RevertStatement",
															"src": "7650:87:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 491,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "7762:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7775:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7762:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 494,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "7781:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 495,
																		"name": "supplyClaimedByWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "7793:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7781:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 497,
																	"name": "claimLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "7817:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7781:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 499,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7780:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7762:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "IfStatement",
												"src": "7758:171:0",
												"trueBody": {
													"id": 508,
													"nodeType": "Block",
													"src": "7830:99:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 502,
																		"name": "claimLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "7872:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 503,
																			"name": "_quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "7884:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 504,
																			"name": "supplyClaimedByWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "7896:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7884:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 501,
																	"name": "DropClaimExceedLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "7851:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7851:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 507,
															"nodeType": "RevertStatement",
															"src": "7844:74:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 510,
																"name": "currentClaimPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "7943:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																	"typeString": "struct IClaimCondition.ClaimCondition memory"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7961:13:0",
															"memberName": "supplyClaimed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 708,
															"src": "7943:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 512,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "7977:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7943:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 514,
															"name": "currentClaimPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "7989:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition memory"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8007:18:0",
														"memberName": "maxClaimableSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "7989:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7943:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "7939:273:0",
												"trueBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "8027:185:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 518,
																			"name": "currentClaimPhase",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "8090:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																				"typeString": "struct IClaimCondition.ClaimCondition memory"
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8108:18:0",
																		"memberName": "maxClaimableSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 706,
																		"src": "8090:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 520,
																				"name": "currentClaimPhase",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 361,
																				"src": "8144:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																					"typeString": "struct IClaimCondition.ClaimCondition memory"
																				}
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8162:13:0",
																			"memberName": "supplyClaimed",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 708,
																			"src": "8144:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 522,
																			"name": "_quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "8178:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8144:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 517,
																	"name": "DropClaimExceedMaxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "8048:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8048:153:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 525,
															"nodeType": "RevertStatement",
															"src": "8041:160:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 528,
															"name": "currentClaimPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "8226:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																"typeString": "struct IClaimCondition.ClaimCondition memory"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8244:14:0",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 704,
														"src": "8226:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 530,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8261:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8267:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8261:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8226:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "8222:158:0",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "8278:102:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 534,
																			"name": "currentClaimPhase",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 361,
																			"src": "8319:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
																				"typeString": "struct IClaimCondition.ClaimCondition memory"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8337:14:0",
																		"memberName": "startTimestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 704,
																		"src": "8319:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 536,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8353:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8359:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8353:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 533,
																	"name": "DropClaimNotStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "8299:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8299:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "8292:77:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "5555:86:0",
										"text": "@dev Checks a request to claim NFTs against the active claim condition's criteria."
									},
									"functionSelector": "23a2902b",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyClaim",
									"nameLocation": "5655:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "_conditionId",
												"nameLocation": "5684:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5676:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_claimer",
												"nameLocation": "5714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "5740:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5732:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "5767:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5759:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "_pricePerToken",
												"nameLocation": "5794:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5786:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "_allowlistProof",
												"nameLocation": "5842:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5818:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
													"typeString": "struct IDrop.AllowlistProof"
												},
												"typeName": {
													"id": 353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 352,
														"name": "AllowlistProof",
														"nameLocations": [
															"5818:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "5818:14:0"
													},
													"referencedDeclaration": 761,
													"src": "5818:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AllowlistProof_$761_storage_ptr",
														"typeString": "struct IDrop.AllowlistProof"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5666:197:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "isOverride",
												"nameLocation": "5898:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5893:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5892:17:0"
									},
									"scope": 698,
									"src": "5646:2740:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "8541:309:0",
										"statements": [
											{
												"body": {
													"id": 580,
													"nodeType": "Block",
													"src": "8662:141:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 564,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8680:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8686:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8680:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 566,
																				"name": "claimCondition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "8699:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																					"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																				}
																			},
																			"id": 567,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8714:10:0",
																			"memberName": "conditions",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "8699:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																				"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
																			}
																		},
																		"id": 571,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 568,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "8725:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8729:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8725:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8699:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
																			"typeString": "struct IClaimCondition.ClaimCondition storage ref"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8732:14:0",
																	"memberName": "startTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 704,
																	"src": "8699:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8680:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 579,
															"nodeType": "IfStatement",
															"src": "8676:117:0",
															"trueBody": {
																"id": 578,
																"nodeType": "Block",
																"src": "8748:45:0",
																"statements": [
																	{
																		"expression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 574,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "8773:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8777:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "8773:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 548,
																		"id": 577,
																		"nodeType": "Return",
																		"src": "8766:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "8622:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 558,
															"name": "claimCondition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "8626:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8641:14:0",
														"memberName": "currentStartId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 729,
														"src": "8626:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8622:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"initializationExpression": {
													"assignments": [
														550
													],
													"declarations": [
														{
															"constant": false,
															"id": 550,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8564:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 581,
															"src": "8556:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 549,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 556,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 551,
																"name": "claimCondition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "8568:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																	"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8583:14:0",
															"memberName": "currentStartId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 729,
															"src": "8568:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 553,
																"name": "claimCondition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "8600:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																	"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8615:5:0",
															"memberName": "count",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 731,
															"src": "8600:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8568:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8556:64:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "8657:3:0",
														"subExpression": {
															"id": 561,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "8657:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 563,
													"nodeType": "ExpressionStatement",
													"src": "8657:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8551:252:0"
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 582,
														"name": "DropNoActiveCondition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "8820:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
															"typeString": "function () pure returns (error)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8820:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_error",
														"typeString": "error"
													}
												},
												"id": 584,
												"nodeType": "RevertStatement",
												"src": "8813:30:0"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "8392:77:0",
										"text": "@dev At any given moment, returns the uid for the active claim condition."
									},
									"functionSelector": "c68907de",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveClaimConditionId",
									"nameLocation": "8483:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8508:2:0"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "8532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8531:9:0"
									},
									"scope": 698,
									"src": "8474:376:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "9024:68:0",
										"statements": [
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "condition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "9034:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"expression": {
																"id": 596,
																"name": "claimCondition",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "9046:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																	"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9061:10:0",
															"memberName": "conditions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 736,
															"src": "9046:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
																"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition storage ref)"
															}
														},
														"id": 599,
														"indexExpression": {
															"id": 598,
															"name": "_conditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "9072:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9046:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_storage",
															"typeString": "struct IClaimCondition.ClaimCondition storage ref"
														}
													},
													"src": "9034:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition memory"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "9034:51:0"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "8856:54:0",
										"text": "@dev Returns the claim condition at the given uid."
									},
									"functionSelector": "6f8934f4",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimConditionById",
									"nameLocation": "8924:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "_conditionId",
												"nameLocation": "8954:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "8946:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8945:22:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "9013:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "8991:31:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ClaimCondition_$719_memory_ptr",
													"typeString": "struct IClaimCondition.ClaimCondition"
												},
												"typeName": {
													"id": 592,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 591,
														"name": "ClaimCondition",
														"nameLocations": [
															"8991:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 719,
														"src": "8991:14:0"
													},
													"referencedDeclaration": 719,
													"src": "8991:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:33:0"
									},
									"scope": 698,
									"src": "8915:177:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "9322:101:0",
										"statements": [
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 613,
														"name": "supplyClaimedByWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "9332:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 614,
																	"name": "claimCondition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "9356:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ClaimConditionList_$743_storage",
																		"typeString": "struct IClaimConditionMultiPhase.ClaimConditionList storage ref"
																	}
																},
																"id": 615,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9371:21:0",
																"memberName": "supplyClaimedByWallet",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 742,
																"src": "9356:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 617,
															"indexExpression": {
																"id": 616,
																"name": "_conditionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "9393:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9356:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 619,
														"indexExpression": {
															"id": 618,
															"name": "_claimer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "9407:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9356:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9332:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "9332:84:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "9098:71:0",
										"text": "@dev Returns the supply claimed by claimer for a given conditionId."
									},
									"functionSelector": "ad1eefc5",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupplyClaimedByWallet",
									"nameLocation": "9183:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "_conditionId",
												"nameLocation": "9225:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "9217:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "_claimer",
												"nameLocation": "9255:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "9247:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9207:62:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "supplyClaimedByWallet",
												"nameLocation": "9299:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "9291:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9290:31:0"
									},
									"scope": 698,
									"src": "9174:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "9772:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 629,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9789:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9793:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9789:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 628,
												"id": 631,
												"nodeType": "Return",
												"src": "9782:17:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "9650:56:0",
										"text": "@dev Exposes the ability to override the msg sender."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_dropMsgSender",
									"nameLocation": "9720:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9734:2:0"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "9763:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9762:9:0"
									},
									"scope": 698,
									"src": "9711:95:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "10101:2:0",
										"statements": []
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "9812:49:0",
										"text": "@dev Runs before every `claim` function call."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeClaim",
									"nameLocation": "9875:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "9905:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9897:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "9932:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9924:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "9959:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9951:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "_pricePerToken",
												"nameLocation": "9986:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "9978:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "_allowlistProof",
												"nameLocation": "10034:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "10010:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
													"typeString": "struct IDrop.AllowlistProof"
												},
												"typeName": {
													"id": 644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 643,
														"name": "AllowlistProof",
														"nameLocations": [
															"10010:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "10010:14:0"
													},
													"referencedDeclaration": 761,
													"src": "10010:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AllowlistProof_$761_storage_ptr",
														"typeString": "struct IDrop.AllowlistProof"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10072:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "10059:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10059:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9887:196:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10101:0:0"
									},
									"scope": 698,
									"src": "9866:237:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "10396:2:0",
										"statements": []
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "10109:48:0",
										"text": "@dev Runs after every `claim` function call."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterClaim",
									"nameLocation": "10171:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "10200:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10192:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "10227:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10219:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "10254:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10246:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_pricePerToken",
												"nameLocation": "10281:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10273:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "_allowlistProof",
												"nameLocation": "10329:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10305:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
													"typeString": "struct IDrop.AllowlistProof"
												},
												"typeName": {
													"id": 662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 661,
														"name": "AllowlistProof",
														"nameLocations": [
															"10305:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "10305:14:0"
													},
													"referencedDeclaration": 761,
													"src": "10305:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AllowlistProof_$761_storage_ptr",
														"typeString": "struct IDrop.AllowlistProof"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10367:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "10354:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10182:196:0"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10396:0:0"
									},
									"scope": 698,
									"src": "10162:236:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "10609:79:0",
										"text": "@dev Collects and distributes the primary sale value of NFTs being claimed."
									},
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_collectPriceOnClaim",
									"nameLocation": "10702:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "_primarySaleRecipient",
												"nameLocation": "10740:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10732:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_quantityToClaim",
												"nameLocation": "10779:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10771:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "_currency",
												"nameLocation": "10813:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10805:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "_pricePerToken",
												"nameLocation": "10840:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "10832:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10722:138:0"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10877:0:0"
									},
									"scope": 698,
									"src": "10693:185:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "10884:42:0",
										"text": "@dev Transfers the NFTs being claimed."
									},
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_transferTokensOnClaim",
									"nameLocation": "10940:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10980:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "10972:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_quantityBeingClaimed",
												"nameLocation": "11001:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "10993:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10962:66:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "11063:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "11055:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11054:22:0"
									},
									"scope": 698,
									"src": "10931:146:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "11083:58:0",
										"text": "@dev Determine what wallet can update claim conditions"
									},
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_canSetClaimConditions",
									"nameLocation": "11155:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11177:2:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "11211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11210:6:0"
									},
									"scope": 698,
									"src": "11146:71:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 699,
							"src": "152:11067:0",
							"usedErrors": [
								8,
								11,
								14,
								25,
								32,
								39,
								46
							],
							"usedEvents": [
								774,
								783
							]
						}
					],
					"src": "39:11180:0"
				},
				"id": 0
			},
			"contracts/extension/interface/IClaimCondition.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IClaimCondition.sol",
					"exportedSymbols": {
						"IClaimCondition": [
							720
						]
					},
					"id": 721,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 700,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IClaimCondition",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "86:345:1",
								"text": "  The interface `IClaimCondition` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."
							},
							"fullyImplemented": true,
							"id": 720,
							"linearizedBaseContracts": [
								720
							],
							"name": "IClaimCondition",
							"nameLocation": "443:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IClaimCondition.ClaimCondition",
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "465:1313:1",
										"text": "  @notice The criteria that make up a claim condition.\n  @param startTimestamp                 The unix timestamp after which the claim condition applies.\n                                        The same claim condition applies until the `startTimestamp`\n                                        of the next claim condition.\n  @param maxClaimableSupply             The maximum total number of tokens that can be claimed under\n                                        the claim condition.\n  @param supplyClaimed                  At any given point, the number of tokens that have been claimed\n                                        under the claim condition.\n  @param quantityLimitPerWallet         The maximum number of tokens that can be claimed by a wallet.\n  @param merkleRoot                     The allowlist of addresses that can claim tokens under the claim\n                                        condition.\n  @param pricePerToken                  The price required to pay per token claimed.\n  @param currency                       The currency in which the `pricePerToken` must be paid.\n  @param metadata                       Claim condition metadata."
									},
									"id": 719,
									"members": [
										{
											"constant": false,
											"id": 704,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "1823:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1815:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 703,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1815:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 706,
											"mutability": "mutable",
											"name": "maxClaimableSupply",
											"nameLocation": "1855:18:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1847:26:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 705,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1847:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 708,
											"mutability": "mutable",
											"name": "supplyClaimed",
											"nameLocation": "1891:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1883:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 707,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1883:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 710,
											"mutability": "mutable",
											"name": "quantityLimitPerWallet",
											"nameLocation": "1922:22:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1914:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 709,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1914:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 712,
											"mutability": "mutable",
											"name": "merkleRoot",
											"nameLocation": "1962:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1954:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 711,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1954:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 714,
											"mutability": "mutable",
											"name": "pricePerToken",
											"nameLocation": "1990:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "1982:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 713,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1982:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 716,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "2021:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "2013:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 715,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2013:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 718,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "2046:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 719,
											"src": "2039:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 717,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2039:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimCondition",
									"nameLocation": "1790:14:1",
									"nodeType": "StructDefinition",
									"scope": 720,
									"src": "1783:278:1",
									"visibility": "public"
								}
							],
							"scope": 721,
							"src": "433:1630:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:2024:1"
				},
				"id": 1
			},
			"contracts/extension/interface/IClaimConditionMultiPhase.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IClaimConditionMultiPhase.sol",
					"exportedSymbols": {
						"IClaimCondition": [
							720
						],
						"IClaimConditionMultiPhase": [
							744
						]
					},
					"id": 745,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 722,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"absolutePath": "contracts/extension/interface/IClaimCondition.sol",
							"file": "./IClaimCondition.sol",
							"id": 723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 745,
							"sourceUnit": 721,
							"src": "86:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 725,
										"name": "IClaimCondition",
										"nameLocations": [
											"624:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 720,
										"src": "624:15:2"
									},
									"id": 726,
									"nodeType": "InheritanceSpecifier",
									"src": "624:15:2"
								}
							],
							"canonicalName": "IClaimConditionMultiPhase",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 724,
								"nodeType": "StructuredDocumentation",
								"src": "119:464:2",
								"text": "  The interface `IClaimConditionMultiPhase` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."
							},
							"fullyImplemented": true,
							"id": 744,
							"linearizedBaseContracts": [
								744,
								720
							],
							"name": "IClaimConditionMultiPhase",
							"nameLocation": "595:25:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IClaimConditionMultiPhase.ClaimConditionList",
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "646:946:2",
										"text": "  @notice The set of all claim conditions, at any given moment.\n  Claim Phase ID = [currentStartId, currentStartId + length - 1];\n  @param currentStartId           The uid for the first claim condition amongst the current set of\n                                  claim conditions. The uid for each next claim condition is one\n                                  more than the previous claim condition's uid.\n  @param count                    The total number of phases / claim conditions in the list\n                                  of claim conditions.\n  @param conditions                   The claim conditions at a given uid. Claim conditions\n                                  are ordered in an ascending order by their `startTimestamp`.\n  @param supplyClaimedByWallet    Map from a claim condition uid and account to supply claimed by account."
									},
									"id": 743,
									"members": [
										{
											"constant": false,
											"id": 729,
											"mutability": "mutable",
											"name": "currentStartId",
											"nameLocation": "1641:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "1633:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 728,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 731,
											"mutability": "mutable",
											"name": "count",
											"nameLocation": "1673:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "1665:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 730,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1665:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 736,
											"mutability": "mutable",
											"name": "conditions",
											"nameLocation": "1723:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "1688:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
												"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition)"
											},
											"typeName": {
												"id": 735,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1688:34:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ClaimCondition_$719_storage_$",
													"typeString": "mapping(uint256 => struct IClaimCondition.ClaimCondition)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 734,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 733,
														"name": "ClaimCondition",
														"nameLocations": [
															"1707:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 719,
														"src": "1707:14:2"
													},
													"referencedDeclaration": 719,
													"src": "1707:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 742,
											"mutability": "mutable",
											"name": "supplyClaimedByWallet",
											"nameLocation": "1791:21:2",
											"nodeType": "VariableDeclaration",
											"scope": 743,
											"src": "1743:69:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(uint256 => mapping(address => uint256))"
											},
											"typeName": {
												"id": 741,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1743:47:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(uint256 => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 740,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 738,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1770:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1762:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 739,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1781:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimConditionList",
									"nameLocation": "1604:18:2",
									"nodeType": "StructDefinition",
									"scope": 744,
									"src": "1597:222:2",
									"visibility": "public"
								}
							],
							"scope": 745,
							"src": "585:1236:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1782:2"
				},
				"id": 2
			},
			"contracts/extension/interface/IDrop.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IDrop.sol",
					"exportedSymbols": {
						"IClaimCondition": [
							720
						],
						"IClaimConditionMultiPhase": [
							744
						],
						"IDrop": [
							811
						]
					},
					"id": 812,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "contracts/extension/interface/IClaimConditionMultiPhase.sol",
							"file": "./IClaimConditionMultiPhase.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 745,
							"src": "86:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 749,
										"name": "IClaimConditionMultiPhase",
										"nameLocations": [
											"594:25:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 744,
										"src": "594:25:3"
									},
									"id": 750,
									"nodeType": "InheritanceSpecifier",
									"src": "594:25:3"
								}
							],
							"canonicalName": "IDrop",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 748,
								"nodeType": "StructuredDocumentation",
								"src": "129:444:3",
								"text": "  The interface `IDrop` is written for thirdweb's 'Drop' contracts, which are distribution mechanisms for tokens.\n  An authorized wallet can set a series of claim conditions, ordered by their respective `startTimestamp`.\n  A claim condition defines criteria under which accounts can mint tokens. Claim conditions can be overwritten\n  or added to by the contract admin. At any moment, there is only one active claim condition."
							},
							"fullyImplemented": false,
							"id": 811,
							"linearizedBaseContracts": [
								811,
								744,
								720
							],
							"name": "IDrop",
							"nameLocation": "585:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDrop.AllowlistProof",
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "626:416:3",
										"text": "  @param proof Proof of concerned wallet's inclusion in an allowlist.\n  @param quantityLimitPerWallet The total quantity of tokens the allowlisted wallet is eligible to claim over time.\n  @param pricePerToken The price per token the allowlisted wallet must pay to claim tokens.\n  @param currency The currency in which the allowlisted wallet must pay the price for claiming tokens."
									},
									"id": 761,
									"members": [
										{
											"constant": false,
											"id": 754,
											"mutability": "mutable",
											"name": "proof",
											"nameLocation": "1089:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 761,
											"src": "1079:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 752,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 753,
												"nodeType": "ArrayTypeName",
												"src": "1079:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 756,
											"mutability": "mutable",
											"name": "quantityLimitPerWallet",
											"nameLocation": "1112:22:3",
											"nodeType": "VariableDeclaration",
											"scope": 761,
											"src": "1104:30:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 755,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1104:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 758,
											"mutability": "mutable",
											"name": "pricePerToken",
											"nameLocation": "1152:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 761,
											"src": "1144:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 757,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1144:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 760,
											"mutability": "mutable",
											"name": "currency",
											"nameLocation": "1183:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 761,
											"src": "1175:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1175:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AllowlistProof",
									"nameLocation": "1054:14:3",
									"nodeType": "StructDefinition",
									"scope": 811,
									"src": "1047:151:3",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "1204:56:3",
										"text": "@notice Emitted when tokens are claimed via `claim`."
									},
									"eventSelector": "fa76a4010d9533e3e964f2930a65fb6042a12fa6ff5b08281837a10b0be7321e",
									"id": 774,
									"name": "TokensClaimed",
									"nameLocation": "1271:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimConditionIndex",
												"nameLocation": "1310:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1294:35:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimer",
												"nameLocation": "1355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1339:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1388:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1372:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "1414:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1406:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantityClaimed",
												"nameLocation": "1444:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "1436:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:181:3"
									},
									"src": "1265:201:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "1472:69:3",
										"text": "@notice Emitted when the contract's claim conditions are updated."
									},
									"eventSelector": "bf4016fceeaaa4ac5cf4be865b559ff85825ab4ca7aa7b661d16e2f544c03098",
									"id": 783,
									"name": "ClaimConditionsUpdated",
									"nameLocation": "1552:22:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimConditions",
												"nameLocation": "1592:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1575:32:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IClaimCondition.ClaimCondition[]"
												},
												"typeName": {
													"baseType": {
														"id": 777,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 776,
															"name": "ClaimCondition",
															"nameLocations": [
																"1575:14:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 719,
															"src": "1575:14:3"
														},
														"referencedDeclaration": 719,
														"src": "1575:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition"
														}
													},
													"id": 778,
													"nodeType": "ArrayTypeName",
													"src": "1575:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_storage_$dyn_storage_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": false,
												"mutability": "mutable",
												"name": "resetEligibility",
												"nameLocation": "1614:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1609:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1609:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:57:3"
									},
									"src": "1546:86:3"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "1638:742:3",
										"text": "  @notice Lets an account claim a given quantity of NFTs.\n  @param receiver                       The receiver of the NFTs to claim.\n  @param quantity                       The quantity of NFTs to claim.\n  @param currency                       The currency in which to pay for the claim.\n  @param pricePerToken                  The price per token to pay for the claim.\n  @param allowlistProof                 The proof of the claimer's inclusion in the merkle root allowlist\n                                        of the claim conditions that apply.\n  @param data                           Arbitrary bytes data that can be leveraged in the implementation of this interface."
									},
									"functionSelector": "84bb1e42",
									"id": 800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2394:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2417:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2409:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "2443:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2435:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "2469:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2461:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "pricePerToken",
												"nameLocation": "2495:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2487:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "allowlistProof",
												"nameLocation": "2542:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2518:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AllowlistProof_$761_calldata_ptr",
													"typeString": "struct IDrop.AllowlistProof"
												},
												"typeName": {
													"id": 794,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 793,
														"name": "AllowlistProof",
														"nameLocations": [
															"2518:14:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "2518:14:3"
													},
													"referencedDeclaration": 761,
													"src": "2518:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AllowlistProof_$761_storage_ptr",
														"typeString": "struct IDrop.AllowlistProof"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2579:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2566:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2566:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:190:3"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2606:0:3"
									},
									"scope": 811,
									"src": "2385:222:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2613:448:3",
										"text": "  @notice Lets a contract admin (account with `DEFAULT_ADMIN_ROLE`) set claim conditions.\n  @param phases                   Claim conditions in ascending order by `startTimestamp`.\n  @param resetClaimEligibility    Whether to honor the restrictions applied to wallets who have claimed tokens in the current conditions,\n                                  in the new claim conditions being set."
									},
									"functionSelector": "74bc7db7",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setClaimConditions",
									"nameLocation": "3075:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "phases",
												"nameLocation": "3120:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3094:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IClaimCondition.ClaimCondition[]"
												},
												"typeName": {
													"baseType": {
														"id": 803,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 802,
															"name": "ClaimCondition",
															"nameLocations": [
																"3094:14:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 719,
															"src": "3094:14:3"
														},
														"referencedDeclaration": 719,
														"src": "3094:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ClaimCondition_$719_storage_ptr",
															"typeString": "struct IClaimCondition.ClaimCondition"
														}
													},
													"id": 804,
													"nodeType": "ArrayTypeName",
													"src": "3094:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ClaimCondition_$719_storage_$dyn_storage_ptr",
														"typeString": "struct IClaimCondition.ClaimCondition[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "resetClaimEligibility",
												"nameLocation": "3133:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3128:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3128:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:62:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:0:3"
									},
									"scope": 811,
									"src": "3066:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 812,
							"src": "575:2592:3",
							"usedErrors": [],
							"usedEvents": [
								774,
								783
							]
						}
					],
					"src": "39:3128:3"
				},
				"id": 3
			},
			"contracts/lib/MerkleProof.sol": {
				"ast": {
					"absolutePath": "contracts/lib/MerkleProof.sol",
					"exportedSymbols": {
						"MerkleProof": [
							903
						]
					},
					"id": 904,
					"license": "Apache 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MerkleProof",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 814,
								"nodeType": "StructuredDocumentation",
								"src": "64:35:4",
								"text": "@author OpenZeppelin, thirdweb"
							},
							"fullyImplemented": true,
							"id": 903,
							"linearizedBaseContracts": [
								903
							],
							"name": "MerkleProof",
							"nameLocation": "108:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "234:744:4",
										"statements": [
											{
												"assignments": [
													829
												],
												"declarations": [
													{
														"constant": false,
														"id": 829,
														"mutability": "mutable",
														"name": "computedHash",
														"nameLocation": "252:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "244:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 828,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "244:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"id": 830,
													"name": "leaf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 821,
													"src": "267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "244:27:4"
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "289:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "281:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "281:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"hexValue": "30",
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "297:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "281:17:4"
											},
											{
												"body": {
													"id": 881,
													"nodeType": "Block",
													"src": "352:498:4",
													"statements": [
														{
															"expression": {
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 847,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "366:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "375:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "366:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "366:10:4"
														},
														{
															"assignments": [
																852
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 852,
																	"mutability": "mutable",
																	"name": "proofElement",
																	"nameLocation": "398:12:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 881,
																	"src": "390:20:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 851,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "390:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 856,
															"initialValue": {
																"baseExpression": {
																	"id": 853,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "413:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"id": 854,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "419:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "413:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "390:31:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 857,
																	"name": "computedHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "440:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 858,
																	"name": "proofElement",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "456:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "440:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 879,
																"nodeType": "Block",
																"src": "644:196:4",
																"statements": [
																	{
																		"expression": {
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 868,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "740:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 870,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 852,
																						"src": "770:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 871,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 829,
																						"src": "784:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 869,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "755:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "755:42:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "740:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 874,
																		"nodeType": "ExpressionStatement",
																		"src": "740:57:4"
																	},
																	{
																		"expression": {
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 875,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "815:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "824:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "815:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 878,
																		"nodeType": "ExpressionStatement",
																		"src": "815:10:4"
																	}
																]
															},
															"id": 880,
															"nodeType": "IfStatement",
															"src": "436:404:4",
															"trueBody": {
																"id": 867,
																"nodeType": "Block",
																"src": "470:168:4",
																"statements": [
																	{
																		"expression": {
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 860,
																				"name": "computedHash",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "566:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 862,
																						"name": "computedHash",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 829,
																						"src": "596:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 863,
																						"name": "proofElement",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 852,
																						"src": "610:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 861,
																					"name": "_efficientHash",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 902,
																					"src": "581:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
																						"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
																					}
																				},
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "581:42:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "566:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 866,
																		"nodeType": "ExpressionStatement",
																		"src": "566:57:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "329:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 841,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "333:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "339:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "333:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "329:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"initializationExpression": {
													"assignments": [
														837
													],
													"declarations": [
														{
															"constant": false,
															"id": 837,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "322:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 882,
															"src": "314:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 836,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "314:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 839,
													"initialValue": {
														"hexValue": "30",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "326:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "314:13:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "347:3:4",
														"subExpression": {
															"id": 844,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "347:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 846,
													"nodeType": "ExpressionStatement",
													"src": "347:3:4"
												},
												"nodeType": "ForStatement",
												"src": "309:541:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 883,
																"name": "computedHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "943:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 884,
																"name": "root",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "959:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "943:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 886,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "965:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 887,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "942:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 827,
												"id": 888,
												"nodeType": "Return",
												"src": "935:36:4"
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "135:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "161:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "142:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 815,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "142:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 816,
													"nodeType": "ArrayTypeName",
													"src": "142:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "root",
												"nameLocation": "176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "168:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 818,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "leaf",
												"nameLocation": "190:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "182:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 820,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "182:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:54:4"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "219:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "219:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "225:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:15:4"
									},
									"scope": 903,
									"src": "126:852:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "1181:178:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1243:110:4",
													"nodeType": "YulBlock",
													"src": "1243:110:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1264:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1264:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "1270:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "1270:1:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1257:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:4"
																},
																"nativeSrc": "1257:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1257:15:4"
															},
															"nativeSrc": "1257:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1257:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1292:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1292:4:4",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1298:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "1298:1:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1285:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:4"
																},
																"nativeSrc": "1285:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1285:15:4"
															},
															"nativeSrc": "1285:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "1285:15:4"
														},
														{
															"nativeSrc": "1313:30:4",
															"nodeType": "YulAssignment",
															"src": "1313:30:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1332:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1332:4:4",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1338:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1338:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1322:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1322:9:4"
																},
																"nativeSrc": "1322:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1322:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1313:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1313:5:4"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:1:4",
														"valueSize": 1
													},
													{
														"declaration": 895,
														"isOffset": false,
														"isSlot": false,
														"src": "1298:1:4",
														"valueSize": 1
													},
													{
														"declaration": 898,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:5:4",
														"valueSize": 1
													}
												],
												"id": 900,
												"nodeType": "InlineAssembly",
												"src": "1234:119:4"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "984:109:4",
										"text": " @dev Implementation of keccak256(abi.encode(a, b)) that doesn't allocate or expand memory."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_efficientHash",
									"nameLocation": "1107:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1130:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1122:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 892,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1141:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1133:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 894,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:22:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1174:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1166:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:15:4"
									},
									"scope": 903,
									"src": "1098:261:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 904,
							"src": "100:1261:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1322:4"
				},
				"id": 4
			}
		}
	}
}