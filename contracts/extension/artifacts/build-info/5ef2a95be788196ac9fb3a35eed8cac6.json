{
	"id": "5ef2a95be788196ac9fb3a35eed8cac6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/extension/PermissionsEnumerable.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./interface/IPermissionsEnumerable.sol\";\nimport \"./Permissions.sol\";\n\n/**\n *  @title   PermissionsEnumerable\n *  @dev     This contracts provides extending-contracts with role-based access control mechanisms.\n *           Also provides interfaces to view all members with a given role, and total count of members.\n */\ncontract PermissionsEnumerable is IPermissionsEnumerable, Permissions {\n    /**\n     *  @notice A data structure to store data of members for a given role.\n     *\n     *  @param index    Current index in the list of accounts that have a role.\n     *  @param members  map from index => address of account that has a role\n     *  @param indexOf  map from address => index which the account has.\n     */\n    struct RoleMembers {\n        uint256 index;\n        mapping(uint256 => address) members;\n        mapping(address => uint256) indexOf;\n    }\n\n    /// @dev map from keccak256 hash of a role to its members' data. See {RoleMembers}.\n    mapping(bytes32 => RoleMembers) private roleMembers;\n\n    /**\n     *  @notice         Returns the role-member from a list of members for a role,\n     *                  at a given index.\n     *  @dev            Returns `member` who has `role`, at `index` of role-members list.\n     *                  See struct {RoleMembers}, and mapping {roleMembers}\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param index    Index in list of current members for the role.\n     *\n     *  @return member  Address of account that has `role`\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view override returns (address member) {\n        uint256 currentIndex = roleMembers[role].index;\n        uint256 check;\n\n        for (uint256 i = 0; i < currentIndex; i += 1) {\n            if (roleMembers[role].members[i] != address(0)) {\n                if (check == index) {\n                    member = roleMembers[role].members[i];\n                    return member;\n                }\n                check += 1;\n            } else if (hasRole(role, address(0)) && i == roleMembers[role].indexOf[address(0)]) {\n                check += 1;\n            }\n        }\n    }\n\n    /**\n     *  @notice         Returns total number of accounts that have a role.\n     *  @dev            Returns `count` of accounts that have `role`.\n     *                  See struct {RoleMembers}, and mapping {roleMembers}\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *\n     *  @return count   Total number of accounts that have `role`\n     */\n    function getRoleMemberCount(bytes32 role) external view override returns (uint256 count) {\n        uint256 currentIndex = roleMembers[role].index;\n\n        for (uint256 i = 0; i < currentIndex; i += 1) {\n            if (roleMembers[role].members[i] != address(0)) {\n                count += 1;\n            }\n        }\n        if (hasRole(role, address(0))) {\n            count += 1;\n        }\n    }\n\n    /// @dev Revokes `role` from `account`, and removes `account` from {roleMembers}\n    ///      See {_removeMember}\n    function _revokeRole(bytes32 role, address account) internal override {\n        super._revokeRole(role, account);\n        _removeMember(role, account);\n    }\n\n    /// @dev Grants `role` to `account`, and adds `account` to {roleMembers}\n    ///      See {_addMember}\n    function _setupRole(bytes32 role, address account) internal override {\n        super._setupRole(role, account);\n        _addMember(role, account);\n    }\n\n    /// @dev adds `account` to {roleMembers}, for `role`\n    function _addMember(bytes32 role, address account) internal {\n        uint256 idx = roleMembers[role].index;\n        roleMembers[role].index += 1;\n\n        roleMembers[role].members[idx] = account;\n        roleMembers[role].indexOf[account] = idx;\n    }\n\n    /// @dev removes `account` from {roleMembers}, for `role`\n    function _removeMember(bytes32 role, address account) internal {\n        uint256 idx = roleMembers[role].indexOf[account];\n\n        delete roleMembers[role].members[idx];\n        delete roleMembers[role].indexOf[account];\n    }\n}"
			},
			"contracts/extension/Permissions.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./interface/IPermissions.sol\";\nimport \"../lib/Strings.sol\";\n\n/**\n *  @title   Permissions\n *  @dev     This contracts provides extending-contracts with role-based access control mechanisms\n */\ncontract Permissions is IPermissions {\n    /// @dev The `account` is missing a role.\n    error PermissionsUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /// @dev The `account` already is a holder of `role`\n    error PermissionsAlreadyGranted(address account, bytes32 role);\n\n    /// @dev Invalid priviledge to revoke\n    error PermissionsInvalidPermission(address expected, address actual);\n\n    /// @dev Map from keccak256 hash of a role => a map from address => whether address has role.\n    mapping(bytes32 => mapping(address => bool)) private _hasRole;\n\n    /// @dev Map from keccak256 hash of a role to role admin. See {getRoleAdmin}.\n    mapping(bytes32 => bytes32) private _getRoleAdmin;\n\n    /// @dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /// @dev Modifier that checks if an account has the specified role; reverts otherwise.\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, msg.sender);\n        _;\n    }\n\n    /**\n     *  @notice         Checks whether an account has a particular role.\n     *  @dev            Returns `true` if `account` has been granted `role`.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param account  Address of the account for which the role is being checked.\n     */\n    function hasRole(bytes32 role, address account) public view override returns (bool) {\n        return _hasRole[role][account];\n    }\n\n    /**\n     *  @notice         Checks whether an account has a particular role;\n     *                  role restrictions can be swtiched on and off.\n     *\n     *  @dev            Returns `true` if `account` has been granted `role`.\n     *                  Role restrictions can be swtiched on and off:\n     *                      - If address(0) has ROLE, then the ROLE restrictions\n     *                        don't apply.\n     *                      - If address(0) does not have ROLE, then the ROLE\n     *                        restrictions will apply.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param account  Address of the account for which the role is being checked.\n     */\n    function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {\n        if (!_hasRole[role][address(0)]) {\n            return _hasRole[role][account];\n        }\n\n        return true;\n    }\n\n    /**\n     *  @notice         Returns the admin role that controls the specified role.\n     *  @dev            See {grantRole} and {revokeRole}.\n     *                  To change a role's admin, use {_setRoleAdmin}.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     */\n    function getRoleAdmin(bytes32 role) external view override returns (bytes32) {\n        return _getRoleAdmin[role];\n    }\n\n    /**\n     *  @notice         Grants a role to an account, if not previously granted.\n     *  @dev            Caller must have admin role for the `role`.\n     *                  Emits {RoleGranted Event}.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param account  Address of the account to which the role is being granted.\n     */\n    function grantRole(bytes32 role, address account) public virtual override {\n        _checkRole(_getRoleAdmin[role], msg.sender);\n        if (_hasRole[role][account]) {\n            revert PermissionsAlreadyGranted(account, role);\n        }\n        _setupRole(role, account);\n    }\n\n    /**\n     *  @notice         Revokes role from an account.\n     *  @dev            Caller must have admin role for the `role`.\n     *                  Emits {RoleRevoked Event}.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param account  Address of the account from which the role is being revoked.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override {\n        _checkRole(_getRoleAdmin[role], msg.sender);\n        _revokeRole(role, account);\n    }\n\n    /**\n     *  @notice         Revokes role from the account.\n     *  @dev            Caller must have the `role`, with caller being the same as `account`.\n     *                  Emits {RoleRevoked Event}.\n     *\n     *  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n     *  @param account  Address of the account from which the role is being revoked.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        if (msg.sender != account) {\n            revert PermissionsInvalidPermission(msg.sender, account);\n        }\n        _revokeRole(role, account);\n    }\n\n    /// @dev Sets `adminRole` as `role`'s admin role.\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = _getRoleAdmin[role];\n        _getRoleAdmin[role] = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /// @dev Sets up `role` for `account`\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _hasRole[role][account] = true;\n        emit RoleGranted(role, account, msg.sender);\n    }\n\n    /// @dev Revokes `role` from `account`\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        _checkRole(role, account);\n        delete _hasRole[role][account];\n        emit RoleRevoked(role, account, msg.sender);\n    }\n\n    /// @dev Checks `role` for `account`. Reverts with a message including the required role.\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!_hasRole[role][account]) {\n            revert PermissionsUnauthorizedAccount(account, role);\n        }\n    }\n\n    /// @dev Checks `role` for `account`. Reverts with a message including the required role.\n    function _checkRoleWithSwitch(bytes32 role, address account) internal view virtual {\n        if (!hasRoleWithSwitch(role, account)) {\n            revert PermissionsUnauthorizedAccount(account, role);\n        }\n    }\n}"
			},
			"contracts/extension/interface/IPermissionsEnumerable.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./IPermissions.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IPermissionsEnumerable is IPermissions {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * [forum post](https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296)\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}"
			},
			"contracts/extension/interface/IPermissions.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IPermissions {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}"
			},
			"contracts/lib/Strings.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /// @dev Returns the hexadecimal representation of `value`.\n    /// The output is prefixed with \"0x\", encoded using 2 hexadecimal digits per byte,\n    /// and the alphabets are capitalized conditionally according to\n    /// https://eips.ethereum.org/EIPS/eip-55\n    function toHexStringChecksummed(address value) internal pure returns (string memory str) {\n        str = toHexString(value);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let mask := shl(6, div(not(0), 255)) // `0b010000000100000000 ...`\n            let o := add(str, 0x22)\n            let hashed := and(keccak256(o, 40), mul(34, mask)) // `0b10001000 ... `\n            let t := shl(240, 136) // `0b10001000 << 240`\n            for {\n                let i := 0\n            } 1 {\n\n            } {\n                mstore(add(i, i), mul(t, byte(i, hashed)))\n                i := add(i, 1)\n                if eq(i, 20) {\n                    break\n                }\n            }\n            mstore(o, xor(mload(o), shr(1, and(mload(0x00), and(mload(o), mask)))))\n            o := add(o, 0x20)\n            mstore(o, xor(mload(o), shr(1, and(mload(0x20), and(mload(o), mask)))))\n        }\n    }\n\n    /// @dev Returns the hexadecimal representation of `value`.\n    /// The output is prefixed with \"0x\" and encoded using 2 hexadecimal digits per byte.\n    function toHexString(address value) internal pure returns (string memory str) {\n        str = toHexStringNoPrefix(value);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let strLength := add(mload(str), 2) // Compute the length.\n            mstore(str, 0x3078) // Write the \"0x\" prefix.\n            str := sub(str, 2) // Move the pointer.\n            mstore(str, strLength) // Write the length.\n        }\n    }\n\n    /// @dev Returns the hexadecimal representation of `value`.\n    /// The output is encoded using 2 hexadecimal digits per byte.\n    function toHexStringNoPrefix(address value) internal pure returns (string memory str) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            str := mload(0x40)\n\n            // Allocate the memory.\n            // We need 0x20 bytes for the trailing zeros padding, 0x20 bytes for the length,\n            // 0x02 bytes for the prefix, and 0x28 bytes for the digits.\n            // The next multiple of 0x20 above (0x20 + 0x20 + 0x02 + 0x28) is 0x80.\n            mstore(0x40, add(str, 0x80))\n\n            // Store \"0123456789abcdef\" in scratch space.\n            mstore(0x0f, 0x30313233343536373839616263646566)\n\n            str := add(str, 2)\n            mstore(str, 40)\n\n            let o := add(str, 0x20)\n            mstore(add(o, 40), 0)\n\n            value := shl(96, value)\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            for {\n                let i := 0\n            } 1 {\n\n            } {\n                let p := add(o, add(i, i))\n                let temp := byte(i, value)\n                mstore8(add(p, 1), mload(and(temp, 15)))\n                mstore8(p, mload(shr(4, temp)))\n                i := add(i, 1)\n                if eq(i, 20) {\n                    break\n                }\n            }\n        }\n    }\n\n    /// @dev Returns the hex encoded string from the raw bytes.\n    /// The output is encoded using 2 hexadecimal digits per byte.\n    function toHexString(bytes memory raw) internal pure returns (string memory str) {\n        str = toHexStringNoPrefix(raw);\n        /// @solidity memory-safe-assembly\n        assembly {\n            let strLength := add(mload(str), 2) // Compute the length.\n            mstore(str, 0x3078) // Write the \"0x\" prefix.\n            str := sub(str, 2) // Move the pointer.\n            mstore(str, strLength) // Write the length.\n        }\n    }\n\n    /// @dev Returns the hex encoded string from the raw bytes.\n    /// The output is encoded using 2 hexadecimal digits per byte.\n    function toHexStringNoPrefix(bytes memory raw) internal pure returns (string memory str) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let length := mload(raw)\n            str := add(mload(0x40), 2) // Skip 2 bytes for the optional prefix.\n            mstore(str, add(length, length)) // Store the length of the output.\n\n            // Store \"0123456789abcdef\" in scratch space.\n            mstore(0x0f, 0x30313233343536373839616263646566)\n\n            let o := add(str, 0x20)\n            let end := add(raw, length)\n\n            for {\n\n            } iszero(eq(raw, end)) {\n\n            } {\n                raw := add(raw, 1)\n                mstore8(add(o, 1), mload(and(mload(raw), 15)))\n                mstore8(o, mload(and(shr(4, mload(raw)), 15)))\n                o := add(o, 2)\n            }\n            mstore(o, 0) // Zeroize the slot after the string.\n            mstore(0x40, add(o, 0x20)) // Allocate the memory.\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/extension/Permissions.sol": {
				"Permissions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "PermissionsAlreadyGranted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "expected",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "actual",
									"type": "address"
								}
							],
							"name": "PermissionsInvalidPermission",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "PermissionsUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRoleWithSwitch",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contracts provides extending-contracts with role-based access control mechanisms",
						"errors": {
							"PermissionsAlreadyGranted(address,bytes32)": [
								{
									"details": "The `account` already is a holder of `role`"
								}
							],
							"PermissionsInvalidPermission(address,address)": [
								{
									"details": "Invalid priviledge to revoke"
								}
							],
							"PermissionsUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
								"params": {
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
								"params": {
									"account": "Address of the account to which the role is being granted.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`.",
								"params": {
									"account": "Address of the account for which the role is being checked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"hasRoleWithSwitch(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
								"params": {
									"account": "Address of the account for which the role is being checked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
								"params": {
									"account": "Address of the account from which the role is being revoked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
								"params": {
									"account": "Address of the account from which the role is being revoked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							}
						},
						"stateVariables": {
							"DEFAULT_ADMIN_ROLE": {
								"details": "Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
							},
							"_getRoleAdmin": {
								"details": "Map from keccak256 hash of a role to role admin. See {getRoleAdmin}."
							},
							"_hasRole": {
								"details": "Map from keccak256 hash of a role => a map from address => whether address has role."
							}
						},
						"title": "Permissions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/extension/Permissions.sol\":287:6465  contract Permissions is IPermissions {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/extension/Permissions.sol\":287:6465  contract Permissions is IPermissions {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa32fa5b3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n    tag_14:\n        /* \"contracts/extension/Permissions.sol\":3175:3182  bytes32 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3201:3214  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":3201:3220  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3215:3219  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":3201:3220  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":3194:3220  return _getRoleAdmin[role] */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n    tag_20:\n        /* \"contracts/extension/Permissions.sol\":3706:3749  _checkRole(_getRoleAdmin[role], msg.sender) */\n      tag_41\n        /* \"contracts/extension/Permissions.sol\":3717:3730  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":3717:3736  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3731:3735  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":3717:3736  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":3738:3748  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":3706:3716  _checkRole */\n      tag_42\n        /* \"contracts/extension/Permissions.sol\":3706:3749  _checkRole(_getRoleAdmin[role], msg.sender) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/extension/Permissions.sol\":3763:3771  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3763:3777  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3772:3776  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":3763:3777  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":3763:3786  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3778:3785  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3763:3786  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":3759:3860  if (_hasRole[role][account]) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":3835:3842  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":3844:3848  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3809:3849  PermissionsAlreadyGranted(account, role) */\n      mload(0x40)\n      0xd49c166a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":3759:3860  if (_hasRole[role][account]) {... */\n    tag_43:\n        /* \"contracts/extension/Permissions.sol\":3869:3894  _setupRole(role, account) */\n      tag_46\n        /* \"contracts/extension/Permissions.sol\":3880:3884  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3886:3893  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3869:3879  _setupRole */\n      tag_47\n        /* \"contracts/extension/Permissions.sol\":3869:3894  _setupRole(role, account) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_23:\n        /* \"contracts/extension/Permissions.sol\":4946:4953  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":4932:4953  msg.sender != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":4932:4942  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":4932:4953  msg.sender != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/extension/Permissions.sol\":4928:5036  if (msg.sender != account) {... */\n      tag_49\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":5005:5015  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5017:5024  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":4976:5025  PermissionsInvalidPermission(msg.sender, account) */\n      mload(0x40)\n      0x4169c62200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":4928:5036  if (msg.sender != account) {... */\n    tag_49:\n        /* \"contracts/extension/Permissions.sol\":5045:5071  _revokeRole(role, account) */\n      tag_52\n        /* \"contracts/extension/Permissions.sol\":5057:5061  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5063:5070  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5045:5056  _revokeRole */\n      tag_53\n        /* \"contracts/extension/Permissions.sol\":5045:5071  _revokeRole(role, account) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_26:\n        /* \"contracts/extension/Permissions.sol\":1769:1773  bool */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1792:1800  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1792:1806  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1801:1805  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":1792:1806  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":1792:1815  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1807:1814  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":1792:1815  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":1785:1815  return _hasRole[role][account] */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_30:\n        /* \"contracts/extension/Permissions.sol\":1154:1158  0x00 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_34:\n        /* \"contracts/extension/Permissions.sol\":2652:2656  bool */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2681  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2687  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2682:2686  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":2673:2687  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":2673:2699  _hasRole[role][address(0)] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2696:2697  0 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2699  _hasRole[role][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":2668:2756  if (!_hasRole[role][address(0)]) {... */\n      tag_56\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":2722:2730  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2722:2736  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2731:2735  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":2722:2736  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":2722:2745  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2737:2744  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":2722:2745  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":2715:2745  return _hasRole[role][account] */\n      swap1\n      pop\n      jump(tag_55)\n        /* \"contracts/extension/Permissions.sol\":2668:2756  if (!_hasRole[role][address(0)]) {... */\n    tag_56:\n        /* \"contracts/extension/Permissions.sol\":2773:2777  true */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":2766:2777  return true */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_55:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n    tag_38:\n        /* \"contracts/extension/Permissions.sol\":4357:4400  _checkRole(_getRoleAdmin[role], msg.sender) */\n      tag_58\n        /* \"contracts/extension/Permissions.sol\":4368:4381  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":4368:4387  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":4382:4386  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":4368:4387  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":4389:4399  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":4357:4367  _checkRole */\n      tag_42\n        /* \"contracts/extension/Permissions.sol\":4357:4400  _checkRole(_getRoleAdmin[role], msg.sender) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/extension/Permissions.sol\":4410:4436  _revokeRole(role, account) */\n      tag_59\n        /* \"contracts/extension/Permissions.sol\":4422:4426  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":4428:4435  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":4410:4421  _revokeRole */\n      tag_53\n        /* \"contracts/extension/Permissions.sol\":4410:4436  _revokeRole(role, account) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5952:6148  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_42:\n        /* \"contracts/extension/Permissions.sol\":6040:6048  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6040:6054  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6049:6053  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":6040:6054  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":6040:6063  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6055:6062  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":6040:6063  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":6035:6142  if (!_hasRole[role][account]) {... */\n      tag_61\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":6117:6124  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":6126:6130  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":6086:6131  PermissionsUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0x0878b10600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":6035:6142  if (!_hasRole[role][account]) {... */\n    tag_61:\n        /* \"contracts/extension/Permissions.sol\":5952:6148  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5431:5599  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_47:\n        /* \"contracts/extension/Permissions.sol\":5535:5539  true */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":5509:5517  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5509:5523  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5518:5522  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":5509:5523  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":5509:5532  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5524:5531  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5509:5532  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5509:5539  _hasRole[role][account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/extension/Permissions.sol\":5581:5591  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5572:5579  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5566:5570  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/extension/Permissions.sol\":5431:5599  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5648:5852  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_53:\n        /* \"contracts/extension/Permissions.sol\":5727:5752  _checkRole(role, account) */\n      tag_65\n        /* \"contracts/extension/Permissions.sol\":5738:5742  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5744:5751  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5727:5737  _checkRole */\n      tag_42\n        /* \"contracts/extension/Permissions.sol\":5727:5752  _checkRole(role, account) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/extension/Permissions.sol\":5769:5777  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5769:5783  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5778:5782  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5769:5783  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":5769:5792  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5784:5791  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5769:5792  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5762:5792  delete _hasRole[role][account] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/extension/Permissions.sol\":5834:5844  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5825:5832  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5819:5823  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/extension/Permissions.sol\":5648:5852  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_67:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_69:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_70:\n        /* \"#utility.yul\":490:514   */\n      tag_86\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_69\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_87:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_71:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_89\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_70\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_13:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_92\n      tag_67\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":766:885   */\n    tag_91:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_93\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_71\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_72:\n        /* \"#utility.yul\":1112:1136   */\n      tag_95\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_69\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_16:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_97\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_72\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_73:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_74:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_100\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_73\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_75:\n        /* \"#utility.yul\":1684:1708   */\n      tag_102\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_74\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_103:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_76:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_105\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_75\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_19:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_108\n      tag_67\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1977:2096   */\n    tag_107:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_109\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_71\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_110\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_76\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2454   */\n    tag_77:\n        /* \"#utility.yul\":2398:2405   */\n      0x00\n        /* \"#utility.yul\":2441:2446   */\n      dup2\n        /* \"#utility.yul\":2434:2447   */\n      iszero\n        /* \"#utility.yul\":2427:2448   */\n      iszero\n        /* \"#utility.yul\":2416:2448   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2569   */\n    tag_78:\n        /* \"#utility.yul\":2541:2562   */\n      tag_113\n        /* \"#utility.yul\":2556:2561   */\n      dup2\n        /* \"#utility.yul\":2541:2562   */\n      tag_77\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2536:2539   */\n      dup3\n        /* \"#utility.yul\":2529:2563   */\n      mstore\n        /* \"#utility.yul\":2460:2569   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2785   */\n    tag_28:\n        /* \"#utility.yul\":2662:2666   */\n      0x00\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2677:2703   */\n      swap1\n      pop\n        /* \"#utility.yul\":2713:2778   */\n      tag_115\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2713:2778   */\n      tag_78\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2575:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_79:\n        /* \"#utility.yul\":2878:2902   */\n      tag_117\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_74\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3247   */\n    tag_45:\n        /* \"#utility.yul\":3036:3040   */\n      0x00\n        /* \"#utility.yul\":3074:3076   */\n      0x40\n        /* \"#utility.yul\":3063:3072   */\n      dup3\n        /* \"#utility.yul\":3059:3077   */\n      add\n        /* \"#utility.yul\":3051:3077   */\n      swap1\n      pop\n        /* \"#utility.yul\":3087:3158   */\n      tag_119\n        /* \"#utility.yul\":3155:3156   */\n      0x00\n        /* \"#utility.yul\":3144:3153   */\n      dup4\n        /* \"#utility.yul\":3140:3157   */\n      add\n        /* \"#utility.yul\":3131:3137   */\n      dup6\n        /* \"#utility.yul\":3087:3158   */\n      tag_79\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3168:3240   */\n      tag_120\n        /* \"#utility.yul\":3236:3238   */\n      0x20\n        /* \"#utility.yul\":3225:3234   */\n      dup4\n        /* \"#utility.yul\":3221:3239   */\n      add\n        /* \"#utility.yul\":3212:3218   */\n      dup5\n        /* \"#utility.yul\":3168:3240   */\n      tag_72\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2915:3247   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3253:3585   */\n    tag_51:\n        /* \"#utility.yul\":3374:3378   */\n      0x00\n        /* \"#utility.yul\":3412:3414   */\n      0x40\n        /* \"#utility.yul\":3401:3410   */\n      dup3\n        /* \"#utility.yul\":3397:3415   */\n      add\n        /* \"#utility.yul\":3389:3415   */\n      swap1\n      pop\n        /* \"#utility.yul\":3425:3496   */\n      tag_122\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3482:3491   */\n      dup4\n        /* \"#utility.yul\":3478:3495   */\n      add\n        /* \"#utility.yul\":3469:3475   */\n      dup6\n        /* \"#utility.yul\":3425:3496   */\n      tag_79\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3506:3578   */\n      tag_123\n        /* \"#utility.yul\":3574:3576   */\n      0x20\n        /* \"#utility.yul\":3563:3572   */\n      dup4\n        /* \"#utility.yul\":3559:3577   */\n      add\n        /* \"#utility.yul\":3550:3556   */\n      dup5\n        /* \"#utility.yul\":3506:3578   */\n      tag_79\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3253:3585   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122027e65fc0c0eb2792971f95b1c2655e535f3c9598aba45fb1fb1fb75dff4858f664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506108438061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c806391d148541161005957806391d14854146100e7578063a217fddf14610117578063a32fa5b314610135578063d547741f146101655761007b565b8063248a9ca31461007f5780632f2ff15d146100af57806336568abe146100cb575b5f5ffd5b61009960048036038101906100949190610692565b610181565b6040516100a691906106cc565b60405180910390f35b6100c960048036038101906100c4919061073f565b61019b565b005b6100e560048036038101906100e0919061073f565b610260565b005b61010160048036038101906100fc919061073f565b6102e0565b60405161010e9190610797565b60405180910390f35b61011f610341565b60405161012c91906106cc565b60405180910390f35b61014f600480360381019061014a919061073f565b610347565b60405161015c9190610797565b60405180910390f35b61017f600480360381019061017a919061073f565b61040e565b005b5f60015f8381526020019081526020015f20549050919050565b6101b660015f8481526020019081526020015f205433610437565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102525780826040517fd49c166a0000000000000000000000000000000000000000000000000000000081526004016102499291906107bf565b60405180910390fd5b61025c82826104d6565b5050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d25733816040517f4169c6220000000000000000000000000000000000000000000000000000000081526004016102c99291906107e6565b60405180910390fd5b6102dc8282610598565b5050565b5f5f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f5f5f8481526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610403575f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050610408565b600190505b92915050565b61042960015f8481526020019081526020015f205433610437565b6104338282610598565b5050565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166104d25780826040517f0878b1060000000000000000000000000000000000000000000000000000000081526004016104c99291906107bf565b60405180910390fd5b5050565b60015f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6105a28282610437565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549060ff02191690553373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b5f5ffd5b5f819050919050565b6106718161065f565b811461067b575f5ffd5b50565b5f8135905061068c81610668565b92915050565b5f602082840312156106a7576106a661065b565b5b5f6106b48482850161067e565b91505092915050565b6106c68161065f565b82525050565b5f6020820190506106df5f8301846106bd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61070e826106e5565b9050919050565b61071e81610704565b8114610728575f5ffd5b50565b5f8135905061073981610715565b92915050565b5f5f604083850312156107555761075461065b565b5b5f6107628582860161067e565b92505060206107738582860161072b565b9150509250929050565b5f8115159050919050565b6107918161077d565b82525050565b5f6020820190506107aa5f830184610788565b92915050565b6107b981610704565b82525050565b5f6040820190506107d25f8301856107b0565b6107df60208301846106bd565b9392505050565b5f6040820190506107f95f8301856107b0565b61080660208301846107b0565b939250505056fea264697066735822122027e65fc0c0eb2792971f95b1c2655e535f3c9598aba45fb1fb1fb75dff4858f664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x843 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xA32FA5B3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x165 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x437 JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x252 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD49C166A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP3 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP3 PUSH2 0x4D6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D2 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x4169C62200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC DUP3 DUP3 PUSH2 0x598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x403 JUMPI PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x429 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x437 JUMP JUMPDEST PUSH2 0x433 DUP3 DUP3 PUSH2 0x598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x878B10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP3 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP3 DUP3 PUSH2 0x437 JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x671 DUP2 PUSH2 0x65F JUMP JUMPDEST DUP2 EQ PUSH2 0x67B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x68C DUP2 PUSH2 0x668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x65B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6B4 DUP5 DUP3 DUP6 ADD PUSH2 0x67E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C6 DUP2 PUSH2 0x65F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DF PUSH0 DUP4 ADD DUP5 PUSH2 0x6BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x70E DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x704 JUMP JUMPDEST DUP2 EQ PUSH2 0x728 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x739 DUP2 PUSH2 0x715 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH2 0x754 PUSH2 0x65B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x762 DUP6 DUP3 DUP7 ADD PUSH2 0x67E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x773 DUP6 DUP3 DUP7 ADD PUSH2 0x72B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x77D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7AA PUSH0 DUP4 ADD DUP5 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B9 DUP2 PUSH2 0x704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D2 PUSH0 DUP4 ADD DUP6 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x7DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F9 PUSH0 DUP4 ADD DUP6 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x806 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUPN 0x5F 0xC0 0xC0 0xEB 0x27 SWAP3 SWAP8 0x1F SWAP6 0xB1 0xC2 PUSH6 0x5E535F3C9598 0xAB LOG4 PUSH0 0xB1 EXTSTATICCALL 0x1F 0xB7 TSTORE SELFDESTRUCT BASEFEE PC 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "287:6178:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_43": {
									"entryPoint": 833,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_304": {
									"entryPoint": 1079,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_282": {
									"entryPoint": 1432,
									"id": 282,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_254": {
									"entryPoint": 1238,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_118": {
									"entryPoint": 385,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_153": {
									"entryPoint": 411,
									"id": 153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRoleWithSwitch_104": {
									"entryPoint": 839,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_74": {
									"entryPoint": 736,
									"id": 74,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_203": {
									"entryPoint": 608,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_176": {
									"entryPoint": 1038,
									"id": 176,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 1855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 1983,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1627,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3588:5",
										"nodeType": "YulBlock",
										"src": "0:3588:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1090:53:5",
													"nodeType": "YulBlock",
													"src": "1090:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1112:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:5"
																		},
																		"nativeSrc": "1112:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:5"
																},
																"nativeSrc": "1100:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:5"
															},
															"nativeSrc": "1100:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1025:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:5",
														"nodeType": "YulTypedName",
														"src": "1078:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:5",
														"nodeType": "YulTypedName",
														"src": "1085:3:5",
														"type": ""
													}
												],
												"src": "1025:118:5"
											},
											{
												"body": {
													"nativeSrc": "1247:124:5",
													"nodeType": "YulBlock",
													"src": "1247:124:5",
													"statements": [
														{
															"nativeSrc": "1257:26:5",
															"nodeType": "YulAssignment",
															"src": "1257:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:5"
																},
																"nativeSrc": "1265:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:5"
																		},
																		"nativeSrc": "1346:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "1293:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:5"
																},
																"nativeSrc": "1293:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:5"
															},
															"nativeSrc": "1293:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1149:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:5",
														"nodeType": "YulTypedName",
														"src": "1219:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:5",
														"nodeType": "YulTypedName",
														"src": "1231:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:5",
														"nodeType": "YulTypedName",
														"src": "1242:4:5",
														"type": ""
													}
												],
												"src": "1149:222:5"
											},
											{
												"body": {
													"nativeSrc": "1422:81:5",
													"nodeType": "YulBlock",
													"src": "1422:81:5",
													"statements": [
														{
															"nativeSrc": "1432:65:5",
															"nodeType": "YulAssignment",
															"src": "1432:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:5"
																},
																"nativeSrc": "1443:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:5",
														"nodeType": "YulTypedName",
														"src": "1404:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:5",
														"nodeType": "YulTypedName",
														"src": "1414:7:5",
														"type": ""
													}
												],
												"src": "1377:126:5"
											},
											{
												"body": {
													"nativeSrc": "1554:51:5",
													"nodeType": "YulBlock",
													"src": "1554:51:5",
													"statements": [
														{
															"nativeSrc": "1564:35:5",
															"nodeType": "YulAssignment",
															"src": "1564:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:5"
																},
																"nativeSrc": "1575:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:5",
														"nodeType": "YulTypedName",
														"src": "1536:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:5",
														"nodeType": "YulTypedName",
														"src": "1546:7:5",
														"type": ""
													}
												],
												"src": "1509:96:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1967:391:5",
													"nodeType": "YulBlock",
													"src": "1967:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:5",
																"nodeType": "YulBlock",
																"src": "2013:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:5"
																			},
																			"nativeSrc": "2015:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:5"
																		},
																		"nativeSrc": "2015:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:5"
																		},
																		"nativeSrc": "1984:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:5"
																},
																"nativeSrc": "1980:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:5"
															},
															"nativeSrc": "1977:119:5",
															"nodeType": "YulIf",
															"src": "1977:119:5"
														},
														{
															"nativeSrc": "2106:117:5",
															"nodeType": "YulBlock",
															"src": "2106:117:5",
															"statements": [
																{
																	"nativeSrc": "2121:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:5"
																				},
																				"nativeSrc": "2181:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2160:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:5"
																		},
																		"nativeSrc": "2160:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:5",
															"nodeType": "YulBlock",
															"src": "2233:118:5",
															"statements": [
																{
																	"nativeSrc": "2248:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1884:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:5",
														"nodeType": "YulTypedName",
														"src": "1929:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:5",
														"nodeType": "YulTypedName",
														"src": "1940:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:5",
														"nodeType": "YulTypedName",
														"src": "1952:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:5",
														"nodeType": "YulTypedName",
														"src": "1960:6:5",
														"type": ""
													}
												],
												"src": "1884:474:5"
											},
											{
												"body": {
													"nativeSrc": "2406:48:5",
													"nodeType": "YulBlock",
													"src": "2406:48:5",
													"statements": [
														{
															"nativeSrc": "2416:32:5",
															"nodeType": "YulAssignment",
															"src": "2416:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2441:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2441:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2434:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2434:6:5"
																		},
																		"nativeSrc": "2434:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2434:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2427:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2427:6:5"
																},
																"nativeSrc": "2427:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2427:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2416:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2416:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2364:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2388:5:5",
														"nodeType": "YulTypedName",
														"src": "2388:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2398:7:5",
														"nodeType": "YulTypedName",
														"src": "2398:7:5",
														"type": ""
													}
												],
												"src": "2364:90:5"
											},
											{
												"body": {
													"nativeSrc": "2519:50:5",
													"nodeType": "YulBlock",
													"src": "2519:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2556:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2556:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2541:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "2541:14:5"
																		},
																		"nativeSrc": "2541:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2529:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:5"
																},
																"nativeSrc": "2529:34:5",
																"nodeType": "YulFunctionCall",
																"src": "2529:34:5"
															},
															"nativeSrc": "2529:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "2529:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2460:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2507:5:5",
														"nodeType": "YulTypedName",
														"src": "2507:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2514:3:5",
														"nodeType": "YulTypedName",
														"src": "2514:3:5",
														"type": ""
													}
												],
												"src": "2460:109:5"
											},
											{
												"body": {
													"nativeSrc": "2667:118:5",
													"nodeType": "YulBlock",
													"src": "2667:118:5",
													"statements": [
														{
															"nativeSrc": "2677:26:5",
															"nodeType": "YulAssignment",
															"src": "2677:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2689:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2700:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2685:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2685:3:5"
																},
																"nativeSrc": "2685:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2685:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2677:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2677:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2751:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:5"
																		},
																		"nativeSrc": "2760:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2713:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "2713:37:5"
																},
																"nativeSrc": "2713:65:5",
																"nodeType": "YulFunctionCall",
																"src": "2713:65:5"
															},
															"nativeSrc": "2713:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "2713:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2575:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2639:9:5",
														"nodeType": "YulTypedName",
														"src": "2639:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2651:6:5",
														"nodeType": "YulTypedName",
														"src": "2651:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2662:4:5",
														"nodeType": "YulTypedName",
														"src": "2662:4:5",
														"type": ""
													}
												],
												"src": "2575:210:5"
											},
											{
												"body": {
													"nativeSrc": "2856:53:5",
													"nodeType": "YulBlock",
													"src": "2856:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2873:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2878:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:5"
																		},
																		"nativeSrc": "2878:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2866:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:5"
																},
																"nativeSrc": "2866:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2866:37:5"
															},
															"nativeSrc": "2866:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2791:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2844:5:5",
														"nodeType": "YulTypedName",
														"src": "2844:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2851:3:5",
														"nodeType": "YulTypedName",
														"src": "2851:3:5",
														"type": ""
													}
												],
												"src": "2791:118:5"
											},
											{
												"body": {
													"nativeSrc": "3041:206:5",
													"nodeType": "YulBlock",
													"src": "3041:206:5",
													"statements": [
														{
															"nativeSrc": "3051:26:5",
															"nodeType": "YulAssignment",
															"src": "3051:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3063:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3059:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:5"
																},
																"nativeSrc": "3059:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3059:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3051:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3131:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3131:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3144:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3155:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3155:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3140:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:5"
																		},
																		"nativeSrc": "3140:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3140:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3087:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3087:43:5"
																},
																"nativeSrc": "3087:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3087:71:5"
															},
															"nativeSrc": "3087:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3087:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3212:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3212:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3225:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3225:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3236:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3236:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3221:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3221:3:5"
																		},
																		"nativeSrc": "3221:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3168:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3168:43:5"
																},
																"nativeSrc": "3168:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3168:72:5"
															},
															"nativeSrc": "3168:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3168:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "2915:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3005:9:5",
														"nodeType": "YulTypedName",
														"src": "3005:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3017:6:5",
														"nodeType": "YulTypedName",
														"src": "3017:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3025:6:5",
														"nodeType": "YulTypedName",
														"src": "3025:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3036:4:5",
														"nodeType": "YulTypedName",
														"src": "3036:4:5",
														"type": ""
													}
												],
												"src": "2915:332:5"
											},
											{
												"body": {
													"nativeSrc": "3379:206:5",
													"nodeType": "YulBlock",
													"src": "3379:206:5",
													"statements": [
														{
															"nativeSrc": "3389:26:5",
															"nodeType": "YulAssignment",
															"src": "3389:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3401:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3401:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3412:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3397:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:5"
																},
																"nativeSrc": "3397:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3397:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3389:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3389:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3469:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3469:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3482:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3482:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3493:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3493:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3478:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3478:3:5"
																		},
																		"nativeSrc": "3478:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3425:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3425:43:5"
																},
																"nativeSrc": "3425:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3425:71:5"
															},
															"nativeSrc": "3425:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3425:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3550:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3563:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3563:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3574:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3574:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3559:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:5"
																		},
																		"nativeSrc": "3559:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3559:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3506:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3506:43:5"
																},
																"nativeSrc": "3506:72:5",
																"nodeType": "YulFunctionCall",
																"src": "3506:72:5"
															},
															"nativeSrc": "3506:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "3506:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3253:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3343:9:5",
														"nodeType": "YulTypedName",
														"src": "3343:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3355:6:5",
														"nodeType": "YulTypedName",
														"src": "3355:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3363:6:5",
														"nodeType": "YulTypedName",
														"src": "3363:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3374:4:5",
														"nodeType": "YulTypedName",
														"src": "3374:4:5",
														"type": ""
													}
												],
												"src": "3253:332:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c806391d148541161005957806391d14854146100e7578063a217fddf14610117578063a32fa5b314610135578063d547741f146101655761007b565b8063248a9ca31461007f5780632f2ff15d146100af57806336568abe146100cb575b5f5ffd5b61009960048036038101906100949190610692565b610181565b6040516100a691906106cc565b60405180910390f35b6100c960048036038101906100c4919061073f565b61019b565b005b6100e560048036038101906100e0919061073f565b610260565b005b61010160048036038101906100fc919061073f565b6102e0565b60405161010e9190610797565b60405180910390f35b61011f610341565b60405161012c91906106cc565b60405180910390f35b61014f600480360381019061014a919061073f565b610347565b60405161015c9190610797565b60405180910390f35b61017f600480360381019061017a919061073f565b61040e565b005b5f60015f8381526020019081526020015f20549050919050565b6101b660015f8481526020019081526020015f205433610437565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102525780826040517fd49c166a0000000000000000000000000000000000000000000000000000000081526004016102499291906107bf565b60405180910390fd5b61025c82826104d6565b5050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d25733816040517f4169c6220000000000000000000000000000000000000000000000000000000081526004016102c99291906107e6565b60405180910390fd5b6102dc8282610598565b5050565b5f5f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f5f5f8481526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610403575f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050610408565b600190505b92915050565b61042960015f8481526020019081526020015f205433610437565b6104338282610598565b5050565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166104d25780826040517f0878b1060000000000000000000000000000000000000000000000000000000081526004016104c99291906107bf565b60405180910390fd5b5050565b60015f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6105a28282610437565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549060ff02191690553373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b5f5ffd5b5f819050919050565b6106718161065f565b811461067b575f5ffd5b50565b5f8135905061068c81610668565b92915050565b5f602082840312156106a7576106a661065b565b5b5f6106b48482850161067e565b91505092915050565b6106c68161065f565b82525050565b5f6020820190506106df5f8301846106bd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61070e826106e5565b9050919050565b61071e81610704565b8114610728575f5ffd5b50565b5f8135905061073981610715565b92915050565b5f5f604083850312156107555761075461065b565b5b5f6107628582860161067e565b92505060206107738582860161072b565b9150509250929050565b5f8115159050919050565b6107918161077d565b82525050565b5f6020820190506107aa5f830184610788565b92915050565b6107b981610704565b82525050565b5f6040820190506107d25f8301856107b0565b6107df60208301846106bd565b9392505050565b5f6040820190506107f95f8301856107b0565b61080660208301846107b0565b939250505056fea264697066735822122027e65fc0c0eb2792971f95b1c2655e535f3c9598aba45fb1fb1fb75dff4858f664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xA32FA5B3 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x165 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x19B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x73F JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x437 JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x252 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD49C166A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP3 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP3 PUSH2 0x4D6 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D2 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x4169C62200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C9 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC DUP3 DUP3 PUSH2 0x598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x403 JUMPI PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x429 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x437 JUMP JUMPDEST PUSH2 0x433 DUP3 DUP3 PUSH2 0x598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D2 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x878B10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP3 SWAP2 SWAP1 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP3 DUP3 PUSH2 0x437 JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x671 DUP2 PUSH2 0x65F JUMP JUMPDEST DUP2 EQ PUSH2 0x67B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x68C DUP2 PUSH2 0x668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A7 JUMPI PUSH2 0x6A6 PUSH2 0x65B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6B4 DUP5 DUP3 DUP6 ADD PUSH2 0x67E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6C6 DUP2 PUSH2 0x65F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6DF PUSH0 DUP4 ADD DUP5 PUSH2 0x6BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x70E DUP3 PUSH2 0x6E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71E DUP2 PUSH2 0x704 JUMP JUMPDEST DUP2 EQ PUSH2 0x728 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x739 DUP2 PUSH2 0x715 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH2 0x754 PUSH2 0x65B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x762 DUP6 DUP3 DUP7 ADD PUSH2 0x67E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x773 DUP6 DUP3 DUP7 ADD PUSH2 0x72B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x77D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7AA PUSH0 DUP4 ADD DUP5 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B9 DUP2 PUSH2 0x704 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D2 PUSH0 DUP4 ADD DUP6 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x7DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F9 PUSH0 DUP4 ADD DUP6 PUSH2 0x7B0 JUMP JUMPDEST PUSH2 0x806 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUPN 0x5F 0xC0 0xC0 0xEB 0x27 SWAP3 SWAP8 0x1F SWAP6 0xB1 0xC2 PUSH6 0x5E535F3C9598 0xAB LOG4 PUSH0 0xB1 EXTSTATICCALL 0x1F 0xB7 TSTORE SELFDESTRUCT BASEFEE PC 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "287:6178:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3107:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3622:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4841:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1691:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1109:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2573:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4272:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3107:120;3175:7;3201:13;:19;3215:4;3201:19;;;;;;;;;;;;3194:26;;3107:120;;;:::o;3622:279::-;3706:43;3717:13;:19;3731:4;3717:19;;;;;;;;;;;;3738:10;3706;:43::i;:::-;3763:8;:14;3772:4;3763:14;;;;;;;;;;;:23;3778:7;3763:23;;;;;;;;;;;;;;;;;;;;;;;;;3759:101;;;3835:7;3844:4;3809:40;;;;;;;;;;;;:::i;:::-;;;;;;;;3759:101;3869:25;3880:4;3886:7;3869:10;:25::i;:::-;3622:279;;:::o;4841:237::-;4946:7;4932:21;;:10;:21;;;4928:108;;5005:10;5017:7;4976:49;;;;;;;;;;;;:::i;:::-;;;;;;;;4928:108;5045:26;5057:4;5063:7;5045:11;:26::i;:::-;4841:237;;:::o;1691:131::-;1769:4;1792:8;:14;1801:4;1792:14;;;;;;;;;;;:23;1807:7;1792:23;;;;;;;;;;;;;;;;;;;;;;;;;1785:30;;1691:131;;;;:::o;1109:49::-;1154:4;1109:49;;;:::o;2573:211::-;2652:4;2673:8;:14;2682:4;2673:14;;;;;;;;;;;:26;2696:1;2673:26;;;;;;;;;;;;;;;;;;;;;;;;;2668:88;;2722:8;:14;2731:4;2722:14;;;;;;;;;;;:23;2737:7;2722:23;;;;;;;;;;;;;;;;;;;;;;;;;2715:30;;;;2668:88;2773:4;2766:11;;2573:211;;;;;:::o;4272:171::-;4357:43;4368:13;:19;4382:4;4368:19;;;;;;;;;;;;4389:10;4357;:43::i;:::-;4410:26;4422:4;4428:7;4410:11;:26::i;:::-;4272:171;;:::o;5952:196::-;6040:8;:14;6049:4;6040:14;;;;;;;;;;;:23;6055:7;6040:23;;;;;;;;;;;;;;;;;;;;;;;;;6035:107;;6117:7;6126:4;6086:45;;;;;;;;;;;;:::i;:::-;;;;;;;;6035:107;5952:196;;:::o;5431:168::-;5535:4;5509:8;:14;5518:4;5509:14;;;;;;;;;;;:23;5524:7;5509:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5581:10;5554:38;;5572:7;5554:38;;5566:4;5554:38;;;;;;;;;;5431:168;;:::o;5648:204::-;5727:25;5738:4;5744:7;5727:10;:25::i;:::-;5769:8;:14;5778:4;5769:14;;;;;;;;;;;:23;5784:7;5769:23;;;;;;;;;;;;;;;;5762:30;;;;;;;;;;;5834:10;5807:38;;5825:7;5807:38;;5819:4;5807:38;;;;;;;;;;5648:204;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:90::-;2398:7;2441:5;2434:13;2427:21;2416:32;;2364:90;;;:::o;2460:109::-;2541:21;2556:5;2541:21;:::i;:::-;2536:3;2529:34;2460:109;;:::o;2575:210::-;2662:4;2700:2;2689:9;2685:18;2677:26;;2713:65;2775:1;2764:9;2760:17;2751:6;2713:65;:::i;:::-;2575:210;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:332::-;3036:4;3074:2;3063:9;3059:18;3051:26;;3087:71;3155:1;3144:9;3140:17;3131:6;3087:71;:::i;:::-;3168:72;3236:2;3225:9;3221:18;3212:6;3168:72;:::i;:::-;2915:332;;;;;:::o;3253:::-;3374:4;3412:2;3401:9;3397:18;3389:26;;3425:71;3493:1;3482:9;3478:17;3469:6;3425:71;:::i;:::-;3506:72;3574:2;3563:9;3559:18;3550:6;3506:72;:::i;:::-;3253:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423000",
								"executionCost": "459",
								"totalCost": "423459"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3115",
								"hasRoleWithSwitch(bytes32,address)": "5484",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite"
							},
							"internal": {
								"_checkRole(bytes32,address)": "infinite",
								"_checkRoleWithSwitch(bytes32,address)": "infinite",
								"_revokeRole(bytes32,address)": "infinite",
								"_setRoleAdmin(bytes32,bytes32)": "infinite",
								"_setupRole(bytes32,address)": "26373"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 6465,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122027e65fc0c0eb2792971f95b1c2655e535f3c9598aba45fb1fb1fb75dff4858f664736f6c634300081e0033",
									".code": [
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "A32FA5B3"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 6465,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3717,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3748,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3706,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "D49C166A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3809,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3869,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4942,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5015,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "4169C62200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4976,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5045,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4357,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4410,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "878B10600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6086,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5509,
											"end": 5517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5727,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5844,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2427,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2541,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2541,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2529,
											"end": 2563,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2713,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2713,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2791,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3155,
											"end": 3156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3087,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3087,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3225,
											"end": 3234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3168,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3168,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3425,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3425,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3574,
											"end": 3576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3577,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3506,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3578,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3506,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3253,
											"end": 3585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/extension/Permissions.sol",
								"contracts/extension/PermissionsEnumerable.sol",
								"contracts/extension/interface/IPermissions.sol",
								"contracts/extension/interface/IPermissionsEnumerable.sol",
								"contracts/lib/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"PermissionsAlreadyGranted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"PermissionsInvalidPermission\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"PermissionsUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contracts provides extending-contracts with role-based access control mechanisms\",\"errors\":{\"PermissionsAlreadyGranted(address,bytes32)\":[{\"details\":\"The `account` already is a holder of `role`\"}],\"PermissionsInvalidPermission(address,address)\":[{\"details\":\"Invalid priviledge to revoke\"}],\"PermissionsUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"stateVariables\":{\"DEFAULT_ADMIN_ROLE\":{\"details\":\"Default admin role for all roles. Only accounts with this role can grant/revoke other roles.\"},\"_getRoleAdmin\":{\"details\":\"Map from keccak256 hash of a role to role admin. See {getRoleAdmin}.\"},\"_hasRole\":{\"details\":\"Map from keccak256 hash of a role => a map from address => whether address has role.\"}},\"title\":\"Permissions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/Permissions.sol\":\"Permissions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x5e1e8f35a6844145ef36b15690cd2274becc24bb01f0a5891fb1e4e3247c9034\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92cc079c40f3a71e1d48bd139bc34312d35509756072a975375d35240f9ad77d\",\"dweb:/ipfs/Qmaaf8n6UQhC8akXpVuewADH9pP2YeUTqH6LhqF7LZNmNi\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc669598bef25ae7317cb30adca927bc3407518531457345240039f90c2c15f07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92fef0a34c7281f127867d4953e2931ebe56beffbfdf1ce157805458f7419604\",\"dweb:/ipfs/QmNLyRwKeVgzMCGX1sTBYvDJztApiD6DBifT3QMBGWXpos\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0x03edbfd4e45d8309771d13b70e4eb4d50dbc9571bc99fbe82d3fa2d6aaa4fb12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://295d31e0d10dc57bb3fe1b07d54bfc247c00d90ed47cc1891ef527fbb51f8cbf\",\"dweb:/ipfs/QmcBrCAWovajpocHmLTB4FAZAb5MAGA5anHBNk39Vdew5i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "contracts/extension/Permissions.sol:Permissions",
								"label": "_hasRole",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 39,
								"contract": "contracts/extension/Permissions.sol:Permissions",
								"label": "_getRoleAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"notice": "Returns the admin role that controls the specified role."
							},
							"grantRole(bytes32,address)": {
								"notice": "Grants a role to an account, if not previously granted."
							},
							"hasRole(bytes32,address)": {
								"notice": "Checks whether an account has a particular role."
							},
							"hasRoleWithSwitch(bytes32,address)": {
								"notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
							},
							"renounceRole(bytes32,address)": {
								"notice": "Revokes role from the account."
							},
							"revokeRole(bytes32,address)": {
								"notice": "Revokes role from an account."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extension/PermissionsEnumerable.sol": {
				"PermissionsEnumerable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "PermissionsAlreadyGranted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "expected",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "actual",
									"type": "address"
								}
							],
							"name": "PermissionsInvalidPermission",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "PermissionsUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "count",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRoleWithSwitch",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contracts provides extending-contracts with role-based access control mechanisms.           Also provides interfaces to view all members with a given role, and total count of members.",
						"errors": {
							"PermissionsAlreadyGranted(address,bytes32)": [
								{
									"details": "The `account` already is a holder of `role`"
								}
							],
							"PermissionsInvalidPermission(address,address)": [
								{
									"details": "Invalid priviledge to revoke"
								}
							],
							"PermissionsUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.",
								"params": {
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}",
								"params": {
									"index": "Index in list of current members for the role.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								},
								"returns": {
									"member": " Address of account that has `role`"
								}
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}",
								"params": {
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								},
								"returns": {
									"count": "  Total number of accounts that have `role`"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.",
								"params": {
									"account": "Address of the account to which the role is being granted.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`.",
								"params": {
									"account": "Address of the account for which the role is being checked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"hasRoleWithSwitch(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.",
								"params": {
									"account": "Address of the account for which the role is being checked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.",
								"params": {
									"account": "Address of the account from which the role is being revoked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.",
								"params": {
									"account": "Address of the account from which the role is being revoked.",
									"role": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
								}
							}
						},
						"stateVariables": {
							"roleMembers": {
								"details": "map from keccak256 hash of a role to its members' data. See {RoleMembers}."
							}
						},
						"title": "PermissionsEnumerable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/extension/PermissionsEnumerable.sol\":412:4240  contract PermissionsEnumerable is IPermissionsEnumerable, Permissions {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/extension/PermissionsEnumerable.sol\":412:4240  contract PermissionsEnumerable is IPermissionsEnumerable, Permissions {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa32fa5b3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1643:2276  function getRoleMember(bytes32 role, uint256 index) external view override returns (address member) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2683:3081  function getRoleMemberCount(bytes32 role) external view override returns (uint256 count) {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n    tag_16:\n        /* \"contracts/extension/Permissions.sol\":3175:3182  bytes32 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3201:3214  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":3201:3220  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3215:3219  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":3201:3220  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":3194:3220  return _getRoleAdmin[role] */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":3107:3227  function getRoleAdmin(bytes32 role) external view override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n    tag_22:\n        /* \"contracts/extension/Permissions.sol\":3706:3749  _checkRole(_getRoleAdmin[role], msg.sender) */\n      tag_54\n        /* \"contracts/extension/Permissions.sol\":3717:3730  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":3717:3736  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3731:3735  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":3717:3736  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":3738:3748  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":3706:3716  _checkRole */\n      tag_55\n        /* \"contracts/extension/Permissions.sol\":3706:3749  _checkRole(_getRoleAdmin[role], msg.sender) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/extension/Permissions.sol\":3763:3771  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3763:3777  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3772:3776  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":3763:3777  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":3763:3786  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":3778:3785  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3763:3786  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":3759:3860  if (_hasRole[role][account]) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":3835:3842  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":3844:3848  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3809:3849  PermissionsAlreadyGranted(account, role) */\n      mload(0x40)\n      0xd49c166a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":3759:3860  if (_hasRole[role][account]) {... */\n    tag_56:\n        /* \"contracts/extension/Permissions.sol\":3869:3894  _setupRole(role, account) */\n      tag_59\n        /* \"contracts/extension/Permissions.sol\":3880:3884  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3886:3893  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":3869:3879  _setupRole */\n      tag_60\n        /* \"contracts/extension/Permissions.sol\":3869:3894  _setupRole(role, account) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/extension/Permissions.sol\":3622:3901  function grantRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_25:\n        /* \"contracts/extension/Permissions.sol\":4946:4953  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":4932:4953  msg.sender != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":4932:4942  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":4932:4953  msg.sender != account */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/extension/Permissions.sol\":4928:5036  if (msg.sender != account) {... */\n      tag_62\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":5005:5015  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5017:5024  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":4976:5025  PermissionsInvalidPermission(msg.sender, account) */\n      mload(0x40)\n      0x4169c62200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":4928:5036  if (msg.sender != account) {... */\n    tag_62:\n        /* \"contracts/extension/Permissions.sol\":5045:5071  _revokeRole(role, account) */\n      tag_65\n        /* \"contracts/extension/Permissions.sol\":5057:5061  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5063:5070  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5045:5056  _revokeRole */\n      tag_66\n        /* \"contracts/extension/Permissions.sol\":5045:5071  _revokeRole(role, account) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/extension/Permissions.sol\":4841:5078  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1643:2276  function getRoleMember(bytes32 role, uint256 index) external view override returns (address member) {... */\n    tag_29:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1727:1741  address member */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1753:1773  uint256 currentIndex */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1776:1787  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1776:1793  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1788:1792  role */\n      dup6\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1776:1793  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1776:1799  roleMembers[role].index */\n      0x00\n      add\n      sload\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1753:1799  uint256 currentIndex = roleMembers[role].index */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1809:1822  uint256 check */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1838:1847  uint256 i */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1850:1851  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1838:1851  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1833:2270  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n    tag_68:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1857:1869  currentIndex */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1853:1854  i */\n      dup2\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1853:1869  i < currentIndex */\n      lt\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1833:2270  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n      iszero\n      tag_69\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1937:1938  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1939  roleMembers[role].members[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1908  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1914  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1909:1913  role */\n      dup9\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1914  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1922  roleMembers[role].members */\n      0x01\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1925  roleMembers[role].members[i] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1923:1924  i */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1925  roleMembers[role].members[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1897:1939  roleMembers[role].members[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1893:2260  if (roleMembers[role].members[i] != address(0)) {... */\n      tag_71\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1972:1977  index */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1963:1968  check */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1963:1977  check == index */\n      sub\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1959:2092  if (check == index) {... */\n      tag_72\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2021  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2027  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2022:2026  role */\n      dup8\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2027  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2035  roleMembers[role].members */\n      0x01\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2038  roleMembers[role].members[i] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2036:2037  i */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2010:2038  roleMembers[role].members[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2001:2038  member = roleMembers[role].members[i] */\n      swap4\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2060:2073  return member */\n      pop\n      pop\n      pop\n      jump(tag_67)\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1959:2092  if (check == index) {... */\n    tag_72:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2118:2119  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2109:2119  check += 1 */\n      dup3\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      swap2\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1893:2260  if (roleMembers[role].members[i] != address(0)) {... */\n      jump(tag_75)\n    tag_71:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2144:2169  hasRole(role, address(0)) */\n      tag_76\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2152:2156  role */\n      dup7\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2166:2167  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2144:2151  hasRole */\n      tag_34\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2144:2169  hasRole(role, address(0)) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2144:2215  hasRole(role, address(0)) && i == roleMembers[role].indexOf[address(0)] */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2189  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2195  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2190:2194  role */\n      dup8\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2195  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2203  roleMembers[role].indexOf */\n      0x02\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2215  roleMembers[role].indexOf[address(0)] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2212:2213  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2178:2215  roleMembers[role].indexOf[address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2173:2174  i */\n      dup2\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2173:2215  i == roleMembers[role].indexOf[address(0)] */\n      eq\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2144:2215  hasRole(role, address(0)) && i == roleMembers[role].indexOf[address(0)] */\n    tag_77:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2140:2260  if (hasRole(role, address(0)) && i == roleMembers[role].indexOf[address(0)]) {... */\n      iszero\n      tag_78\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2244:2245  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2235:2245  check += 1 */\n      dup3\n      tag_79\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_79:\n      swap2\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2140:2260  if (hasRole(role, address(0)) && i == roleMembers[role].indexOf[address(0)]) {... */\n    tag_78:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1893:2260  if (roleMembers[role].members[i] != address(0)) {... */\n    tag_75:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1876:1877  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1871:1877  i += 1 */\n      dup2\n      tag_80\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_80:\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1833:2270  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n      jump(tag_68)\n    tag_69:\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1743:2276  {... */\n      pop\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":1643:2276  function getRoleMember(bytes32 role, uint256 index) external view override returns (address member) {... */\n    tag_67:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n    tag_34:\n        /* \"contracts/extension/Permissions.sol\":1769:1773  bool */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1792:1800  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1792:1806  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1801:1805  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":1792:1806  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":1792:1815  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1807:1814  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":1792:1815  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":1785:1815  return _hasRole[role][account] */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":1691:1822  function hasRole(bytes32 role, address account) public view override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_38:\n        /* \"contracts/extension/Permissions.sol\":1154:1158  0x00 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":1109:1158  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_42:\n        /* \"contracts/extension/Permissions.sol\":2652:2656  bool */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2681  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2687  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2682:2686  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":2673:2687  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":2673:2699  _hasRole[role][address(0)] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2696:2697  0 */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2673:2699  _hasRole[role][address(0)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":2668:2756  if (!_hasRole[role][address(0)]) {... */\n      tag_83\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":2722:2730  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2722:2736  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2731:2735  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":2722:2736  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":2722:2745  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":2737:2744  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":2722:2745  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":2715:2745  return _hasRole[role][account] */\n      swap1\n      pop\n      jump(tag_82)\n        /* \"contracts/extension/Permissions.sol\":2668:2756  if (!_hasRole[role][address(0)]) {... */\n    tag_83:\n        /* \"contracts/extension/Permissions.sol\":2773:2777  true */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":2766:2777  return true */\n      swap1\n      pop\n        /* \"contracts/extension/Permissions.sol\":2573:2784  function hasRoleWithSwitch(bytes32 role, address account) public view returns (bool) {... */\n    tag_82:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2683:3081  function getRoleMemberCount(bytes32 role) external view override returns (uint256 count) {... */\n    tag_46:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2757:2770  uint256 count */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2782:2802  uint256 currentIndex */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2805:2816  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2805:2822  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2817:2821  role */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2805:2822  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2805:2828  roleMembers[role].index */\n      0x00\n      add\n      sload\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2782:2828  uint256 currentIndex = roleMembers[role].index */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2844:2853  uint256 i */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2856:2857  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2844:2857  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2839:3000  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n    tag_85:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2863:2875  currentIndex */\n      dup2\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2859:2860  i */\n      dup2\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2859:2875  i < currentIndex */\n      lt\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2839:3000  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2943:2944  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2945  roleMembers[role].members[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2914  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2920  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2915:2919  role */\n      dup7\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2920  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2928  roleMembers[role].members */\n      0x01\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2931  roleMembers[role].members[i] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2929:2930  i */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2931  roleMembers[role].members[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2903:2945  roleMembers[role].members[i] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2899:2990  if (roleMembers[role].members[i] != address(0)) {... */\n      tag_88\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2974:2975  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2965:2975  count += 1 */\n      dup4\n      tag_89\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2899:2990  if (roleMembers[role].members[i] != address(0)) {... */\n    tag_88:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2882:2883  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2877:2883  i += 1 */\n      dup2\n      tag_90\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_90:\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2839:3000  for (uint256 i = 0; i < currentIndex; i += 1) {... */\n      jump(tag_85)\n    tag_86:\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3013:3038  hasRole(role, address(0)) */\n      tag_91\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3021:3025  role */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3035:3036  0 */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3013:3020  hasRole */\n      tag_34\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3013:3038  hasRole(role, address(0)) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3009:3075  if (hasRole(role, address(0))) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3063:3064  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3054:3064  count += 1 */\n      dup3\n      tag_93\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_93:\n      swap2\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3009:3075  if (hasRole(role, address(0))) {... */\n    tag_92:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2772:3081  {... */\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":2683:3081  function getRoleMemberCount(bytes32 role) external view override returns (uint256 count) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n    tag_51:\n        /* \"contracts/extension/Permissions.sol\":4357:4400  _checkRole(_getRoleAdmin[role], msg.sender) */\n      tag_95\n        /* \"contracts/extension/Permissions.sol\":4368:4381  _getRoleAdmin */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":4368:4387  _getRoleAdmin[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":4382:4386  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":4368:4387  _getRoleAdmin[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/Permissions.sol\":4389:4399  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":4357:4367  _checkRole */\n      tag_55\n        /* \"contracts/extension/Permissions.sol\":4357:4400  _checkRole(_getRoleAdmin[role], msg.sender) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/extension/Permissions.sol\":4410:4436  _revokeRole(role, account) */\n      tag_96\n        /* \"contracts/extension/Permissions.sol\":4422:4426  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":4428:4435  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":4410:4421  _revokeRole */\n      tag_66\n        /* \"contracts/extension/Permissions.sol\":4410:4436  _revokeRole(role, account) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/extension/Permissions.sol\":4272:4443  function revokeRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5952:6148  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_55:\n        /* \"contracts/extension/Permissions.sol\":6040:6048  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6040:6054  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6049:6053  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":6040:6054  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":6040:6063  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":6055:6062  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":6040:6063  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/extension/Permissions.sol\":6035:6142  if (!_hasRole[role][account]) {... */\n      tag_98\n      jumpi\n        /* \"contracts/extension/Permissions.sol\":6117:6124  account */\n      dup1\n        /* \"contracts/extension/Permissions.sol\":6126:6130  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":6086:6131  PermissionsUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0x0878b10600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/extension/Permissions.sol\":6035:6142  if (!_hasRole[role][account]) {... */\n    tag_98:\n        /* \"contracts/extension/Permissions.sol\":5952:6148  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3475:3627  function _setupRole(bytes32 role, address account) internal override {... */\n    tag_60:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3554:3585  super._setupRole(role, account) */\n      tag_101\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3571:3575  role */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3577:3584  account */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3554:3570  super._setupRole */\n      tag_102\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3554:3585  super._setupRole(role, account) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3595:3620  _addMember(role, account) */\n      tag_103\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3606:3610  role */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3612:3619  account */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3595:3605  _addMember */\n      tag_104\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3595:3620  _addMember(role, account) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3475:3627  function _setupRole(bytes32 role, address account) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3205:3362  function _revokeRole(bytes32 role, address account) internal override {... */\n    tag_66:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3285:3317  super._revokeRole(role, account) */\n      tag_106\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3303:3307  role */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3309:3316  account */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3285:3302  super._revokeRole */\n      tag_107\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3285:3317  super._revokeRole(role, account) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3327:3355  _removeMember(role, account) */\n      tag_108\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3341:3345  role */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3347:3354  account */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3327:3340  _removeMember */\n      tag_109\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3327:3355  _removeMember(role, account) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3205:3362  function _revokeRole(bytes32 role, address account) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5431:5599  function _setupRole(bytes32 role, address account) internal virtual {... */\n    tag_102:\n        /* \"contracts/extension/Permissions.sol\":5535:5539  true */\n      0x01\n        /* \"contracts/extension/Permissions.sol\":5509:5517  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5509:5523  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5518:5522  role */\n      dup5\n        /* \"contracts/extension/Permissions.sol\":5509:5523  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":5509:5532  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5524:5531  account */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5509:5532  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5509:5539  _hasRole[role][account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/extension/Permissions.sol\":5581:5591  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5572:5579  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5566:5570  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5554:5592  RoleGranted(role, account, msg.sender) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/extension/Permissions.sol\":5431:5599  function _setupRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3690:3943  function _addMember(bytes32 role, address account) internal {... */\n    tag_104:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3760:3771  uint256 idx */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3774:3785  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3774:3791  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3786:3790  role */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3774:3791  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3774:3797  roleMembers[role].index */\n      0x00\n      add\n      sload\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3760:3797  uint256 idx = roleMembers[role].index */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3834:3835  1 */\n      0x01\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3807:3818  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3807:3824  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3819:3823  role */\n      dup6\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3807:3824  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3807:3830  roleMembers[role].index */\n      0x00\n      add\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3807:3835  roleMembers[role].index += 1 */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3879:3886  account */\n      dup2\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3857  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3863  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3858:3862  role */\n      dup6\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3863  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3871  roleMembers[role].members */\n      0x01\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3876  roleMembers[role].members[idx] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3872:3875  idx */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3876  roleMembers[role].members[idx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3846:3886  roleMembers[role].members[idx] = account */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3933:3936  idx */\n      dup1\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3907  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3913  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3908:3912  role */\n      dup6\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3913  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3921  roleMembers[role].indexOf */\n      0x02\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3930  roleMembers[role].indexOf[account] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3922:3929  account */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3930  roleMembers[role].indexOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3896:3936  roleMembers[role].indexOf[account] = idx */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3750:3943  {... */\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":3690:3943  function _addMember(bytes32 role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/Permissions.sol\":5648:5852  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_107:\n        /* \"contracts/extension/Permissions.sol\":5727:5752  _checkRole(role, account) */\n      tag_114\n        /* \"contracts/extension/Permissions.sol\":5738:5742  role */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5744:5751  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5727:5737  _checkRole */\n      tag_55\n        /* \"contracts/extension/Permissions.sol\":5727:5752  _checkRole(role, account) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/extension/Permissions.sol\":5769:5777  _hasRole */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5769:5783  _hasRole[role] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5778:5782  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5769:5783  _hasRole[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/Permissions.sol\":5769:5792  _hasRole[role][account] */\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5784:5791  account */\n      dup3\n        /* \"contracts/extension/Permissions.sol\":5769:5792  _hasRole[role][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/Permissions.sol\":5762:5792  delete _hasRole[role][account] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/extension/Permissions.sol\":5834:5844  msg.sender */\n      caller\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5825:5832  account */\n      dup2\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/extension/Permissions.sol\":5819:5823  role */\n      dup4\n        /* \"contracts/extension/Permissions.sol\":5807:5845  RoleRevoked(role, account, msg.sender) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/extension/Permissions.sol\":5648:5852  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4011:4238  function _removeMember(bytes32 role, address account) internal {... */\n    tag_109:\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4084:4095  uint256 idx */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4109  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4115  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4110:4114  role */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4115  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4123  roleMembers[role].indexOf */\n      0x02\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4132  roleMembers[role].indexOf[account] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4124:4131  account */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4098:4132  roleMembers[role].indexOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4084:4132  uint256 idx = roleMembers[role].indexOf[account] */\n      swap1\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4161  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4167  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4162:4166  role */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4167  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4175  roleMembers[role].members */\n      0x01\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4180  roleMembers[role].members[idx] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4176:4179  idx */\n      dup3\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4150:4180  roleMembers[role].members[idx] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4143:4180  delete roleMembers[role].members[idx] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4208  roleMembers */\n      0x02\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4214  roleMembers[role] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4209:4213  role */\n      dup5\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4214  roleMembers[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4222  roleMembers[role].indexOf */\n      0x02\n      add\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4231  roleMembers[role].indexOf[account] */\n      0x00\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4223:4230  account */\n      dup4\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4197:4231  roleMembers[role].indexOf[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4190:4231  delete roleMembers[role].indexOf[account] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4074:4238  {... */\n      pop\n        /* \"contracts/extension/PermissionsEnumerable.sol\":4011:4238  function _removeMember(bytes32 role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_117:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_119:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_120:\n        /* \"#utility.yul\":490:514   */\n      tag_141\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_119\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_142:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_121:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_144\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_120\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_147\n      tag_117\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":766:885   */\n    tag_146:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_148\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_121\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_122:\n        /* \"#utility.yul\":1112:1136   */\n      tag_150\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_119\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_18:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_152\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_122\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_123:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1605   */\n    tag_124:\n        /* \"#utility.yul\":1546:1553   */\n      0x00\n        /* \"#utility.yul\":1575:1599   */\n      tag_155\n        /* \"#utility.yul\":1593:1598   */\n      dup3\n        /* \"#utility.yul\":1575:1599   */\n      tag_123\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1564:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_125:\n        /* \"#utility.yul\":1684:1708   */\n      tag_157\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_124\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_158:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_126:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_160\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_125\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_21:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_163\n      tag_117\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1977:2096   */\n    tag_162:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_164\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_121\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_165\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_126\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2441   */\n    tag_127:\n        /* \"#utility.yul\":2401:2408   */\n      0x00\n        /* \"#utility.yul\":2430:2435   */\n      dup2\n        /* \"#utility.yul\":2419:2435   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2569   */\n    tag_128:\n        /* \"#utility.yul\":2520:2544   */\n      tag_168\n        /* \"#utility.yul\":2538:2543   */\n      dup2\n        /* \"#utility.yul\":2520:2544   */\n      tag_127\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2513:2518   */\n      dup2\n        /* \"#utility.yul\":2510:2545   */\n      eq\n        /* \"#utility.yul\":2500:2563   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2559:2560   */\n      0x00\n        /* \"#utility.yul\":2556:2557   */\n      0x00\n        /* \"#utility.yul\":2549:2561   */\n      revert\n        /* \"#utility.yul\":2500:2563   */\n    tag_169:\n        /* \"#utility.yul\":2447:2569   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2575:2714   */\n    tag_129:\n        /* \"#utility.yul\":2621:2626   */\n      0x00\n        /* \"#utility.yul\":2659:2665   */\n      dup2\n        /* \"#utility.yul\":2646:2666   */\n      calldataload\n        /* \"#utility.yul\":2637:2666   */\n      swap1\n      pop\n        /* \"#utility.yul\":2675:2708   */\n      tag_171\n        /* \"#utility.yul\":2702:2707   */\n      dup2\n        /* \"#utility.yul\":2675:2708   */\n      tag_128\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2575:2714   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2720:3194   */\n    tag_28:\n        /* \"#utility.yul\":2788:2794   */\n      0x00\n        /* \"#utility.yul\":2796:2802   */\n      0x00\n        /* \"#utility.yul\":2845:2847   */\n      0x40\n        /* \"#utility.yul\":2833:2842   */\n      dup4\n        /* \"#utility.yul\":2824:2831   */\n      dup6\n        /* \"#utility.yul\":2820:2843   */\n      sub\n        /* \"#utility.yul\":2816:2848   */\n      slt\n        /* \"#utility.yul\":2813:2932   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2851:2930   */\n      tag_174\n      tag_117\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2813:2932   */\n    tag_173:\n        /* \"#utility.yul\":2971:2972   */\n      0x00\n        /* \"#utility.yul\":2996:3049   */\n      tag_175\n        /* \"#utility.yul\":3041:3048   */\n      dup6\n        /* \"#utility.yul\":3032:3038   */\n      dup3\n        /* \"#utility.yul\":3021:3030   */\n      dup7\n        /* \"#utility.yul\":3017:3039   */\n      add\n        /* \"#utility.yul\":2996:3049   */\n      tag_121\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2986:3049   */\n      swap3\n      pop\n        /* \"#utility.yul\":2942:3059   */\n      pop\n        /* \"#utility.yul\":3098:3100   */\n      0x20\n        /* \"#utility.yul\":3124:3177   */\n      tag_176\n        /* \"#utility.yul\":3169:3176   */\n      dup6\n        /* \"#utility.yul\":3160:3166   */\n      dup3\n        /* \"#utility.yul\":3149:3158   */\n      dup7\n        /* \"#utility.yul\":3145:3167   */\n      add\n        /* \"#utility.yul\":3124:3177   */\n      tag_129\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3114:3177   */\n      swap2\n      pop\n        /* \"#utility.yul\":3069:3187   */\n      pop\n        /* \"#utility.yul\":2720:3194   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3318   */\n    tag_130:\n        /* \"#utility.yul\":3287:3311   */\n      tag_178\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3287:3311   */\n      tag_124\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3282:3285   */\n      dup3\n        /* \"#utility.yul\":3275:3312   */\n      mstore\n        /* \"#utility.yul\":3200:3318   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3324:3546   */\n    tag_31:\n        /* \"#utility.yul\":3417:3421   */\n      0x00\n        /* \"#utility.yul\":3455:3457   */\n      0x20\n        /* \"#utility.yul\":3444:3453   */\n      dup3\n        /* \"#utility.yul\":3440:3458   */\n      add\n        /* \"#utility.yul\":3432:3458   */\n      swap1\n      pop\n        /* \"#utility.yul\":3468:3539   */\n      tag_180\n        /* \"#utility.yul\":3536:3537   */\n      0x00\n        /* \"#utility.yul\":3525:3534   */\n      dup4\n        /* \"#utility.yul\":3521:3538   */\n      add\n        /* \"#utility.yul\":3512:3518   */\n      dup5\n        /* \"#utility.yul\":3468:3539   */\n      tag_130\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3324:3546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3552:3642   */\n    tag_131:\n        /* \"#utility.yul\":3586:3593   */\n      0x00\n        /* \"#utility.yul\":3629:3634   */\n      dup2\n        /* \"#utility.yul\":3622:3635   */\n      iszero\n        /* \"#utility.yul\":3615:3636   */\n      iszero\n        /* \"#utility.yul\":3604:3636   */\n      swap1\n      pop\n        /* \"#utility.yul\":3552:3642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3648:3757   */\n    tag_132:\n        /* \"#utility.yul\":3729:3750   */\n      tag_183\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3729:3750   */\n      tag_131\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3724:3727   */\n      dup3\n        /* \"#utility.yul\":3717:3751   */\n      mstore\n        /* \"#utility.yul\":3648:3757   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3763:3973   */\n    tag_36:\n        /* \"#utility.yul\":3850:3854   */\n      0x00\n        /* \"#utility.yul\":3888:3890   */\n      0x20\n        /* \"#utility.yul\":3877:3886   */\n      dup3\n        /* \"#utility.yul\":3873:3891   */\n      add\n        /* \"#utility.yul\":3865:3891   */\n      swap1\n      pop\n        /* \"#utility.yul\":3901:3966   */\n      tag_185\n        /* \"#utility.yul\":3963:3964   */\n      0x00\n        /* \"#utility.yul\":3952:3961   */\n      dup4\n        /* \"#utility.yul\":3948:3965   */\n      add\n        /* \"#utility.yul\":3939:3945   */\n      dup5\n        /* \"#utility.yul\":3901:3966   */\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3763:3973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3979:4097   */\n    tag_133:\n        /* \"#utility.yul\":4066:4090   */\n      tag_187\n        /* \"#utility.yul\":4084:4089   */\n      dup2\n        /* \"#utility.yul\":4066:4090   */\n      tag_127\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4061:4064   */\n      dup3\n        /* \"#utility.yul\":4054:4091   */\n      mstore\n        /* \"#utility.yul\":3979:4097   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4103:4325   */\n    tag_48:\n        /* \"#utility.yul\":4196:4200   */\n      0x00\n        /* \"#utility.yul\":4234:4236   */\n      0x20\n        /* \"#utility.yul\":4223:4232   */\n      dup3\n        /* \"#utility.yul\":4219:4237   */\n      add\n        /* \"#utility.yul\":4211:4237   */\n      swap1\n      pop\n        /* \"#utility.yul\":4247:4318   */\n      tag_189\n        /* \"#utility.yul\":4315:4316   */\n      0x00\n        /* \"#utility.yul\":4304:4313   */\n      dup4\n        /* \"#utility.yul\":4300:4317   */\n      add\n        /* \"#utility.yul\":4291:4297   */\n      dup5\n        /* \"#utility.yul\":4247:4318   */\n      tag_133\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4103:4325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4331:4663   */\n    tag_58:\n        /* \"#utility.yul\":4452:4456   */\n      0x00\n        /* \"#utility.yul\":4490:4492   */\n      0x40\n        /* \"#utility.yul\":4479:4488   */\n      dup3\n        /* \"#utility.yul\":4475:4493   */\n      add\n        /* \"#utility.yul\":4467:4493   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4574   */\n      tag_191\n        /* \"#utility.yul\":4571:4572   */\n      0x00\n        /* \"#utility.yul\":4560:4569   */\n      dup4\n        /* \"#utility.yul\":4556:4573   */\n      add\n        /* \"#utility.yul\":4547:4553   */\n      dup6\n        /* \"#utility.yul\":4503:4574   */\n      tag_130\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4584:4656   */\n      tag_192\n        /* \"#utility.yul\":4652:4654   */\n      0x20\n        /* \"#utility.yul\":4641:4650   */\n      dup4\n        /* \"#utility.yul\":4637:4655   */\n      add\n        /* \"#utility.yul\":4628:4634   */\n      dup5\n        /* \"#utility.yul\":4584:4656   */\n      tag_122\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4331:4663   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4669:5001   */\n    tag_64:\n        /* \"#utility.yul\":4790:4794   */\n      0x00\n        /* \"#utility.yul\":4828:4830   */\n      0x40\n        /* \"#utility.yul\":4817:4826   */\n      dup3\n        /* \"#utility.yul\":4813:4831   */\n      add\n        /* \"#utility.yul\":4805:4831   */\n      swap1\n      pop\n        /* \"#utility.yul\":4841:4912   */\n      tag_194\n        /* \"#utility.yul\":4909:4910   */\n      0x00\n        /* \"#utility.yul\":4898:4907   */\n      dup4\n        /* \"#utility.yul\":4894:4911   */\n      add\n        /* \"#utility.yul\":4885:4891   */\n      dup6\n        /* \"#utility.yul\":4841:4912   */\n      tag_130\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4922:4994   */\n      tag_195\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4979:4988   */\n      dup4\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"#utility.yul\":4966:4972   */\n      dup5\n        /* \"#utility.yul\":4922:4994   */\n      tag_130\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4669:5001   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5007:5187   */\n    tag_134:\n        /* \"#utility.yul\":5055:5132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5045:5133   */\n      mstore\n        /* \"#utility.yul\":5152:5156   */\n      0x11\n        /* \"#utility.yul\":5149:5150   */\n      0x04\n        /* \"#utility.yul\":5142:5157   */\n      mstore\n        /* \"#utility.yul\":5176:5180   */\n      0x24\n        /* \"#utility.yul\":5173:5174   */\n      0x00\n        /* \"#utility.yul\":5166:5181   */\n      revert\n        /* \"#utility.yul\":5193:5384   */\n    tag_74:\n        /* \"#utility.yul\":5233:5236   */\n      0x00\n        /* \"#utility.yul\":5252:5272   */\n      tag_198\n        /* \"#utility.yul\":5270:5271   */\n      dup3\n        /* \"#utility.yul\":5252:5272   */\n      tag_127\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5247:5272   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5306   */\n      tag_199\n        /* \"#utility.yul\":5304:5305   */\n      dup4\n        /* \"#utility.yul\":5286:5306   */\n      tag_127\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5281:5306   */\n      swap3\n      pop\n        /* \"#utility.yul\":5329:5330   */\n      dup3\n        /* \"#utility.yul\":5326:5327   */\n      dup3\n        /* \"#utility.yul\":5322:5331   */\n      add\n        /* \"#utility.yul\":5315:5331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5350:5353   */\n      dup1\n        /* \"#utility.yul\":5347:5348   */\n      dup3\n        /* \"#utility.yul\":5344:5354   */\n      gt\n        /* \"#utility.yul\":5341:5377   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":5357:5375   */\n      tag_201\n      tag_134\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5341:5377   */\n    tag_200:\n        /* \"#utility.yul\":5193:5384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206a86cb833cb0af6b15f53d9e7e198b4e49ef4b022bdafbaf61e9325fb78546c564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50610e648061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c806391d148541161006457806391d148541461012d578063a217fddf1461015d578063a32fa5b31461017b578063ca15c873146101ab578063d547741f146101db57610091565b8063248a9ca3146100955780632f2ff15d146100c557806336568abe146100e15780639010d07c146100fd575b5f5ffd5b6100af60048036038101906100aa9190610ba1565b6101f7565b6040516100bc9190610bdb565b60405180910390f35b6100df60048036038101906100da9190610c4e565b610211565b005b6100fb60048036038101906100f69190610c4e565b6102d6565b005b61011760048036038101906101129190610cbf565b610356565b6040516101249190610d0c565b60405180910390f35b61014760048036038101906101429190610c4e565b6104f1565b6040516101549190610d3f565b60405180910390f35b610165610552565b6040516101729190610bdb565b60405180910390f35b61019560048036038101906101909190610c4e565b610558565b6040516101a29190610d3f565b60405180910390f35b6101c560048036038101906101c09190610ba1565b61061f565b6040516101d29190610d67565b60405180910390f35b6101f560048036038101906101f09190610c4e565b610703565b005b5f60015f8381526020019081526020015f20549050919050565b61022c60015f8481526020019081526020015f20543361072c565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102c85780826040517fd49c166a0000000000000000000000000000000000000000000000000000000081526004016102bf929190610d80565b60405180910390fd5b6102d282826107cb565b5050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103485733816040517f4169c62200000000000000000000000000000000000000000000000000000000815260040161033f929190610da7565b60405180910390fd5b61035282826107e3565b5050565b5f5f60025f8581526020019081526020015f205f015490505f5f5f90505b828110156104e7575f73ffffffffffffffffffffffffffffffffffffffff1660025f8881526020019081526020015f206001015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610459578482036104455760025f8781526020019081526020015f206001015f8281526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693505050506104eb565b6001826104529190610dfb565b91506104d3565b610463865f6104f1565b80156104bd575060025f8781526020019081526020015f206002015f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481145b156104d2576001826104cf9190610dfb565b91505b5b6001816104e09190610dfb565b9050610374565b5050505b92915050565b5f5f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f5f5f8481526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610614575f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050610619565b600190505b92915050565b5f5f60025f8481526020019081526020015f205f015490505f5f90505b818110156106dd575f73ffffffffffffffffffffffffffffffffffffffff1660025f8681526020019081526020015f206001015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c9576001836106c69190610dfb565b92505b6001816106d69190610dfb565b905061063c565b506106e8835f6104f1565b156106fd576001826106fa9190610dfb565b91505b50919050565b61071e60015f8481526020019081526020015f20543361072c565b61072882826107e3565b5050565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166107c75780826040517f0878b1060000000000000000000000000000000000000000000000000000000081526004016107be929190610d80565b60405180910390fd5b5050565b6107d582826107fb565b6107df82826108bd565b5050565b6107ed82826109b8565b6107f78282610a7b565b5050565b60015f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b5f60025f8481526020019081526020015f205f01549050600160025f8581526020019081526020015f205f015f8282546108f79190610dfb565b925050819055508160025f8581526020019081526020015f206001015f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f8581526020019081526020015f206002015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b6109c2828261072c565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549060ff02191690553373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b5f60025f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905060025f8481526020019081526020015f206001015f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560025f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9055505050565b5f5ffd5b5f819050919050565b610b8081610b6e565b8114610b8a575f5ffd5b50565b5f81359050610b9b81610b77565b92915050565b5f60208284031215610bb657610bb5610b6a565b5b5f610bc384828501610b8d565b91505092915050565b610bd581610b6e565b82525050565b5f602082019050610bee5f830184610bcc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1d82610bf4565b9050919050565b610c2d81610c13565b8114610c37575f5ffd5b50565b5f81359050610c4881610c24565b92915050565b5f5f60408385031215610c6457610c63610b6a565b5b5f610c7185828601610b8d565b9250506020610c8285828601610c3a565b9150509250929050565b5f819050919050565b610c9e81610c8c565b8114610ca8575f5ffd5b50565b5f81359050610cb981610c95565b92915050565b5f5f60408385031215610cd557610cd4610b6a565b5b5f610ce285828601610b8d565b9250506020610cf385828601610cab565b9150509250929050565b610d0681610c13565b82525050565b5f602082019050610d1f5f830184610cfd565b92915050565b5f8115159050919050565b610d3981610d25565b82525050565b5f602082019050610d525f830184610d30565b92915050565b610d6181610c8c565b82525050565b5f602082019050610d7a5f830184610d58565b92915050565b5f604082019050610d935f830185610cfd565b610da06020830184610bcc565b9392505050565b5f604082019050610dba5f830185610cfd565b610dc76020830184610cfd565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0582610c8c565b9150610e1083610c8c565b9250828201905080821115610e2857610e27610dce565b5b9291505056fea26469706673582212206a86cb833cb0af6b15f53d9e7e198b4e49ef4b022bdafbaf61e9325fb78546c564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xE64 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xA32FA5B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1DB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x72C JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD49C166A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF SWAP3 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D2 DUP3 DUP3 PUSH2 0x7CB JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x348 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x4169C62200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F SWAP3 SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP3 DUP3 PUSH2 0x7E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x459 JUMPI DUP5 DUP3 SUB PUSH2 0x445 JUMPI PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x463 DUP7 PUSH0 PUSH2 0x4F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI POP PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x1 DUP3 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP PUSH2 0x374 JUMP JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x614 JUMPI PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DD JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C9 JUMPI PUSH1 0x1 DUP4 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP PUSH2 0x63C JUMP JUMPDEST POP PUSH2 0x6E8 DUP4 PUSH0 PUSH2 0x4F1 JUMP JUMPDEST ISZERO PUSH2 0x6FD JUMPI PUSH1 0x1 DUP3 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71E PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x72C JUMP JUMPDEST PUSH2 0x728 DUP3 DUP3 PUSH2 0x7E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C7 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x878B10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP3 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7D5 DUP3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7DF DUP3 DUP3 PUSH2 0x8BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7ED DUP3 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x7F7 DUP3 DUP3 PUSH2 0xA7B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x9C2 DUP3 DUP3 PUSH2 0x72C JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9B DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC3 DUP5 DUP3 DUP6 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD5 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC1D DUP3 PUSH2 0xBF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP2 EQ PUSH2 0xC37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC48 DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC71 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC82 DUP6 DUP3 DUP7 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP2 EQ PUSH2 0xCA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB9 DUP2 PUSH2 0xC95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE2 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP6 DUP3 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1F PUSH0 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD52 PUSH0 DUP4 ADD DUP5 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7A PUSH0 DUP4 ADD DUP5 PUSH2 0xD58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD93 PUSH0 DUP4 ADD DUP6 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xDA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDBA PUSH0 DUP4 ADD DUP6 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xDC7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0xC8C JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP4 PUSH2 0xC8C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x86CB833CB0AF6B15F53D9E PUSH31 0x198B4E49EF4B022BDAFBAF61E9325FB78546C564736F6C634300081E003300 ",
							"sourceMap": "412:3828:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_43": {
									"entryPoint": 1362,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addMember_591": {
									"entryPoint": 2237,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_304": {
									"entryPoint": 1836,
									"id": 304,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_removeMember_625": {
									"entryPoint": 2683,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_282": {
									"entryPoint": 2488,
									"id": 282,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_528": {
									"entryPoint": 2019,
									"id": 528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_254": {
									"entryPoint": 2043,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setupRole_550": {
									"entryPoint": 1995,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_118": {
									"entryPoint": 503,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleMemberCount_506": {
									"entryPoint": 1567,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleMember_446": {
									"entryPoint": 854,
									"id": 446,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantRole_153": {
									"entryPoint": 529,
									"id": 153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRoleWithSwitch_104": {
									"entryPoint": 1368,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_74": {
									"entryPoint": 1265,
									"id": 74,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_203": {
									"entryPoint": 726,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_176": {
									"entryPoint": 1795,
									"id": 176,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 3456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5387:5",
										"nodeType": "YulBlock",
										"src": "0:5387:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:5",
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nativeSrc": "57:19:5",
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:5",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nativeSrc": "67:9:5",
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:5",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nativeSrc": "177:28:5",
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:5",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:5",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nativeSrc": "187:12:5",
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nativeSrc": "187:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nativeSrc": "300:28:5",
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:5",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:5",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nativeSrc": "310:12:5",
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nativeSrc": "310:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nativeSrc": "379:32:5",
													"nodeType": "YulBlock",
													"src": "379:32:5",
													"statements": [
														{
															"nativeSrc": "389:16:5",
															"nodeType": "YulAssignment",
															"src": "389:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:5",
																"nodeType": "YulIdentifier",
																"src": "400:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:5",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:5",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:77:5"
											},
											{
												"body": {
													"nativeSrc": "460:79:5",
													"nodeType": "YulBlock",
													"src": "460:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:5",
																"nodeType": "YulBlock",
																"src": "517:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:5",
																					"nodeType": "YulLiteral",
																					"src": "529:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:5"
																			},
																			"nativeSrc": "519:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:5"
																		},
																		"nativeSrc": "519:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:5"
																				},
																				"nativeSrc": "490:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:5"
																		},
																		"nativeSrc": "480:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:5"
																},
																"nativeSrc": "473:43:5",
																"nodeType": "YulFunctionCall",
																"src": "473:43:5"
															},
															"nativeSrc": "470:63:5",
															"nodeType": "YulIf",
															"src": "470:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:5",
														"nodeType": "YulTypedName",
														"src": "453:5:5",
														"type": ""
													}
												],
												"src": "417:122:5"
											},
											{
												"body": {
													"nativeSrc": "597:87:5",
													"nodeType": "YulBlock",
													"src": "597:87:5",
													"statements": [
														{
															"nativeSrc": "607:29:5",
															"nodeType": "YulAssignment",
															"src": "607:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:5"
																},
																"nativeSrc": "616:20:5",
																"nodeType": "YulFunctionCall",
																"src": "616:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:5"
																},
																"nativeSrc": "645:33:5",
																"nodeType": "YulFunctionCall",
																"src": "645:33:5"
															},
															"nativeSrc": "645:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:5",
														"nodeType": "YulTypedName",
														"src": "575:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:5",
														"nodeType": "YulTypedName",
														"src": "583:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:5",
														"nodeType": "YulTypedName",
														"src": "591:5:5",
														"type": ""
													}
												],
												"src": "545:139:5"
											},
											{
												"body": {
													"nativeSrc": "756:263:5",
													"nodeType": "YulBlock",
													"src": "756:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:5",
																"nodeType": "YulBlock",
																"src": "802:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:5"
																			},
																			"nativeSrc": "804:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:5"
																		},
																		"nativeSrc": "804:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:5"
																		},
																		"nativeSrc": "773:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:5",
																		"nodeType": "YulLiteral",
																		"src": "798:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:5"
																},
																"nativeSrc": "769:32:5",
																"nodeType": "YulFunctionCall",
																"src": "769:32:5"
															},
															"nativeSrc": "766:119:5",
															"nodeType": "YulIf",
															"src": "766:119:5"
														},
														{
															"nativeSrc": "895:117:5",
															"nodeType": "YulBlock",
															"src": "895:117:5",
															"statements": [
																{
																	"nativeSrc": "910:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "924:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:5",
																			"nodeType": "YulTypedName",
																			"src": "914:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:5",
																	"nodeType": "YulAssignment",
																	"src": "939:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:5"
																				},
																				"nativeSrc": "970:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:5"
																		},
																		"nativeSrc": "949:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:5",
														"nodeType": "YulTypedName",
														"src": "737:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:5",
														"nodeType": "YulTypedName",
														"src": "749:6:5",
														"type": ""
													}
												],
												"src": "690:329:5"
											},
											{
												"body": {
													"nativeSrc": "1090:53:5",
													"nodeType": "YulBlock",
													"src": "1090:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1112:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:5"
																		},
																		"nativeSrc": "1112:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:5"
																},
																"nativeSrc": "1100:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:5"
															},
															"nativeSrc": "1100:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1025:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:5",
														"nodeType": "YulTypedName",
														"src": "1078:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:5",
														"nodeType": "YulTypedName",
														"src": "1085:3:5",
														"type": ""
													}
												],
												"src": "1025:118:5"
											},
											{
												"body": {
													"nativeSrc": "1247:124:5",
													"nodeType": "YulBlock",
													"src": "1247:124:5",
													"statements": [
														{
															"nativeSrc": "1257:26:5",
															"nodeType": "YulAssignment",
															"src": "1257:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:5"
																},
																"nativeSrc": "1265:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:5"
																		},
																		"nativeSrc": "1346:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "1293:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:5"
																},
																"nativeSrc": "1293:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:5"
															},
															"nativeSrc": "1293:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1149:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:5",
														"nodeType": "YulTypedName",
														"src": "1219:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:5",
														"nodeType": "YulTypedName",
														"src": "1231:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:5",
														"nodeType": "YulTypedName",
														"src": "1242:4:5",
														"type": ""
													}
												],
												"src": "1149:222:5"
											},
											{
												"body": {
													"nativeSrc": "1422:81:5",
													"nodeType": "YulBlock",
													"src": "1422:81:5",
													"statements": [
														{
															"nativeSrc": "1432:65:5",
															"nodeType": "YulAssignment",
															"src": "1432:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1454:42:5",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:5"
																},
																"nativeSrc": "1443:54:5",
																"nodeType": "YulFunctionCall",
																"src": "1443:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1432:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1377:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1404:5:5",
														"nodeType": "YulTypedName",
														"src": "1404:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1414:7:5",
														"nodeType": "YulTypedName",
														"src": "1414:7:5",
														"type": ""
													}
												],
												"src": "1377:126:5"
											},
											{
												"body": {
													"nativeSrc": "1554:51:5",
													"nodeType": "YulBlock",
													"src": "1554:51:5",
													"statements": [
														{
															"nativeSrc": "1564:35:5",
															"nodeType": "YulAssignment",
															"src": "1564:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1593:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1593:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1575:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "1575:17:5"
																},
																"nativeSrc": "1575:24:5",
																"nodeType": "YulFunctionCall",
																"src": "1575:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1564:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "1564:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1509:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1536:5:5",
														"nodeType": "YulTypedName",
														"src": "1536:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1546:7:5",
														"nodeType": "YulTypedName",
														"src": "1546:7:5",
														"type": ""
													}
												],
												"src": "1509:96:5"
											},
											{
												"body": {
													"nativeSrc": "1654:79:5",
													"nodeType": "YulBlock",
													"src": "1654:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:5",
																"nodeType": "YulBlock",
																"src": "1711:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:5"
																		},
																		"nativeSrc": "1713:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:5"
																				},
																				"nativeSrc": "1684:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:5"
																		},
																		"nativeSrc": "1674:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:5"
																},
																"nativeSrc": "1667:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:5"
															},
															"nativeSrc": "1664:63:5",
															"nodeType": "YulIf",
															"src": "1664:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:5",
														"nodeType": "YulTypedName",
														"src": "1647:5:5",
														"type": ""
													}
												],
												"src": "1611:122:5"
											},
											{
												"body": {
													"nativeSrc": "1791:87:5",
													"nodeType": "YulBlock",
													"src": "1791:87:5",
													"statements": [
														{
															"nativeSrc": "1801:29:5",
															"nodeType": "YulAssignment",
															"src": "1801:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:5"
																},
																"nativeSrc": "1810:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:5"
																},
																"nativeSrc": "1839:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:5"
															},
															"nativeSrc": "1839:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:5",
														"nodeType": "YulTypedName",
														"src": "1769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:5",
														"nodeType": "YulTypedName",
														"src": "1777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:5",
														"nodeType": "YulTypedName",
														"src": "1785:5:5",
														"type": ""
													}
												],
												"src": "1739:139:5"
											},
											{
												"body": {
													"nativeSrc": "1967:391:5",
													"nodeType": "YulBlock",
													"src": "1967:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:5",
																"nodeType": "YulBlock",
																"src": "2013:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:5"
																			},
																			"nativeSrc": "2015:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:5"
																		},
																		"nativeSrc": "2015:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:5"
																		},
																		"nativeSrc": "1984:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:5"
																},
																"nativeSrc": "1980:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:5"
															},
															"nativeSrc": "1977:119:5",
															"nodeType": "YulIf",
															"src": "1977:119:5"
														},
														{
															"nativeSrc": "2106:117:5",
															"nodeType": "YulBlock",
															"src": "2106:117:5",
															"statements": [
																{
																	"nativeSrc": "2121:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:5"
																				},
																				"nativeSrc": "2181:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2160:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:5"
																		},
																		"nativeSrc": "2160:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:5",
															"nodeType": "YulBlock",
															"src": "2233:118:5",
															"statements": [
																{
																	"nativeSrc": "2248:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:5"
																				},
																				"nativeSrc": "2309:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:5"
																		},
																		"nativeSrc": "2288:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1884:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:5",
														"nodeType": "YulTypedName",
														"src": "1929:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:5",
														"nodeType": "YulTypedName",
														"src": "1940:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:5",
														"nodeType": "YulTypedName",
														"src": "1952:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:5",
														"nodeType": "YulTypedName",
														"src": "1960:6:5",
														"type": ""
													}
												],
												"src": "1884:474:5"
											},
											{
												"body": {
													"nativeSrc": "2409:32:5",
													"nodeType": "YulBlock",
													"src": "2409:32:5",
													"statements": [
														{
															"nativeSrc": "2419:16:5",
															"nodeType": "YulAssignment",
															"src": "2419:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "2430:5:5",
																"nodeType": "YulIdentifier",
																"src": "2430:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2419:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "2419:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2364:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2391:5:5",
														"nodeType": "YulTypedName",
														"src": "2391:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2401:7:5",
														"nodeType": "YulTypedName",
														"src": "2401:7:5",
														"type": ""
													}
												],
												"src": "2364:77:5"
											},
											{
												"body": {
													"nativeSrc": "2490:79:5",
													"nodeType": "YulBlock",
													"src": "2490:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2547:16:5",
																"nodeType": "YulBlock",
																"src": "2547:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2556:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2556:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2559:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2559:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2549:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2549:6:5"
																			},
																			"nativeSrc": "2549:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2549:12:5"
																		},
																		"nativeSrc": "2549:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2549:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2513:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2513:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2538:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2538:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2520:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2520:17:5"
																				},
																				"nativeSrc": "2520:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2520:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2510:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2510:2:5"
																		},
																		"nativeSrc": "2510:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2510:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2503:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2503:6:5"
																},
																"nativeSrc": "2503:43:5",
																"nodeType": "YulFunctionCall",
																"src": "2503:43:5"
															},
															"nativeSrc": "2500:63:5",
															"nodeType": "YulIf",
															"src": "2500:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2447:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2483:5:5",
														"nodeType": "YulTypedName",
														"src": "2483:5:5",
														"type": ""
													}
												],
												"src": "2447:122:5"
											},
											{
												"body": {
													"nativeSrc": "2627:87:5",
													"nodeType": "YulBlock",
													"src": "2627:87:5",
													"statements": [
														{
															"nativeSrc": "2637:29:5",
															"nodeType": "YulAssignment",
															"src": "2637:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2659:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2659:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2646:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2646:12:5"
																},
																"nativeSrc": "2646:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2646:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2637:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2637:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2702:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2702:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2675:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "2675:26:5"
																},
																"nativeSrc": "2675:33:5",
																"nodeType": "YulFunctionCall",
																"src": "2675:33:5"
															},
															"nativeSrc": "2675:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "2675:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2575:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2605:6:5",
														"nodeType": "YulTypedName",
														"src": "2605:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2613:3:5",
														"nodeType": "YulTypedName",
														"src": "2613:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2621:5:5",
														"nodeType": "YulTypedName",
														"src": "2621:5:5",
														"type": ""
													}
												],
												"src": "2575:139:5"
											},
											{
												"body": {
													"nativeSrc": "2803:391:5",
													"nodeType": "YulBlock",
													"src": "2803:391:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2849:83:5",
																"nodeType": "YulBlock",
																"src": "2849:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2851:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "2851:77:5"
																			},
																			"nativeSrc": "2851:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2851:79:5"
																		},
																		"nativeSrc": "2851:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2851:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2824:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2824:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2833:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2833:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2820:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2820:3:5"
																		},
																		"nativeSrc": "2820:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2820:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2845:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2816:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:5"
																},
																"nativeSrc": "2816:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2816:32:5"
															},
															"nativeSrc": "2813:119:5",
															"nodeType": "YulIf",
															"src": "2813:119:5"
														},
														{
															"nativeSrc": "2942:117:5",
															"nodeType": "YulBlock",
															"src": "2942:117:5",
															"statements": [
																{
																	"nativeSrc": "2957:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2957:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2971:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2971:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2961:6:5",
																			"nodeType": "YulTypedName",
																			"src": "2961:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2986:63:5",
																	"nodeType": "YulAssignment",
																	"src": "2986:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3021:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3021:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3032:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3032:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3017:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3017:3:5"
																				},
																				"nativeSrc": "3017:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3017:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3041:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3041:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2996:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "2996:20:5"
																		},
																		"nativeSrc": "2996:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2986:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "2986:6:5"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3069:118:5",
															"nodeType": "YulBlock",
															"src": "3069:118:5",
															"statements": [
																{
																	"nativeSrc": "3084:16:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3084:16:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3098:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3098:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3088:6:5",
																			"nodeType": "YulTypedName",
																			"src": "3088:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3114:63:5",
																	"nodeType": "YulAssignment",
																	"src": "3114:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3149:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "3149:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3160:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3160:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3145:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3145:3:5"
																				},
																				"nativeSrc": "3145:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3145:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3169:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3169:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3124:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "3124:20:5"
																		},
																		"nativeSrc": "3124:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3114:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3114:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "2720:474:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2765:9:5",
														"nodeType": "YulTypedName",
														"src": "2765:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2776:7:5",
														"nodeType": "YulTypedName",
														"src": "2776:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2788:6:5",
														"nodeType": "YulTypedName",
														"src": "2788:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2796:6:5",
														"nodeType": "YulTypedName",
														"src": "2796:6:5",
														"type": ""
													}
												],
												"src": "2720:474:5"
											},
											{
												"body": {
													"nativeSrc": "3265:53:5",
													"nodeType": "YulBlock",
													"src": "3265:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3282:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3282:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3305:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3305:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3287:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3287:17:5"
																		},
																		"nativeSrc": "3287:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3275:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:5"
																},
																"nativeSrc": "3275:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3275:37:5"
															},
															"nativeSrc": "3275:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3275:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3200:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3253:5:5",
														"nodeType": "YulTypedName",
														"src": "3253:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3260:3:5",
														"nodeType": "YulTypedName",
														"src": "3260:3:5",
														"type": ""
													}
												],
												"src": "3200:118:5"
											},
											{
												"body": {
													"nativeSrc": "3422:124:5",
													"nodeType": "YulBlock",
													"src": "3422:124:5",
													"statements": [
														{
															"nativeSrc": "3432:26:5",
															"nodeType": "YulAssignment",
															"src": "3432:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3444:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3444:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3455:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3455:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3440:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3440:3:5"
																},
																"nativeSrc": "3440:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3440:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3432:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3432:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3512:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3512:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3525:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3536:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3536:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3521:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3521:3:5"
																		},
																		"nativeSrc": "3521:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3521:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3468:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "3468:43:5"
																},
																"nativeSrc": "3468:71:5",
																"nodeType": "YulFunctionCall",
																"src": "3468:71:5"
															},
															"nativeSrc": "3468:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "3468:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3324:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3394:9:5",
														"nodeType": "YulTypedName",
														"src": "3394:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3406:6:5",
														"nodeType": "YulTypedName",
														"src": "3406:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3417:4:5",
														"nodeType": "YulTypedName",
														"src": "3417:4:5",
														"type": ""
													}
												],
												"src": "3324:222:5"
											},
											{
												"body": {
													"nativeSrc": "3594:48:5",
													"nodeType": "YulBlock",
													"src": "3594:48:5",
													"statements": [
														{
															"nativeSrc": "3604:32:5",
															"nodeType": "YulAssignment",
															"src": "3604:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3629:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3629:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3622:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "3622:6:5"
																		},
																		"nativeSrc": "3622:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3615:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:5"
																},
																"nativeSrc": "3615:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3615:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3604:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3604:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3552:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3576:5:5",
														"nodeType": "YulTypedName",
														"src": "3576:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3586:7:5",
														"nodeType": "YulTypedName",
														"src": "3586:7:5",
														"type": ""
													}
												],
												"src": "3552:90:5"
											},
											{
												"body": {
													"nativeSrc": "3707:50:5",
													"nodeType": "YulBlock",
													"src": "3707:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3724:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3724:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3744:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3744:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3729:14:5",
																			"nodeType": "YulIdentifier",
																			"src": "3729:14:5"
																		},
																		"nativeSrc": "3729:21:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3729:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3717:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3717:6:5"
																},
																"nativeSrc": "3717:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3717:34:5"
															},
															"nativeSrc": "3717:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3717:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3648:109:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3695:5:5",
														"nodeType": "YulTypedName",
														"src": "3695:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3702:3:5",
														"nodeType": "YulTypedName",
														"src": "3702:3:5",
														"type": ""
													}
												],
												"src": "3648:109:5"
											},
											{
												"body": {
													"nativeSrc": "3855:118:5",
													"nodeType": "YulBlock",
													"src": "3855:118:5",
													"statements": [
														{
															"nativeSrc": "3865:26:5",
															"nodeType": "YulAssignment",
															"src": "3865:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3877:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3877:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3888:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3888:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3873:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:5"
																},
																"nativeSrc": "3873:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3873:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3865:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3865:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3939:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3939:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3952:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3952:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3963:1:5",
																				"nodeType": "YulLiteral",
																				"src": "3963:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3948:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3948:3:5"
																		},
																		"nativeSrc": "3948:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3948:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3901:37:5",
																	"nodeType": "YulIdentifier",
																	"src": "3901:37:5"
																},
																"nativeSrc": "3901:65:5",
																"nodeType": "YulFunctionCall",
																"src": "3901:65:5"
															},
															"nativeSrc": "3901:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "3901:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3763:210:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3827:9:5",
														"nodeType": "YulTypedName",
														"src": "3827:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3839:6:5",
														"nodeType": "YulTypedName",
														"src": "3839:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3850:4:5",
														"nodeType": "YulTypedName",
														"src": "3850:4:5",
														"type": ""
													}
												],
												"src": "3763:210:5"
											},
											{
												"body": {
													"nativeSrc": "4044:53:5",
													"nodeType": "YulBlock",
													"src": "4044:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4061:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4084:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4084:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4066:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "4066:17:5"
																		},
																		"nativeSrc": "4066:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4054:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:5"
																},
																"nativeSrc": "4054:37:5",
																"nodeType": "YulFunctionCall",
																"src": "4054:37:5"
															},
															"nativeSrc": "4054:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "4054:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3979:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4032:5:5",
														"nodeType": "YulTypedName",
														"src": "4032:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4039:3:5",
														"nodeType": "YulTypedName",
														"src": "4039:3:5",
														"type": ""
													}
												],
												"src": "3979:118:5"
											},
											{
												"body": {
													"nativeSrc": "4201:124:5",
													"nodeType": "YulBlock",
													"src": "4201:124:5",
													"statements": [
														{
															"nativeSrc": "4211:26:5",
															"nodeType": "YulAssignment",
															"src": "4211:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4223:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4223:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4234:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4234:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4219:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4219:3:5"
																},
																"nativeSrc": "4219:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4219:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4211:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4211:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4291:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4291:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4304:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4304:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4300:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4300:3:5"
																		},
																		"nativeSrc": "4300:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4300:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4247:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4247:43:5"
																},
																"nativeSrc": "4247:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4247:71:5"
															},
															"nativeSrc": "4247:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4247:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4103:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4173:9:5",
														"nodeType": "YulTypedName",
														"src": "4173:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4185:6:5",
														"nodeType": "YulTypedName",
														"src": "4185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4196:4:5",
														"nodeType": "YulTypedName",
														"src": "4196:4:5",
														"type": ""
													}
												],
												"src": "4103:222:5"
											},
											{
												"body": {
													"nativeSrc": "4457:206:5",
													"nodeType": "YulBlock",
													"src": "4457:206:5",
													"statements": [
														{
															"nativeSrc": "4467:26:5",
															"nodeType": "YulAssignment",
															"src": "4467:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4479:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4490:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4475:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:5"
																},
																"nativeSrc": "4475:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4475:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4467:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4547:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4560:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4560:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4571:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4571:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4556:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4556:3:5"
																		},
																		"nativeSrc": "4556:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4556:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4503:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4503:43:5"
																},
																"nativeSrc": "4503:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4503:71:5"
															},
															"nativeSrc": "4503:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4503:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4628:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4628:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4641:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4652:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4652:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4637:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:5"
																		},
																		"nativeSrc": "4637:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4584:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4584:43:5"
																},
																"nativeSrc": "4584:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4584:72:5"
															},
															"nativeSrc": "4584:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4584:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "4331:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4421:9:5",
														"nodeType": "YulTypedName",
														"src": "4421:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4433:6:5",
														"nodeType": "YulTypedName",
														"src": "4433:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4441:6:5",
														"nodeType": "YulTypedName",
														"src": "4441:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4452:4:5",
														"nodeType": "YulTypedName",
														"src": "4452:4:5",
														"type": ""
													}
												],
												"src": "4331:332:5"
											},
											{
												"body": {
													"nativeSrc": "4795:206:5",
													"nodeType": "YulBlock",
													"src": "4795:206:5",
													"statements": [
														{
															"nativeSrc": "4805:26:5",
															"nodeType": "YulAssignment",
															"src": "4805:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4817:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4817:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4828:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4828:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4813:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4813:3:5"
																},
																"nativeSrc": "4813:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4813:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4805:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4805:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4885:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4885:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4898:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4898:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4909:1:5",
																				"nodeType": "YulLiteral",
																				"src": "4909:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4894:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:5"
																		},
																		"nativeSrc": "4894:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4841:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4841:43:5"
																},
																"nativeSrc": "4841:71:5",
																"nodeType": "YulFunctionCall",
																"src": "4841:71:5"
															},
															"nativeSrc": "4841:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "4841:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4966:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4966:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4979:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4979:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4990:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4990:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4975:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:5"
																		},
																		"nativeSrc": "4975:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4922:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "4922:43:5"
																},
																"nativeSrc": "4922:72:5",
																"nodeType": "YulFunctionCall",
																"src": "4922:72:5"
															},
															"nativeSrc": "4922:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "4922:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4669:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4759:9:5",
														"nodeType": "YulTypedName",
														"src": "4759:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4771:6:5",
														"nodeType": "YulTypedName",
														"src": "4771:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4779:6:5",
														"nodeType": "YulTypedName",
														"src": "4779:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4790:4:5",
														"nodeType": "YulTypedName",
														"src": "4790:4:5",
														"type": ""
													}
												],
												"src": "4669:332:5"
											},
											{
												"body": {
													"nativeSrc": "5035:152:5",
													"nodeType": "YulBlock",
													"src": "5035:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5052:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5055:77:5",
																		"nodeType": "YulLiteral",
																		"src": "5055:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5045:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:5"
																},
																"nativeSrc": "5045:88:5",
																"nodeType": "YulFunctionCall",
																"src": "5045:88:5"
															},
															"nativeSrc": "5045:88:5",
															"nodeType": "YulExpressionStatement",
															"src": "5045:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5149:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5149:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5152:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5152:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5142:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5142:6:5"
																},
																"nativeSrc": "5142:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5142:15:5"
															},
															"nativeSrc": "5142:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5142:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5173:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5173:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5176:4:5",
																		"nodeType": "YulLiteral",
																		"src": "5176:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:5"
																},
																"nativeSrc": "5166:15:5",
																"nodeType": "YulFunctionCall",
																"src": "5166:15:5"
															},
															"nativeSrc": "5166:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "5166:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5007:180:5",
												"nodeType": "YulFunctionDefinition",
												"src": "5007:180:5"
											},
											{
												"body": {
													"nativeSrc": "5237:147:5",
													"nodeType": "YulBlock",
													"src": "5237:147:5",
													"statements": [
														{
															"nativeSrc": "5247:25:5",
															"nodeType": "YulAssignment",
															"src": "5247:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5270:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5270:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5252:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5252:17:5"
																},
																"nativeSrc": "5252:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5252:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5247:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5247:1:5"
																}
															]
														},
														{
															"nativeSrc": "5281:25:5",
															"nodeType": "YulAssignment",
															"src": "5281:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5304:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5304:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5286:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "5286:17:5"
																},
																"nativeSrc": "5286:20:5",
																"nodeType": "YulFunctionCall",
																"src": "5286:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5281:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "5281:1:5"
																}
															]
														},
														{
															"nativeSrc": "5315:16:5",
															"nodeType": "YulAssignment",
															"src": "5315:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5326:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5326:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5329:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5329:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5322:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:5"
																},
																"nativeSrc": "5322:9:5",
																"nodeType": "YulFunctionCall",
																"src": "5322:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5355:22:5",
																"nodeType": "YulBlock",
																"src": "5355:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5357:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "5357:16:5"
																			},
																			"nativeSrc": "5357:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5357:18:5"
																		},
																		"nativeSrc": "5357:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5357:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5347:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "5347:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5350:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5344:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5344:2:5"
																},
																"nativeSrc": "5344:10:5",
																"nodeType": "YulFunctionCall",
																"src": "5344:10:5"
															},
															"nativeSrc": "5341:36:5",
															"nodeType": "YulIf",
															"src": "5341:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5193:191:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5224:1:5",
														"nodeType": "YulTypedName",
														"src": "5224:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5227:1:5",
														"nodeType": "YulTypedName",
														"src": "5227:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5233:3:5",
														"nodeType": "YulTypedName",
														"src": "5233:3:5",
														"type": ""
													}
												],
												"src": "5193:191:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c806391d148541161006457806391d148541461012d578063a217fddf1461015d578063a32fa5b31461017b578063ca15c873146101ab578063d547741f146101db57610091565b8063248a9ca3146100955780632f2ff15d146100c557806336568abe146100e15780639010d07c146100fd575b5f5ffd5b6100af60048036038101906100aa9190610ba1565b6101f7565b6040516100bc9190610bdb565b60405180910390f35b6100df60048036038101906100da9190610c4e565b610211565b005b6100fb60048036038101906100f69190610c4e565b6102d6565b005b61011760048036038101906101129190610cbf565b610356565b6040516101249190610d0c565b60405180910390f35b61014760048036038101906101429190610c4e565b6104f1565b6040516101549190610d3f565b60405180910390f35b610165610552565b6040516101729190610bdb565b60405180910390f35b61019560048036038101906101909190610c4e565b610558565b6040516101a29190610d3f565b60405180910390f35b6101c560048036038101906101c09190610ba1565b61061f565b6040516101d29190610d67565b60405180910390f35b6101f560048036038101906101f09190610c4e565b610703565b005b5f60015f8381526020019081526020015f20549050919050565b61022c60015f8481526020019081526020015f20543361072c565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156102c85780826040517fd49c166a0000000000000000000000000000000000000000000000000000000081526004016102bf929190610d80565b60405180910390fd5b6102d282826107cb565b5050565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103485733816040517f4169c62200000000000000000000000000000000000000000000000000000000815260040161033f929190610da7565b60405180910390fd5b61035282826107e3565b5050565b5f5f60025f8581526020019081526020015f205f015490505f5f5f90505b828110156104e7575f73ffffffffffffffffffffffffffffffffffffffff1660025f8881526020019081526020015f206001015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610459578482036104455760025f8781526020019081526020015f206001015f8281526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1693505050506104eb565b6001826104529190610dfb565b91506104d3565b610463865f6104f1565b80156104bd575060025f8781526020019081526020015f206002015f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205481145b156104d2576001826104cf9190610dfb565b91505b5b6001816104e09190610dfb565b9050610374565b5050505b92915050565b5f5f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f5f5f8481526020019081526020015f205f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610614575f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050610619565b600190505b92915050565b5f5f60025f8481526020019081526020015f205f015490505f5f90505b818110156106dd575f73ffffffffffffffffffffffffffffffffffffffff1660025f8681526020019081526020015f206001015f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c9576001836106c69190610dfb565b92505b6001816106d69190610dfb565b905061063c565b506106e8835f6104f1565b156106fd576001826106fa9190610dfb565b91505b50919050565b61071e60015f8481526020019081526020015f20543361072c565b61072882826107e3565b5050565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166107c75780826040517f0878b1060000000000000000000000000000000000000000000000000000000081526004016107be929190610d80565b60405180910390fd5b5050565b6107d582826107fb565b6107df82826108bd565b5050565b6107ed82826109b8565b6107f78282610a7b565b5050565b60015f5f8481526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b5f60025f8481526020019081526020015f205f01549050600160025f8581526020019081526020015f205f015f8282546108f79190610dfb565b925050819055508160025f8581526020019081526020015f206001015f8381526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f8581526020019081526020015f206002015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b6109c2828261072c565b5f5f8381526020019081526020015f205f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81549060ff02191690553373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b5f60025f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905060025f8481526020019081526020015f206001015f8281526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560025f8481526020019081526020015f206002015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9055505050565b5f5ffd5b5f819050919050565b610b8081610b6e565b8114610b8a575f5ffd5b50565b5f81359050610b9b81610b77565b92915050565b5f60208284031215610bb657610bb5610b6a565b5b5f610bc384828501610b8d565b91505092915050565b610bd581610b6e565b82525050565b5f602082019050610bee5f830184610bcc565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c1d82610bf4565b9050919050565b610c2d81610c13565b8114610c37575f5ffd5b50565b5f81359050610c4881610c24565b92915050565b5f5f60408385031215610c6457610c63610b6a565b5b5f610c7185828601610b8d565b9250506020610c8285828601610c3a565b9150509250929050565b5f819050919050565b610c9e81610c8c565b8114610ca8575f5ffd5b50565b5f81359050610cb981610c95565b92915050565b5f5f60408385031215610cd557610cd4610b6a565b5b5f610ce285828601610b8d565b9250506020610cf385828601610cab565b9150509250929050565b610d0681610c13565b82525050565b5f602082019050610d1f5f830184610cfd565b92915050565b5f8115159050919050565b610d3981610d25565b82525050565b5f602082019050610d525f830184610d30565b92915050565b610d6181610c8c565b82525050565b5f602082019050610d7a5f830184610d58565b92915050565b5f604082019050610d935f830185610cfd565b610da06020830184610bcc565b9392505050565b5f604082019050610dba5f830185610cfd565b610dc76020830184610cfd565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0582610c8c565b9150610e1083610c8c565b9250828201905080821115610e2857610e27610dce565b5b9291505056fea26469706673582212206a86cb833cb0af6b15f53d9e7e198b4e49ef4b022bdafbaf61e9325fb78546c564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xA32FA5B3 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1DB JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0xFD JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x2D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH2 0x552 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xD67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH2 0x703 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x72C JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2C8 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD49C166A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BF SWAP3 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D2 DUP3 DUP3 PUSH2 0x7CB JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x348 JUMPI CALLER DUP2 PUSH1 0x40 MLOAD PUSH32 0x4169C62200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33F SWAP3 SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x352 DUP3 DUP3 PUSH2 0x7E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E7 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x459 JUMPI DUP5 DUP3 SUB PUSH2 0x445 JUMPI PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x463 DUP7 PUSH0 PUSH2 0x4F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BD JUMPI POP PUSH1 0x2 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x1 DUP3 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP PUSH2 0x374 JUMP JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x614 JUMPI PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6DD JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6C9 JUMPI PUSH1 0x1 DUP4 PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP PUSH2 0x63C JUMP JUMPDEST POP PUSH2 0x6E8 DUP4 PUSH0 PUSH2 0x4F1 JUMP JUMPDEST ISZERO PUSH2 0x6FD JUMPI PUSH1 0x1 DUP3 PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71E PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLER PUSH2 0x72C JUMP JUMPDEST PUSH2 0x728 DUP3 DUP3 PUSH2 0x7E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7C7 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x878B10600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BE SWAP3 SWAP2 SWAP1 PUSH2 0xD80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7D5 DUP3 DUP3 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x7DF DUP3 DUP3 PUSH2 0x8BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7ED DUP3 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x7F7 DUP3 DUP3 PUSH2 0xA7B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x9C2 DUP3 DUP3 PUSH2 0x72C JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP2 EQ PUSH2 0xB8A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9B DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB6 JUMPI PUSH2 0xBB5 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC3 DUP5 DUP3 DUP6 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBD5 DUP2 PUSH2 0xB6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBEE PUSH0 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC1D DUP3 PUSH2 0xBF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC2D DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP2 EQ PUSH2 0xC37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC48 DUP2 PUSH2 0xC24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC71 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC82 DUP6 DUP3 DUP7 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9E DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP2 EQ PUSH2 0xCA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB9 DUP2 PUSH2 0xC95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH2 0xCD4 PUSH2 0xB6A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE2 DUP6 DUP3 DUP7 ADD PUSH2 0xB8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF3 DUP6 DUP3 DUP7 ADD PUSH2 0xCAB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD06 DUP2 PUSH2 0xC13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1F PUSH0 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD52 PUSH0 DUP4 ADD DUP5 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD61 DUP2 PUSH2 0xC8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD7A PUSH0 DUP4 ADD DUP5 PUSH2 0xD58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD93 PUSH0 DUP4 ADD DUP6 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xDA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDBA PUSH0 DUP4 ADD DUP6 PUSH2 0xCFD JUMP JUMPDEST PUSH2 0xDC7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE05 DUP3 PUSH2 0xC8C JUMP JUMPDEST SWAP2 POP PUSH2 0xE10 DUP4 PUSH2 0xC8C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE28 JUMPI PUSH2 0xE27 PUSH2 0xDCE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x86CB833CB0AF6B15F53D9E PUSH31 0x198B4E49EF4B022BDAFBAF61E9325FB78546C564736F6C634300081E003300 ",
							"sourceMap": "412:3828:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3107:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3622:279;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4841:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1643:633:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1691:131:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1109:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2573:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2683:398:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4272:171:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3107:120;3175:7;3201:13;:19;3215:4;3201:19;;;;;;;;;;;;3194:26;;3107:120;;;:::o;3622:279::-;3706:43;3717:13;:19;3731:4;3717:19;;;;;;;;;;;;3738:10;3706;:43::i;:::-;3763:8;:14;3772:4;3763:14;;;;;;;;;;;:23;3778:7;3763:23;;;;;;;;;;;;;;;;;;;;;;;;;3759:101;;;3835:7;3844:4;3809:40;;;;;;;;;;;;:::i;:::-;;;;;;;;3759:101;3869:25;3880:4;3886:7;3869:10;:25::i;:::-;3622:279;;:::o;4841:237::-;4946:7;4932:21;;:10;:21;;;4928:108;;5005:10;5017:7;4976:49;;;;;;;;;;;;:::i;:::-;;;;;;;;4928:108;5045:26;5057:4;5063:7;5045:11;:26::i;:::-;4841:237;;:::o;1643:633:1:-;1727:14;1753:20;1776:11;:17;1788:4;1776:17;;;;;;;;;;;:23;;;1753:46;;1809:13;1838:9;1850:1;1838:13;;1833:437;1857:12;1853:1;:16;1833:437;;;1937:1;1897:42;;:11;:17;1909:4;1897:17;;;;;;;;;;;:25;;:28;1923:1;1897:28;;;;;;;;;;;;;;;;;;;;;:42;;;1893:367;;1972:5;1963;:14;1959:133;;2010:11;:17;2022:4;2010:17;;;;;;;;;;;:25;;:28;2036:1;2010:28;;;;;;;;;;;;;;;;;;;;;2001:37;;2060:13;;;;;1959:133;2118:1;2109:10;;;;;:::i;:::-;;;1893:367;;;2144:25;2152:4;2166:1;2144:7;:25::i;:::-;:71;;;;;2178:11;:17;2190:4;2178:17;;;;;;;;;;;:25;;:37;2212:1;2178:37;;;;;;;;;;;;;;;;2173:1;:42;2144:71;2140:120;;;2244:1;2235:10;;;;;:::i;:::-;;;2140:120;1893:367;1876:1;1871:6;;;;;:::i;:::-;;;1833:437;;;;1743:533;;1643:633;;;;;:::o;1691:131:0:-;1769:4;1792:8;:14;1801:4;1792:14;;;;;;;;;;;:23;1807:7;1792:23;;;;;;;;;;;;;;;;;;;;;;;;;1785:30;;1691:131;;;;:::o;1109:49::-;1154:4;1109:49;;;:::o;2573:211::-;2652:4;2673:8;:14;2682:4;2673:14;;;;;;;;;;;:26;2696:1;2673:26;;;;;;;;;;;;;;;;;;;;;;;;;2668:88;;2722:8;:14;2731:4;2722:14;;;;;;;;;;;:23;2737:7;2722:23;;;;;;;;;;;;;;;;;;;;;;;;;2715:30;;;;2668:88;2773:4;2766:11;;2573:211;;;;;:::o;2683:398:1:-;2757:13;2782:20;2805:11;:17;2817:4;2805:17;;;;;;;;;;;:23;;;2782:46;;2844:9;2856:1;2844:13;;2839:161;2863:12;2859:1;:16;2839:161;;;2943:1;2903:42;;:11;:17;2915:4;2903:17;;;;;;;;;;;:25;;:28;2929:1;2903:28;;;;;;;;;;;;;;;;;;;;;:42;;;2899:91;;2974:1;2965:10;;;;;:::i;:::-;;;2899:91;2882:1;2877:6;;;;;:::i;:::-;;;2839:161;;;;3013:25;3021:4;3035:1;3013:7;:25::i;:::-;3009:66;;;3063:1;3054:10;;;;;:::i;:::-;;;3009:66;2772:309;2683:398;;;:::o;4272:171:0:-;4357:43;4368:13;:19;4382:4;4368:19;;;;;;;;;;;;4389:10;4357;:43::i;:::-;4410:26;4422:4;4428:7;4410:11;:26::i;:::-;4272:171;;:::o;5952:196::-;6040:8;:14;6049:4;6040:14;;;;;;;;;;;:23;6055:7;6040:23;;;;;;;;;;;;;;;;;;;;;;;;;6035:107;;6117:7;6126:4;6086:45;;;;;;;;;;;;:::i;:::-;;;;;;;;6035:107;5952:196;;:::o;3475:152:1:-;3554:31;3571:4;3577:7;3554:16;:31::i;:::-;3595:25;3606:4;3612:7;3595:10;:25::i;:::-;3475:152;;:::o;3205:157::-;3285:32;3303:4;3309:7;3285:17;:32::i;:::-;3327:28;3341:4;3347:7;3327:13;:28::i;:::-;3205:157;;:::o;5431:168:0:-;5535:4;5509:8;:14;5518:4;5509:14;;;;;;;;;;;:23;5524:7;5509:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5581:10;5554:38;;5572:7;5554:38;;5566:4;5554:38;;;;;;;;;;5431:168;;:::o;3690:253:1:-;3760:11;3774;:17;3786:4;3774:17;;;;;;;;;;;:23;;;3760:37;;3834:1;3807:11;:17;3819:4;3807:17;;;;;;;;;;;:23;;;:28;;;;;;;:::i;:::-;;;;;;;;3879:7;3846:11;:17;3858:4;3846:17;;;;;;;;;;;:25;;:30;3872:3;3846:30;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3933:3;3896:11;:17;3908:4;3896:17;;;;;;;;;;;:25;;:34;3922:7;3896:34;;;;;;;;;;;;;;;:40;;;;3750:193;3690:253;;:::o;5648:204:0:-;5727:25;5738:4;5744:7;5727:10;:25::i;:::-;5769:8;:14;5778:4;5769:14;;;;;;;;;;;:23;5784:7;5769:23;;;;;;;;;;;;;;;;5762:30;;;;;;;;;;;5834:10;5807:38;;5825:7;5807:38;;5819:4;5807:38;;;;;;;;;;5648:204;;:::o;4011:227:1:-;4084:11;4098;:17;4110:4;4098:17;;;;;;;;;;;:25;;:34;4124:7;4098:34;;;;;;;;;;;;;;;;4084:48;;4150:11;:17;4162:4;4150:17;;;;;;;;;;;:25;;:30;4176:3;4150:30;;;;;;;;;;;;4143:37;;;;;;;;;;;4197:11;:17;4209:4;4197:17;;;;;;;;;;;:25;;:34;4223:7;4197:34;;;;;;;;;;;;;;;4190:41;;;4074:164;4011:227;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:77::-;2401:7;2430:5;2419:16;;2364:77;;;:::o;2447:122::-;2520:24;2538:5;2520:24;:::i;:::-;2513:5;2510:35;2500:63;;2559:1;2556;2549:12;2500:63;2447:122;:::o;2575:139::-;2621:5;2659:6;2646:20;2637:29;;2675:33;2702:5;2675:33;:::i;:::-;2575:139;;;;:::o;2720:474::-;2788:6;2796;2845:2;2833:9;2824:7;2820:23;2816:32;2813:119;;;2851:79;;:::i;:::-;2813:119;2971:1;2996:53;3041:7;3032:6;3021:9;3017:22;2996:53;:::i;:::-;2986:63;;2942:117;3098:2;3124:53;3169:7;3160:6;3149:9;3145:22;3124:53;:::i;:::-;3114:63;;3069:118;2720:474;;;;;:::o;3200:118::-;3287:24;3305:5;3287:24;:::i;:::-;3282:3;3275:37;3200:118;;:::o;3324:222::-;3417:4;3455:2;3444:9;3440:18;3432:26;;3468:71;3536:1;3525:9;3521:17;3512:6;3468:71;:::i;:::-;3324:222;;;;:::o;3552:90::-;3586:7;3629:5;3622:13;3615:21;3604:32;;3552:90;;;:::o;3648:109::-;3729:21;3744:5;3729:21;:::i;:::-;3724:3;3717:34;3648:109;;:::o;3763:210::-;3850:4;3888:2;3877:9;3873:18;3865:26;;3901:65;3963:1;3952:9;3948:17;3939:6;3901:65;:::i;:::-;3763:210;;;;:::o;3979:118::-;4066:24;4084:5;4066:24;:::i;:::-;4061:3;4054:37;3979:118;;:::o;4103:222::-;4196:4;4234:2;4223:9;4219:18;4211:26;;4247:71;4315:1;4304:9;4300:17;4291:6;4247:71;:::i;:::-;4103:222;;;;:::o;4331:332::-;4452:4;4490:2;4479:9;4475:18;4467:26;;4503:71;4571:1;4560:9;4556:17;4547:6;4503:71;:::i;:::-;4584:72;4652:2;4641:9;4637:18;4628:6;4584:72;:::i;:::-;4331:332;;;;;:::o;4669:::-;4790:4;4828:2;4817:9;4813:18;4805:26;;4841:71;4909:1;4898:9;4894:17;4885:6;4841:71;:::i;:::-;4922:72;4990:2;4979:9;4975:18;4966:6;4922:72;:::i;:::-;4669:332;;;;;:::o;5007:180::-;5055:77;5052:1;5045:88;5152:4;5149:1;5142:15;5176:4;5173:1;5166:15;5193:191;5233:3;5252:20;5270:1;5252:20;:::i;:::-;5247:25;;5286:20;5304:1;5286:20;:::i;:::-;5281:25;;5329:1;5326;5322:9;5315:16;;5350:3;5347:1;5344:10;5341:36;;;5357:18;;:::i;:::-;5341:36;5193:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "736800",
								"executionCost": "771",
								"totalCost": "737571"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"getRoleAdmin(bytes32)": "infinite",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3115",
								"hasRoleWithSwitch(bytes32,address)": "5484",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite"
							},
							"internal": {
								"_addMember(bytes32,address)": "infinite",
								"_removeMember(bytes32,address)": "31878",
								"_revokeRole(bytes32,address)": "infinite",
								"_setupRole(bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 4240,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a86cb833cb0af6b15f53d9e7e198b4e49ef4b022bdafbaf61e9325fb78546c564736f6c634300081e0033",
									".code": [
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "91D14854"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "91D14854"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "A217FDDF"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "A32FA5B3"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "CA15C873"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "D547741F"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "248A9CA3"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "2F2FF15D"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "36568ABE"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "9010D07C"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 4240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1643,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1643,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1643,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2683,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2683,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2683,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3214,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3201,
											"end": 3220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3717,
											"end": 3730,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3717,
											"end": 3736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3748,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3706,
											"end": 3749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3706,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3763,
											"end": 3786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "D49C166A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3809,
											"end": 3849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3759,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3893,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3869,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3869,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3622,
											"end": 3901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4946,
											"end": 4953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4942,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4953,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5015,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5017,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "4169C62200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4976,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 5025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4928,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5063,
											"end": 5070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5045,
											"end": 5071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4841,
											"end": 5078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1869,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1908,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1897,
											"end": 1922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1897,
											"end": 1925,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1939,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1977,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1959,
											"end": 2092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2026,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2027,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2010,
											"end": 2038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2038,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2060,
											"end": 2073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 2092,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1959,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2109,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2144,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2169,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2144,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2178,
											"end": 2203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2215,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2215,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2140,
											"end": 2260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2235,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2140,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1893,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1871,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1833,
											"end": 2270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 2276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 2276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 2276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1785,
											"end": 1815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1154,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2668,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2822,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2828,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2944,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2914,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2919,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2928,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2903,
											"end": 2928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 2945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2899,
											"end": 2990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2975,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2965,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2899,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2877,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 3000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3021,
											"end": 3025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3013,
											"end": 3038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 3013,
											"end": 3038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3054,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3075,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3009,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2772,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 3081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4368,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4357,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4357,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4428,
											"end": 4435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4410,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4410,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6040,
											"end": 6063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6117,
											"end": 6124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6126,
											"end": 6130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "878B10600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6086,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6035,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3627,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3475,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3571,
											"end": 3575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3554,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3554,
											"end": 3585,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3554,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3595,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3595,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3362,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3205,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3303,
											"end": 3307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3285,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3327,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3355,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3327,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5535,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5509,
											"end": 5517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5509,
											"end": 5539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5591,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5592,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5431,
											"end": 5599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3943,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3690,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3790,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3791,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3835,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3807,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3807,
											"end": 3835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3846,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 3936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3921,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3896,
											"end": 3921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3930,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3896,
											"end": 3936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5727,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5727,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5762,
											"end": 5792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5834,
											"end": 5844,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5825,
											"end": 5832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5845,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5648,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4011,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4011,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4115,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4098,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4132,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4167,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4150,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4180,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4208,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4214,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4197,
											"end": 4222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4231,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4011,
											"end": 4238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1593,
											"end": 1598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1575,
											"end": 1599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1575,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1564,
											"end": 1599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2364,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2569,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2447,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2520,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2520,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2545,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2500,
											"end": 2563,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2563,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2500,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2447,
											"end": 2569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2666,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2637,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2702,
											"end": 2707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2675,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2708,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2675,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2843,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 2848,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2813,
											"end": 2932,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2851,
											"end": 2930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2851,
											"end": 2930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2813,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2971,
											"end": 2972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2996,
											"end": 3049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2996,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 3059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3169,
											"end": 3176,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3160,
											"end": 3166,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3145,
											"end": 3167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3124,
											"end": 3177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3177,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3124,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 3194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3318,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3200,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3287,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3311,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3287,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3275,
											"end": 3312,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3468,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3534,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3468,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3468,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3468,
											"end": 3539,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3468,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3642,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3552,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3636,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3757,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3648,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3729,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3724,
											"end": 3727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3717,
											"end": 3751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3648,
											"end": 3757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 3891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3961,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3948,
											"end": 3965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3901,
											"end": 3966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3966,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3901,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3763,
											"end": 3973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4097,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3979,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4066,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4066,
											"end": 4090,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4066,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4097,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4196,
											"end": 4200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4223,
											"end": 4232,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4219,
											"end": 4237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4247,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4318,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4247,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4479,
											"end": 4488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4467,
											"end": 4493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4467,
											"end": 4493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4571,
											"end": 4572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4569,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4556,
											"end": 4573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4503,
											"end": 4574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4641,
											"end": 4650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4584,
											"end": 4656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4656,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4584,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4331,
											"end": 4663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4790,
											"end": 4794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4909,
											"end": 4910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4885,
											"end": 4891,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4841,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4841,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4841,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4972,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4922,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 4922,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4669,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5187,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5007,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5055,
											"end": 5132,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5152,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5149,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5173,
											"end": 5174,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5181,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5270,
											"end": 5271,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5252,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 5252,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5247,
											"end": 5272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5286,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5344,
											"end": 5354,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5377,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5341,
											"end": 5377,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5357,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5357,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5377,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5341,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"contracts/extension/Permissions.sol",
								"contracts/extension/PermissionsEnumerable.sol",
								"contracts/extension/interface/IPermissions.sol",
								"contracts/extension/interface/IPermissionsEnumerable.sol",
								"contracts/lib/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"hasRoleWithSwitch(bytes32,address)": "a32fa5b3",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"PermissionsAlreadyGranted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"PermissionsInvalidPermission\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"PermissionsUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRoleWithSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contracts provides extending-contracts with role-based access control mechanisms.           Also provides interfaces to view all members with a given role, and total count of members.\",\"errors\":{\"PermissionsAlreadyGranted(address,bytes32)\":[{\"details\":\"The `account` already is a holder of `role`\"}],\"PermissionsInvalidPermission(address,address)\":[{\"details\":\"Invalid priviledge to revoke\"}],\"PermissionsUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"See {grantRole} and {revokeRole}.                  To change a role's admin, use {_setRoleAdmin}.\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns `member` who has `role`, at `index` of role-members list.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"index\":\"Index in list of current members for the role.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"member\":\" Address of account that has `role`\"}},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns `count` of accounts that have `role`.                  See struct {RoleMembers}, and mapping {roleMembers}\",\"params\":{\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"},\"returns\":{\"count\":\"  Total number of accounts that have `role`\"}},\"grantRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleGranted Event}.\",\"params\":{\"account\":\"Address of the account to which the role is being granted.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"hasRoleWithSwitch(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.                  Role restrictions can be swtiched on and off:                      - If address(0) has ROLE, then the ROLE restrictions                        don't apply.                      - If address(0) does not have ROLE, then the ROLE                        restrictions will apply.\",\"params\":{\"account\":\"Address of the account for which the role is being checked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Caller must have the `role`, with caller being the same as `account`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Caller must have admin role for the `role`.                  Emits {RoleRevoked Event}.\",\"params\":{\"account\":\"Address of the account from which the role is being revoked.\",\"role\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}}},\"stateVariables\":{\"roleMembers\":{\"details\":\"map from keccak256 hash of a role to its members' data. See {RoleMembers}.\"}},\"title\":\"PermissionsEnumerable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"notice\":\"Returns the admin role that controls the specified role.\"},\"getRoleMember(bytes32,uint256)\":{\"notice\":\"Returns the role-member from a list of members for a role,                  at a given index.\"},\"getRoleMemberCount(bytes32)\":{\"notice\":\"Returns total number of accounts that have a role.\"},\"grantRole(bytes32,address)\":{\"notice\":\"Grants a role to an account, if not previously granted.\"},\"hasRole(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role.\"},\"hasRoleWithSwitch(bytes32,address)\":{\"notice\":\"Checks whether an account has a particular role;                  role restrictions can be swtiched on and off.\"},\"renounceRole(bytes32,address)\":{\"notice\":\"Revokes role from the account.\"},\"revokeRole(bytes32,address)\":{\"notice\":\"Revokes role from an account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/PermissionsEnumerable.sol\":\"PermissionsEnumerable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/Permissions.sol\":{\"keccak256\":\"0x5e1e8f35a6844145ef36b15690cd2274becc24bb01f0a5891fb1e4e3247c9034\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92cc079c40f3a71e1d48bd139bc34312d35509756072a975375d35240f9ad77d\",\"dweb:/ipfs/Qmaaf8n6UQhC8akXpVuewADH9pP2YeUTqH6LhqF7LZNmNi\"]},\"contracts/extension/PermissionsEnumerable.sol\":{\"keccak256\":\"0x40577684803337ddc81b73e6a1f4787a9056fc298a96da92ef214c5265fd0a9c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5c61a1e781f8320709b051478c362de17f44e0dc56ba88b22278bb3ff16cd3ef\",\"dweb:/ipfs/Qma4TQRAD3P5VzSEGia3hkT7NwKrR6Cc51U7JR9pnmUi7T\"]},\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc669598bef25ae7317cb30adca927bc3407518531457345240039f90c2c15f07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92fef0a34c7281f127867d4953e2931ebe56beffbfdf1ce157805458f7419604\",\"dweb:/ipfs/QmNLyRwKeVgzMCGX1sTBYvDJztApiD6DBifT3QMBGWXpos\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0xf720674eee19447865b2a798482acbb045f6910770aabdc3e78a88ea7cfd8e59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b44e0a21b9fd8f462c8d97a5c15315b8089f255ff94f0617bd9b27b8d080d91a\",\"dweb:/ipfs/QmTsjKiPywKUm4s32p8KEVTQpsnrrtczwNSDSN2YiQUGhS\"]},\"contracts/lib/Strings.sol\":{\"keccak256\":\"0x03edbfd4e45d8309771d13b70e4eb4d50dbc9571bc99fbe82d3fa2d6aaa4fb12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://295d31e0d10dc57bb3fe1b07d54bfc247c00d90ed47cc1891ef527fbb51f8cbf\",\"dweb:/ipfs/QmcBrCAWovajpocHmLTB4FAZAb5MAGA5anHBNk39Vdew5i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 34,
								"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
								"label": "_hasRole",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 39,
								"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
								"label": "_getRoleAdmin",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_bytes32)"
							},
							{
								"astId": 353,
								"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
								"label": "roleMembers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(RoleMembers)347_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_bytes32,t_struct(RoleMembers)347_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleMembers)347_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(RoleMembers)347_storage": {
								"encoding": "inplace",
								"label": "struct PermissionsEnumerable.RoleMembers",
								"members": [
									{
										"astId": 338,
										"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
										"label": "index",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 342,
										"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
										"label": "members",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_uint256,t_address)"
									},
									{
										"astId": 346,
										"contract": "contracts/extension/PermissionsEnumerable.sol:PermissionsEnumerable",
										"label": "indexOf",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"notice": "Returns the admin role that controls the specified role."
							},
							"getRoleMember(bytes32,uint256)": {
								"notice": "Returns the role-member from a list of members for a role,                  at a given index."
							},
							"getRoleMemberCount(bytes32)": {
								"notice": "Returns total number of accounts that have a role."
							},
							"grantRole(bytes32,address)": {
								"notice": "Grants a role to an account, if not previously granted."
							},
							"hasRole(bytes32,address)": {
								"notice": "Checks whether an account has a particular role."
							},
							"hasRoleWithSwitch(bytes32,address)": {
								"notice": "Checks whether an account has a particular role;                  role restrictions can be swtiched on and off."
							},
							"renounceRole(bytes32,address)": {
								"notice": "Revokes role from the account."
							},
							"revokeRole(bytes32,address)": {
								"notice": "Revokes role from an account."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IPermissions.sol": {
				"IPermissions": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IPermissions.sol\":\"IPermissions\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc669598bef25ae7317cb30adca927bc3407518531457345240039f90c2c15f07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92fef0a34c7281f127867d4953e2931ebe56beffbfdf1ce157805458f7419604\",\"dweb:/ipfs/QmNLyRwKeVgzMCGX1sTBYvDJztApiD6DBifT3QMBGWXpos\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IPermissionsEnumerable.sol": {
				"IPermissionsEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following [forum post](https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296) for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following [forum post](https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296) for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IPermissionsEnumerable.sol\":\"IPermissionsEnumerable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IPermissions.sol\":{\"keccak256\":\"0xc669598bef25ae7317cb30adca927bc3407518531457345240039f90c2c15f07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92fef0a34c7281f127867d4953e2931ebe56beffbfdf1ce157805458f7419604\",\"dweb:/ipfs/QmNLyRwKeVgzMCGX1sTBYvDJztApiD6DBifT3QMBGWXpos\"]},\"contracts/extension/interface/IPermissionsEnumerable.sol\":{\"keccak256\":\"0xf720674eee19447865b2a798482acbb045f6910770aabdc3e78a88ea7cfd8e59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b44e0a21b9fd8f462c8d97a5c15315b8089f255ff94f0617bd9b27b8d080d91a\",\"dweb:/ipfs/QmTsjKiPywKUm4s32p8KEVTQpsnrrtczwNSDSN2YiQUGhS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lib/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/Strings.sol\":121:6978  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/Strings.sol\":121:6978  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122096e44ae17a261a7f0d5bd1965e052f64a923dacfd11f7d518027c89939259e1f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122096e44ae17a261a7f0d5bd1965e052f64a923dacfd11f7d518027c89939259e1f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 RETF BLOBBASEFEE RJUMPI 0x7A26 BYTE PUSH32 0xD5BD1965E052F64A923DACFD11F7D518027C89939259E1F64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "121:6857:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122096e44ae17a261a7f0d5bd1965e052f64a923dacfd11f7d518027c89939259e1f64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 RETF BLOBBASEFEE RJUMPI 0x7A26 BYTE PUSH32 0xD5BD1965E052F64A923DACFD11F7D518027C89939259E1F64736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "121:6857:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(bytes memory)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toHexStringChecksummed(address)": "infinite",
								"toHexStringNoPrefix(address)": "infinite",
								"toHexStringNoPrefix(bytes memory)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 121,
									"end": 6978,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122096e44ae17a261a7f0d5bd1965e052f64a923dacfd11f7d518027c89939259e1f64736f6c634300081e0033",
									".code": [
										{
											"begin": 121,
											"end": 6978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 6978,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/extension/Permissions.sol",
								"contracts/extension/PermissionsEnumerable.sol",
								"contracts/extension/interface/IPermissions.sol",
								"contracts/extension/interface/IPermissionsEnumerable.sol",
								"contracts/lib/Strings.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Strings.sol\":\"Strings\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/Strings.sol\":{\"keccak256\":\"0x03edbfd4e45d8309771d13b70e4eb4d50dbc9571bc99fbe82d3fa2d6aaa4fb12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://295d31e0d10dc57bb3fe1b07d54bfc247c00d90ed47cc1891ef527fbb51f8cbf\",\"dweb:/ipfs/QmcBrCAWovajpocHmLTB4FAZAb5MAGA5anHBNk39Vdew5i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/extension/Permissions.sol": {
				"ast": {
					"absolutePath": "contracts/extension/Permissions.sol",
					"exportedSymbols": {
						"IPermissions": [
							699
						],
						"Permissions": [
							326
						],
						"Strings": [
							995
						]
					},
					"id": 327,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "contracts/extension/interface/IPermissions.sol",
							"file": "./interface/IPermissions.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 327,
							"sourceUnit": 700,
							"src": "86:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Strings.sol",
							"file": "../lib/Strings.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 327,
							"sourceUnit": 996,
							"src": "125:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IPermissions",
										"nameLocations": [
											"311:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "311:12:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "311:12:0"
								}
							],
							"canonicalName": "Permissions",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "155:131:0",
								"text": "  @title   Permissions\n  @dev     This contracts provides extending-contracts with role-based access control mechanisms"
							},
							"fullyImplemented": true,
							"id": 326,
							"linearizedBaseContracts": [
								326,
								699
							],
							"name": "Permissions",
							"nameLocation": "296:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "330:41:0",
										"text": "@dev The `account` is missing a role."
									},
									"errorSelector": "0878b106",
									"id": 13,
									"name": "PermissionsUnauthorizedAccount",
									"nameLocation": "382:30:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "438:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "430:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 10,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:37:0"
									},
									"src": "376:74:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "456:52:0",
										"text": "@dev The `account` already is a holder of `role`"
									},
									"errorSelector": "d49c166a",
									"id": 20,
									"name": "PermissionsAlreadyGranted",
									"nameLocation": "519:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "553:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "545:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "570:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "562:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 17,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:31:0"
									},
									"src": "513:63:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "582:37:0",
										"text": "@dev Invalid priviledge to revoke"
									},
									"errorSelector": "4169c622",
									"id": 27,
									"name": "PermissionsInvalidPermission",
									"nameLocation": "630:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "expected",
												"nameLocation": "667:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "659:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "actual",
												"nameLocation": "685:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "677:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:34:0"
									},
									"src": "624:69:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "699:93:0",
										"text": "@dev Map from keccak256 hash of a role => a map from address => whether address has role."
									},
									"id": 34,
									"mutability": "mutable",
									"name": "_hasRole",
									"nameLocation": "850:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 326,
									"src": "797:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(bytes32 => mapping(address => bool))"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 29,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "797:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(bytes32 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 30,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "824:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "816:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 31,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "835:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "865:77:0",
										"text": "@dev Map from keccak256 hash of a role to role admin. See {getRoleAdmin}."
									},
									"id": 39,
									"mutability": "mutable",
									"name": "_getRoleAdmin",
									"nameLocation": "983:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 326,
									"src": "947:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
										"typeString": "mapping(bytes32 => bytes32)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "955:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "947:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
											"typeString": "mapping(bytes32 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1003:101:0",
										"text": "@dev Default admin role for all roles. Only accounts with this role can grant/revoke other roles."
									},
									"functionSelector": "a217fddf",
									"id": 43,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "1133:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 326,
									"src": "1109:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 41,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1109:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 42,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1154:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1288:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "1309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1315:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1319:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1315:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 48,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "1298:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1298:28:0"
											},
											{
												"id": 54,
												"nodeType": "PlaceholderStatement",
												"src": "1336:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1165:86:0",
										"text": "@dev Modifier that checks if an account has the specified role; reverts otherwise."
									},
									"id": 56,
									"name": "onlyRole",
									"nameLocation": "1265:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1282:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 45,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:14:0"
									},
									"src": "1256:88:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1775:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 67,
															"name": "_hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1792:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(bytes32 => mapping(address => bool))"
															}
														},
														"id": 69,
														"indexExpression": {
															"id": 68,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1792:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 71,
													"indexExpression": {
														"id": 70,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1792:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 66,
												"id": 72,
												"nodeType": "Return",
												"src": "1785:30:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1350:336:0",
										"text": "  @notice         Checks whether an account has a particular role.\n  @dev            Returns `true` if `account` has been granted `role`.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param account  Address of the account for which the role is being checked."
									},
									"functionSelector": "91d14854",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1700:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 63,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1751:8:0"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1716:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1708:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 58,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1730:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:31:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1769:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1769:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1768:6:0"
									},
									"scope": 326,
									"src": "1691:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2658:126:0",
										"statements": [
											{
												"condition": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2672:27:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 84,
																"name": "_hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "2673:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 86,
															"indexExpression": {
																"id": 85,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2682:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2673:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 91,
														"indexExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 89,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2696:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 87,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2688:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2688:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2673:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "2668:88:0",
												"trueBody": {
													"id": 99,
													"nodeType": "Block",
													"src": "2701:55:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 93,
																		"name": "_hasRole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "2722:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(bytes32 => mapping(address => bool))"
																		}
																	},
																	"id": 95,
																	"indexExpression": {
																		"id": 94,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "2731:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2722:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 97,
																"indexExpression": {
																	"id": 96,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2737:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2722:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 83,
															"id": 98,
															"nodeType": "Return",
															"src": "2715:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 83,
												"id": 102,
												"nodeType": "Return",
												"src": "2766:11:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1828:740:0",
										"text": "  @notice         Checks whether an account has a particular role;\n                  role restrictions can be swtiched on and off.\n  @dev            Returns `true` if `account` has been granted `role`.\n                  Role restrictions can be swtiched on and off:\n                      - If address(0) has ROLE, then the ROLE restrictions\n                        don't apply.\n                      - If address(0) does not have ROLE, then the ROLE\n                        restrictions will apply.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param account  Address of the account for which the role is being checked."
									},
									"functionSelector": "a32fa5b3",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRoleWithSwitch",
									"nameLocation": "2582:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2608:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2600:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 76,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2622:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2614:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:31:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2652:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:6:0"
									},
									"scope": 326,
									"src": "2573:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										674
									],
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "3184:43:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 113,
														"name": "_getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "3201:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 115,
													"indexExpression": {
														"id": 114,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "3215:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3201:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 112,
												"id": 116,
												"nodeType": "Return",
												"src": "3194:26:0"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2790:312:0",
										"text": "  @notice         Returns the admin role that controls the specified role.\n  @dev            See {grantRole} and {revokeRole}.\n                  To change a role's admin, use {_setRoleAdmin}.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
									},
									"functionSelector": "248a9ca3",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3116:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3157:8:0"
									},
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3129:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:14:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "3175:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:9:0"
									},
									"scope": 326,
									"src": "3107:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3696:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 128,
																"name": "_getRoleAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "3717:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 130,
															"indexExpression": {
																"id": 129,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "3731:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3717:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 131,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3738:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3742:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3738:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 127,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "3706:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3706:43:0"
											},
											{
												"condition": {
													"baseExpression": {
														"baseExpression": {
															"id": 135,
															"name": "_hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "3763:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(bytes32 => mapping(address => bool))"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 136,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "3772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3763:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 139,
													"indexExpression": {
														"id": 138,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "3778:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3763:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "IfStatement",
												"src": "3759:101:0",
												"trueBody": {
													"id": 145,
													"nodeType": "Block",
													"src": "3788:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 141,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "3835:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 142,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "3844:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 140,
																	"name": "PermissionsAlreadyGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "3809:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3809:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 144,
															"nodeType": "RevertStatement",
															"src": "3802:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 148,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "3880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 149,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "3886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 147,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3869:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3869:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3869:25:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "3233:384:0",
										"text": "  @notice         Grants a role to an account, if not previously granted.\n  @dev            Caller must have admin role for the `role`.\n                  Emits {RoleGranted Event}.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param account  Address of the account to which the role is being granted."
									},
									"functionSelector": "2f2ff15d",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "3631:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3687:8:0"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3649:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3641:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3663:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3655:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:31:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3696:0:0"
									},
									"scope": 326,
									"src": "3622:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										690
									],
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "4347:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 163,
																"name": "_getRoleAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "4368:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 165,
															"indexExpression": {
																"id": 164,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "4382:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4368:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 166,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4389:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4393:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4389:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 162,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4357:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "4357:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4422:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 172,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 170,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "4410:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4410:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "4410:26:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3907:360:0",
										"text": "  @notice         Revokes role from an account.\n  @dev            Caller must have admin role for the `role`.\n                  Emits {RoleRevoked Event}.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param account  Address of the account from which the role is being revoked."
									},
									"functionSelector": "d547741f",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "4281:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4338:8:0"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4300:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4314:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:31:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4347:0:0"
									},
									"scope": 326,
									"src": "4272:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										698
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "4918:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 185,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4932:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4936:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4932:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 187,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "4946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4932:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "IfStatement",
												"src": "4928:108:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "4955:81:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 190,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5005:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5009:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5005:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 192,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "5017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 189,
																	"name": "PermissionsInvalidPermission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "4976:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4976:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 194,
															"nodeType": "RevertStatement",
															"src": "4969:56:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "5057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 199,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5063:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "5045:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "5045:26:0"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4449:387:0",
										"text": "  @notice         Revokes role from the account.\n  @dev            Caller must have the `role`, with caller being the same as `account`.\n                  Emits {RoleRevoked Event}.\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param account  Address of the account from which the role is being revoked."
									},
									"functionSelector": "36568abe",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "4850:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 183,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4909:8:0"
									},
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4871:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4863:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 178,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4885:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:31:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4918:0:0"
									},
									"scope": 326,
									"src": "4841:237:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "5211:172:0",
										"statements": [
											{
												"assignments": [
													212
												],
												"declarations": [
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5229:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "5221:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 211,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"baseExpression": {
														"id": 213,
														"name": "_getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "5249:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 215,
													"indexExpression": {
														"id": 214,
														"name": "role",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "5263:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5249:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5221:47:0"
											},
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 217,
															"name": "_getRoleAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "5278:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 219,
														"indexExpression": {
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "5292:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5278:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 220,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5300:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5278:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "5278:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 224,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "5341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 225,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "5347:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 226,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "5366:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 223,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "5324:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5324:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "EmitStatement",
												"src": "5319:57:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "5084:49:0",
										"text": "@dev Sets `adminRole` as `role`'s admin role."
									},
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5147:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5169:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "5161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5183:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "5175:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:33:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5211:0:0"
									},
									"scope": 326,
									"src": "5138:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "5499:100:0",
										"statements": [
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 238,
																"name": "_hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "5509:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 241,
															"indexExpression": {
																"id": 239,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5518:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5509:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 242,
														"indexExpression": {
															"id": 240,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "5524:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5509:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5535:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5509:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "5509:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "5566:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 248,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "5572:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5581:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5585:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 246,
														"name": "RoleGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "5554:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address,address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5554:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "5549:43:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "5389:37:0",
										"text": "@dev Sets up `role` for `account`"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "5440:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5451:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5473:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5465:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5450:31:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5499:0:0"
									},
									"scope": 326,
									"src": "5431:168:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "5717:135:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5738:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "5744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 262,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "5727:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "5727:25:0"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5762:30:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 267,
																"name": "_hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "5769:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 269,
															"indexExpression": {
																"id": 268,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "5778:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5769:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 271,
														"indexExpression": {
															"id": 270,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "5784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5769:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "5762:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 275,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "5819:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 276,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "5825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5834:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5838:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5834:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 274,
														"name": "RoleRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "5807:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address,address)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "EmitStatement",
												"src": "5802:43:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5605:38:0",
										"text": "@dev Revokes `role` from `account`"
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "5657:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5677:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5669:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "5683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:31:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5717:0:0"
									},
									"scope": 326,
									"src": "5648:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "6025:123:0",
										"statements": [
											{
												"condition": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6039:24:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 290,
																"name": "_hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "6040:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => bool))"
																}
															},
															"id": 292,
															"indexExpression": {
																"id": 291,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "6049:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6040:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 294,
														"indexExpression": {
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "6055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6040:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "6035:107:0",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "6065:77:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 297,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "6117:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 298,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "6126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 296,
																	"name": "PermissionsUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "6086:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6086:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 300,
															"nodeType": "RevertStatement",
															"src": "6079:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "5858:89:0",
										"text": "@dev Checks `role` for `account`. Reverts with a message including the required role."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "5961:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5972:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5994:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5986:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5971:31:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6025:0:0"
									},
									"scope": 326,
									"src": "5952:196:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "6331:132:0",
										"statements": [
											{
												"condition": {
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6345:33:0",
													"subExpression": {
														"arguments": [
															{
																"id": 313,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "6364:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 314,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 312,
															"name": "hasRoleWithSwitch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "6346:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6346:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "IfStatement",
												"src": "6341:116:0",
												"trueBody": {
													"id": 322,
													"nodeType": "Block",
													"src": "6380:77:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 318,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "6432:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 319,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6441:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 317,
																	"name": "PermissionsUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "6401:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6401:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 321,
															"nodeType": "RevertStatement",
															"src": "6394:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "6154:89:0",
										"text": "@dev Checks `role` for `account`. Reverts with a message including the required role."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRoleWithSwitch",
									"nameLocation": "6257:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "6278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 306,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6300:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "6292:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6277:31:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6331:0:0"
									},
									"scope": 326,
									"src": "6248:215:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 327,
							"src": "287:6178:0",
							"usedErrors": [
								13,
								20,
								27
							],
							"usedEvents": [
								638,
								647,
								656
							]
						}
					],
					"src": "39:6426:0"
				},
				"id": 0
			},
			"contracts/extension/PermissionsEnumerable.sol": {
				"ast": {
					"absolutePath": "contracts/extension/PermissionsEnumerable.sol",
					"exportedSymbols": {
						"IPermissions": [
							699
						],
						"IPermissionsEnumerable": [
							724
						],
						"Permissions": [
							326
						],
						"PermissionsEnumerable": [
							626
						],
						"Strings": [
							995
						]
					},
					"id": 627,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "contracts/extension/interface/IPermissionsEnumerable.sol",
							"file": "./interface/IPermissionsEnumerable.sol",
							"id": 329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 725,
							"src": "86:48:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/extension/Permissions.sol",
							"file": "./Permissions.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 327,
							"src": "135:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 332,
										"name": "IPermissionsEnumerable",
										"nameLocations": [
											"446:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "446:22:1"
									},
									"id": 333,
									"nodeType": "InheritanceSpecifier",
									"src": "446:22:1"
								},
								{
									"baseName": {
										"id": 334,
										"name": "Permissions",
										"nameLocations": [
											"470:11:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 326,
										"src": "470:11:1"
									},
									"id": 335,
									"nodeType": "InheritanceSpecifier",
									"src": "470:11:1"
								}
							],
							"canonicalName": "PermissionsEnumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 331,
								"nodeType": "StructuredDocumentation",
								"src": "164:247:1",
								"text": "  @title   PermissionsEnumerable\n  @dev     This contracts provides extending-contracts with role-based access control mechanisms.\n           Also provides interfaces to view all members with a given role, and total count of members."
							},
							"fullyImplemented": true,
							"id": 626,
							"linearizedBaseContracts": [
								626,
								326,
								724,
								699
							],
							"name": "PermissionsEnumerable",
							"nameLocation": "421:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PermissionsEnumerable.RoleMembers",
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "488:324:1",
										"text": "  @notice A data structure to store data of members for a given role.\n  @param index    Current index in the list of accounts that have a role.\n  @param members  map from index => address of account that has a role\n  @param indexOf  map from address => index which the account has."
									},
									"id": 347,
									"members": [
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "index",
											"nameLocation": "854:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 347,
											"src": "846:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "846:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 342,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "897:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 347,
											"src": "869:35:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 341,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "869:27:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "indexOf",
											"nameLocation": "942:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 347,
											"src": "914:35:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 345,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "914:27:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleMembers",
									"nameLocation": "824:11:1",
									"nodeType": "StructDefinition",
									"scope": 626,
									"src": "817:139:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "962:83:1",
										"text": "@dev map from keccak256 hash of a role to its members' data. See {RoleMembers}."
									},
									"id": 353,
									"mutability": "mutable",
									"name": "roleMembers",
									"nameLocation": "1090:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 626,
									"src": "1050:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
										"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)"
									},
									"typeName": {
										"id": 352,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 349,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
											"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 351,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 350,
												"name": "RoleMembers",
												"nameLocations": [
													"1069:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 347,
												"src": "1069:11:1"
											},
											"referencedDeclaration": 347,
											"src": "1069:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleMembers_$347_storage_ptr",
												"typeString": "struct PermissionsEnumerable.RoleMembers"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										715
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1743:533:1",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "1761:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "1753:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1753:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 370,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 366,
															"name": "roleMembers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1776:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
															}
														},
														"id": 368,
														"indexExpression": {
															"id": 367,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "1788:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1776:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
															"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1794:5:1",
													"memberName": "index",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 338,
													"src": "1776:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1753:46:1"
											},
											{
												"assignments": [
													372
												],
												"declarations": [
													{
														"constant": false,
														"id": 372,
														"mutability": "mutable",
														"name": "check",
														"nameLocation": "1817:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "1809:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1809:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 373,
												"nodeType": "VariableDeclarationStatement",
												"src": "1809:13:1"
											},
											{
												"body": {
													"id": 443,
													"nodeType": "Block",
													"src": "1879:391:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 385,
																				"name": "roleMembers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "1897:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																					"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																				}
																			},
																			"id": 387,
																			"indexExpression": {
																				"id": 386,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "1909:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1897:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																				"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																			}
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1915:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "1897:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 390,
																	"indexExpression": {
																		"id": 389,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "1923:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1897:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1937:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1929:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 391,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1929:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1929:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1897:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 418,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "2152:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 421,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2166:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 420,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2158:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 419,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2158:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 422,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2158:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 417,
																			"name": "hasRole",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 74,
																			"src": "2144:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (bytes32,address) view returns (bool)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2144:25:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 424,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 375,
																			"src": "2173:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 425,
																						"name": "roleMembers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 353,
																						"src": "2178:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																							"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																						}
																					},
																					"id": 427,
																					"indexExpression": {
																						"id": 426,
																						"name": "role",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 356,
																						"src": "2190:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2178:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																						"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																					}
																				},
																				"id": 428,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2196:7:1",
																				"memberName": "indexOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 346,
																				"src": "2178:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 433,
																			"indexExpression": {
																				"arguments": [
																					{
																						"hexValue": "30",
																						"id": 431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2212:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 430,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2204:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 429,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2204:7:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2204:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2178:37:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2173:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2144:71:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 441,
																"nodeType": "IfStatement",
																"src": "2140:120:1",
																"trueBody": {
																	"id": 440,
																	"nodeType": "Block",
																	"src": "2217:43:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 436,
																					"name": "check",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "2235:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "+=",
																				"rightHandSide": {
																					"hexValue": "31",
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2244:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "2235:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 439,
																			"nodeType": "ExpressionStatement",
																			"src": "2235:10:1"
																		}
																	]
																}
															},
															"id": 442,
															"nodeType": "IfStatement",
															"src": "1893:367:1",
															"trueBody": {
																"id": 416,
																"nodeType": "Block",
																"src": "1941:193:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 396,
																				"name": "check",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "1963:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 397,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 358,
																				"src": "1972:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1963:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 411,
																		"nodeType": "IfStatement",
																		"src": "1959:133:1",
																		"trueBody": {
																			"id": 410,
																			"nodeType": "Block",
																			"src": "1979:113:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 399,
																							"name": "member",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 362,
																							"src": "2001:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 400,
																										"name": "roleMembers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 353,
																										"src": "2010:11:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																											"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																										}
																									},
																									"id": 402,
																									"indexExpression": {
																										"id": 401,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 356,
																										"src": "2022:4:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "2010:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																										"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																									}
																								},
																								"id": 403,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "2028:7:1",
																								"memberName": "members",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 342,
																								"src": "2010:25:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																									"typeString": "mapping(uint256 => address)"
																								}
																							},
																							"id": 405,
																							"indexExpression": {
																								"id": 404,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 375,
																								"src": "2036:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2010:28:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "2001:37:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 407,
																					"nodeType": "ExpressionStatement",
																					"src": "2001:37:1"
																				},
																				{
																					"expression": {
																						"id": 408,
																						"name": "member",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 362,
																						"src": "2067:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"functionReturnParameters": 363,
																					"id": 409,
																					"nodeType": "Return",
																					"src": "2060:13:1"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 412,
																				"name": "check",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "2109:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 413,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2118:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 415,
																		"nodeType": "ExpressionStatement",
																		"src": "2109:10:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 378,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1853:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 379,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "1857:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1853:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"initializationExpression": {
													"assignments": [
														375
													],
													"declarations": [
														{
															"constant": false,
															"id": 375,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1846:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 444,
															"src": "1838:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 374,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1838:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 377,
													"initialValue": {
														"hexValue": "30",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1850:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1838:13:1"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 381,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "1871:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1876:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1871:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 384,
													"nodeType": "ExpressionStatement",
													"src": "1871:6:1"
												},
												"nodeType": "ForStatement",
												"src": "1833:437:1"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1108:530:1",
										"text": "  @notice         Returns the role-member from a list of members for a role,\n                  at a given index.\n  @dev            Returns `member` who has `role`, at `index` of role-members list.\n                  See struct {RoleMembers}, and mapping {roleMembers}\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @param index    Index in list of current members for the role.\n  @return member  Address of account that has `role`"
									},
									"functionSelector": "9010d07c",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "1652:13:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:1"
									},
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1674:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1666:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:29:1"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:16:1"
									},
									"scope": 626,
									"src": "1643:633:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										723
									],
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2772:309:1",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "2790:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "2782:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2782:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 457,
															"name": "roleMembers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2805:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
															}
														},
														"id": 459,
														"indexExpression": {
															"id": 458,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "2817:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2805:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
															"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:5:1",
													"memberName": "index",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 338,
													"src": "2805:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2782:46:1"
											},
											{
												"body": {
													"id": 490,
													"nodeType": "Block",
													"src": "2885:115:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 473,
																				"name": "roleMembers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "2903:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																					"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																				}
																			},
																			"id": 475,
																			"indexExpression": {
																				"id": 474,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "2915:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2903:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																				"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2921:7:1",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 342,
																		"src": "2903:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"id": 477,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "2929:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2903:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2943:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2935:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 479,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2935:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2935:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2903:42:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 489,
															"nodeType": "IfStatement",
															"src": "2899:91:1",
															"trueBody": {
																"id": 488,
																"nodeType": "Block",
																"src": "2947:43:1",
																"statements": [
																	{
																		"expression": {
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 484,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "2965:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2974:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2965:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 487,
																		"nodeType": "ExpressionStatement",
																		"src": "2965:10:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2859:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 467,
														"name": "currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2863:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2859:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 491,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2852:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 491,
															"src": "2844:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2844:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2856:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2844:13:1"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 469,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2877:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2882:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2877:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "2877:6:1"
												},
												"nodeType": "ForStatement",
												"src": "2839:161:1"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 493,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3021:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3035:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3027:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 494,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3027:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3027:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 492,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "3013:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3009:66:1",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "3040:35:1",
													"statements": [
														{
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 499,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "3054:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3063:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3054:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "3054:10:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2282:396:1",
										"text": "  @notice         Returns total number of accounts that have a role.\n  @dev            Returns `count` of accounts that have `role`.\n                  See struct {RoleMembers}, and mapping {roleMembers}\n  @param role     keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")\n  @return count   Total number of accounts that have `role`"
									},
									"functionSelector": "ca15c873",
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "2692:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2739:8:1"
									},
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:14:1"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "count",
												"nameLocation": "2765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2756:15:1"
									},
									"scope": 626,
									"src": "2683:398:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										282
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3275:87:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3303:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 519,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3309:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 515,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3285:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PermissionsEnumerable_$626_$",
																"typeString": "type(contract super PermissionsEnumerable)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3291:11:1",
														"memberName": "_revokeRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "3285:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3285:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3285:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 524,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 522,
														"name": "_removeMember",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "3327:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3327:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3327:28:1"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "3087:113:1",
										"text": "@dev Revokes `role` from `account`, and removes `account` from {roleMembers}\n      See {_removeMember}"
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "3214:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3266:8:1"
									},
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3234:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3226:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 508,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3248:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "3240:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:31:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:0:1"
									},
									"scope": 626,
									"src": "3205:157:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										254
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3544:83:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3571:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 541,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 537,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3554:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_PermissionsEnumerable_$626_$",
																"typeString": "type(contract super PermissionsEnumerable)"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3560:10:1",
														"memberName": "_setupRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 254,
														"src": "3554:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "3554:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3606:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 546,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3612:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_addMember",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "3595:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3595:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3595:25:1"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3368:102:1",
										"text": "@dev Grants `role` to `account`, and adds `account` to {roleMembers}\n      See {_addMember}"
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "3484:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3535:8:1"
									},
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:31:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3544:0:1"
									},
									"scope": 626,
									"src": "3475:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "3750:193:1",
										"statements": [
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "idx",
														"nameLocation": "3768:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "3760:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3760:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 564,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 560,
															"name": "roleMembers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "3774:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3786:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3774:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
															"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3792:5:1",
													"memberName": "index",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 338,
													"src": "3774:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3760:37:1"
											},
											{
												"expression": {
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 565,
																"name": "roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "3807:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																	"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																}
															},
															"id": 567,
															"indexExpression": {
																"id": 566,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "3819:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3807:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3825:5:1",
														"memberName": "index",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 338,
														"src": "3807:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3834:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3807:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "3807:28:1"
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 572,
																	"name": "roleMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3846:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																		"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																	}
																},
																"id": 574,
																"indexExpression": {
																	"id": 573,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "3858:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3846:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																	"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3864:7:1",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "3846:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 577,
														"indexExpression": {
															"id": 576,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3872:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3846:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 578,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3879:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3846:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "3846:40:1"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 581,
																	"name": "roleMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "3896:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																		"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																	}
																},
																"id": 583,
																"indexExpression": {
																	"id": 582,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "3908:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3896:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																	"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3914:7:1",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 346,
															"src": "3896:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 586,
														"indexExpression": {
															"id": 585,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3896:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 587,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "3933:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3896:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "3896:40:1"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3633:52:1",
										"text": "@dev adds `account` to {roleMembers}, for `role`"
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addMember",
									"nameLocation": "3699:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3718:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3710:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 552,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3732:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "3724:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:31:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3750:0:1"
									},
									"scope": 626,
									"src": "3690:253:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "4074:164:1",
										"statements": [
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "idx",
														"nameLocation": "4092:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 624,
														"src": "4084:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4084:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 601,
																"name": "roleMembers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "4098:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																	"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																}
															},
															"id": 603,
															"indexExpression": {
																"id": 602,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "4110:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4098:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4116:7:1",
														"memberName": "indexOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 346,
														"src": "4098:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 606,
													"indexExpression": {
														"id": 605,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "4124:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4098:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4084:48:1"
											},
											{
												"expression": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4143:37:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 608,
																	"name": "roleMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "4150:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																		"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"id": 609,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "4162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4150:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																	"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4168:7:1",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 342,
															"src": "4150:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 612,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4176:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4150:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "4143:37:1"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4190:41:1",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 616,
																	"name": "roleMembers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "4197:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleMembers_$347_storage_$",
																		"typeString": "mapping(bytes32 => struct PermissionsEnumerable.RoleMembers storage ref)"
																	}
																},
																"id": 618,
																"indexExpression": {
																	"id": 617,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "4209:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4197:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleMembers_$347_storage",
																	"typeString": "struct PermissionsEnumerable.RoleMembers storage ref"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4215:7:1",
															"memberName": "indexOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 346,
															"src": "4197:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 621,
														"indexExpression": {
															"id": 620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "4223:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4197:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4190:41:1"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "3949:57:1",
										"text": "@dev removes `account` from {roleMembers}, for `role`"
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeMember",
									"nameLocation": "4020:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4042:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4034:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4034:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4056:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "4048:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4033:31:1"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4074:0:1"
									},
									"scope": 626,
									"src": "4011:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 627,
							"src": "412:3828:1",
							"usedErrors": [
								13,
								20,
								27
							],
							"usedEvents": [
								638,
								647,
								656
							]
						}
					],
					"src": "39:4201:1"
				},
				"id": 1
			},
			"contracts/extension/interface/IPermissions.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IPermissions.sol",
					"exportedSymbols": {
						"IPermissions": [
							699
						]
					},
					"id": 700,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPermissions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 629,
								"nodeType": "StructuredDocumentation",
								"src": "86:89:2",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "IPermissions",
							"nameLocation": "186:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "205:292:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 638,
									"name": "RoleAdminChanged",
									"nameLocation": "508:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "541:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "525:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "563:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "547:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 633,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "598:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "582:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:87:2"
									},
									"src": "502:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "618:212:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 647,
									"name": "RoleGranted",
									"nameLocation": "841:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "869:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "853:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 640,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "891:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "875:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "916:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "900:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:71:2"
									},
									"src": "835:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "930:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 656,
									"name": "RoleRevoked",
									"nameLocation": "1216:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1228:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1266:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1250:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1291:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1275:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1275:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:71:2"
									},
									"src": "1210:89:2"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1305:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1395:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1411:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1403:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1425:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1417:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:6:2"
									},
									"scope": 699,
									"src": "1386:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1469:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1667:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1688:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1680:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:14:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1717:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:9:2"
									},
									"scope": 699,
									"src": "1658:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "1732:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "1985:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2003:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1995:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 676,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2017:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2009:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:31:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:2"
									},
									"scope": 699,
									"src": "1976:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2041:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2278:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 684,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2311:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2303:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:31:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2328:0:2"
									},
									"scope": 699,
									"src": "2269:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "2335:480:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2829:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2842:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2864:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2856:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:31:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2881:0:2"
									},
									"scope": 699,
									"src": "2820:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 700,
							"src": "176:2708:2",
							"usedErrors": [],
							"usedEvents": [
								638,
								647,
								656
							]
						}
					],
					"src": "39:2845:2"
				},
				"id": 2
			},
			"contracts/extension/interface/IPermissionsEnumerable.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IPermissionsEnumerable.sol",
					"exportedSymbols": {
						"IPermissions": [
							699
						],
						"IPermissionsEnumerable": [
							724
						]
					},
					"id": 725,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:3"
						},
						{
							"absolutePath": "contracts/extension/interface/IPermissions.sol",
							"file": "./IPermissions.sol",
							"id": 702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 725,
							"sourceUnit": 700,
							"src": "86:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 704,
										"name": "IPermissions",
										"nameLocations": [
											"252:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "252:12:3"
									},
									"id": 705,
									"nodeType": "InheritanceSpecifier",
									"src": "252:12:3"
								}
							],
							"canonicalName": "IPermissionsEnumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 703,
								"nodeType": "StructuredDocumentation",
								"src": "116:99:3",
								"text": " @dev External interface of AccessControlEnumerable declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 724,
							"linearizedBaseContracts": [
								724,
								699
							],
							"name": "IPermissionsEnumerable",
							"nameLocation": "226:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "271:576:3",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n [forum post](https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296)\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nameLocation": "861:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "883:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "875:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 707,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "897:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "889:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:29:3"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "927:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:9:3"
									},
									"scope": 724,
									"src": "852:84:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "942:157:3",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nameLocation": "1113:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1140:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1132:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:14:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1169:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:9:3"
									},
									"scope": 724,
									"src": "1104:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 725,
							"src": "216:964:3",
							"usedErrors": [],
							"usedEvents": [
								638,
								647,
								656
							]
						}
					],
					"src": "39:1141:3"
				},
				"id": 3
			},
			"contracts/lib/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/lib/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							995
						]
					},
					"id": 996,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "86:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 995,
							"linearizedBaseContracts": [
								995
							],
							"name": "Strings",
							"nameLocation": "129:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 730,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "168:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 995,
									"src": "143:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 728,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 729,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "183:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "374:632:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "576:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "585:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "576:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "572:51:4",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "588:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "609:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 737,
															"id": 742,
															"nodeType": "Return",
															"src": "602:10:4"
														}
													]
												}
											},
											{
												"assignments": [
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "640:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "632:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 745,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "632:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"id": 747,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "647:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "632:20:4"
											},
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "670:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "662:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "662:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 751,
												"nodeType": "VariableDeclarationStatement",
												"src": "662:14:4"
											},
											{
												"body": {
													"id": 762,
													"nodeType": "Block",
													"src": "704:57:4",
													"statements": [
														{
															"expression": {
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "718:8:4",
																"subExpression": {
																	"id": 755,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "718:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 757,
															"nodeType": "ExpressionStatement",
															"src": "718:8:4"
														},
														{
															"expression": {
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 758,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "740:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "740:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "740:10:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "693:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "701:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "693:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "WhileStatement",
												"src": "686:75:4"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "783:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "770:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "770:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"arguments": [
														{
															"id": 768,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "802:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "792:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 766,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "796:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "792:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "770:39:4"
											},
											{
												"body": {
													"id": 801,
													"nodeType": "Block",
													"src": "838:131:4",
													"statements": [
														{
															"expression": {
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 774,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "852:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "862:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "852:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 777,
															"nodeType": "ExpressionStatement",
															"src": "852:11:4"
														},
														{
															"expression": {
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 778,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "877:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 780,
																	"indexExpression": {
																		"id": 779,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "884:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "877:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "907:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 790,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 788,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 733,
																									"src": "920:5:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 789,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "928:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "920:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 787,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "912:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 786,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "912:7:4",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "912:19:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "907:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "901:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 783,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "901:5:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "901:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "894:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 781,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "894:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "894:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "877:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "877:56:4"
														},
														{
															"expression": {
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "947:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "956:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "947:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "947:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 771,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "826:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "835:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "826:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "WhileStatement",
												"src": "819:150:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 805,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "992:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "985:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 803,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "985:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 737,
												"id": 807,
												"nodeType": "Return",
												"src": "978:21:4"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "208:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "312:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "329:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "321:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "320:15:4"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "359:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "359:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:15:4"
									},
									"scope": 995,
									"src": "303:703:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1185:255:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 817,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1199:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1208:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1199:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "1195:54:4",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "1211:38:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1232:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 816,
															"id": 821,
															"nodeType": "Return",
															"src": "1225:13:4"
														}
													]
												}
											},
											{
												"assignments": [
													825
												],
												"declarations": [
													{
														"constant": false,
														"id": 825,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1266:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "1258:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 824,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1258:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"id": 826,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "1273:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1258:20:4"
											},
											{
												"assignments": [
													829
												],
												"declarations": [
													{
														"constant": false,
														"id": 829,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1296:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "1288:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 828,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"hexValue": "30",
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1305:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1288:18:4"
											},
											{
												"body": {
													"id": 842,
													"nodeType": "Block",
													"src": "1334:57:4",
													"statements": [
														{
															"expression": {
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1348:8:4",
																"subExpression": {
																	"id": 835,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "1348:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "1348:8:4"
														},
														{
															"expression": {
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 838,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "1370:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1379:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1370:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 841,
															"nodeType": "ExpressionStatement",
															"src": "1370:10:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "1323:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1331:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1323:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "WhileStatement",
												"src": "1316:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "1419:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 846,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "1426:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															850,
															926,
															958,
															984
														],
														"referencedDeclaration": 926,
														"src": "1407:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 816,
												"id": 848,
												"nodeType": "Return",
												"src": "1400:33:4"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "1012:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1120:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1140:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1132:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1131:15:4"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1170:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1170:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:4"
									},
									"scope": 995,
									"src": "1111:329:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "1653:351:4",
										"statements": [
											{
												"assignments": [
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1676:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "1663:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 860,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1663:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1695:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 865,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "1699:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1695:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1708:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1695:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1685:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1689:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1685:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1663:47:4"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 871,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1720:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 873,
														"indexExpression": {
															"hexValue": "30",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1727:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1720:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1732:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1720:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1720:15:4"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 877,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1745:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 879,
														"indexExpression": {
															"hexValue": "31",
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1745:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:4"
											},
											{
												"body": {
													"id": 911,
													"nodeType": "Block",
													"src": "1815:87:4",
													"statements": [
														{
															"expression": {
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 897,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "1829:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 899,
																	"indexExpression": {
																		"id": 898,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "1836:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1829:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 900,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "1841:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 904,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 901,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "1854:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1862:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1854:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1841:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1829:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 906,
															"nodeType": "ExpressionStatement",
															"src": "1829:37:4"
														},
														{
															"expression": {
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "1880:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1890:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1880:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 910,
															"nodeType": "ExpressionStatement",
															"src": "1880:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1803:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1807:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1803:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"initializationExpression": {
													"assignments": [
														884
													],
													"declarations": [
														{
															"constant": false,
															"id": 884,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1783:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 912,
															"src": "1775:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 883,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1775:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 890,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1787:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 886,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1791:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1787:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1800:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1787:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1775:26:4"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1810:3:4",
														"subExpression": {
															"id": 894,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "1812:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 896,
													"nodeType": "ExpressionStatement",
													"src": "1810:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1770:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1919:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1928:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1919:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1931:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "1911:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "1990:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1983:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 920,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1983:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1983:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 859,
												"id": 924,
												"nodeType": "Return",
												"src": "1976:21:4"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1446:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1572:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1592:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1584:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1607:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1599:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1599:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:31:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "1638:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1638:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1637:15:4"
									},
									"scope": 995,
									"src": "1563:441:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "2365:827:4",
										"statements": [
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 934,
														"name": "str",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2375:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 936,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "2393:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 935,
															"name": "toHexString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																850,
																926,
																958,
																984
															],
															"referencedDeclaration": 958,
															"src": "2381:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2381:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2375:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "2375:24:4"
											},
											{
												"AST": {
													"nativeSrc": "2461:725:4",
													"nodeType": "YulBlock",
													"src": "2461:725:4",
													"statements": [
														{
															"nativeSrc": "2475:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2475:36:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2491:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2491:1:4",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2502:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2502:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2498:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2498:3:4"
																				},
																				"nativeSrc": "2498:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2498:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2506:3:4",
																				"nodeType": "YulLiteral",
																				"src": "2506:3:4",
																				"type": "",
																				"value": "255"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2494:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2494:3:4"
																		},
																		"nativeSrc": "2494:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2494:16:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2487:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:4"
																},
																"nativeSrc": "2487:24:4",
																"nodeType": "YulFunctionCall",
																"src": "2487:24:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2479:4:4",
																	"nodeType": "YulTypedName",
																	"src": "2479:4:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2554:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2554:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2567:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2567:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2572:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2563:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2563:3:4"
																},
																"nativeSrc": "2563:14:4",
																"nodeType": "YulFunctionCall",
																"src": "2563:14:4"
															},
															"variables": [
																{
																	"name": "o",
																	"nativeSrc": "2558:1:4",
																	"nodeType": "YulTypedName",
																	"src": "2558:1:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2590:50:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2590:50:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "o",
																				"nativeSrc": "2618:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2618:1:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2621:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2621:2:4",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "2608:9:4",
																			"nodeType": "YulIdentifier",
																			"src": "2608:9:4"
																		},
																		"nativeSrc": "2608:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2608:16:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2630:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2630:2:4",
																				"type": "",
																				"value": "34"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2634:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2634:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2626:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:4"
																		},
																		"nativeSrc": "2626:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2626:13:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2604:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:4"
																},
																"nativeSrc": "2604:36:4",
																"nodeType": "YulFunctionCall",
																"src": "2604:36:4"
															},
															"variables": [
																{
																	"name": "hashed",
																	"nativeSrc": "2594:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2594:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2674:22:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2674:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2687:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2687:3:4",
																		"type": "",
																		"value": "240"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2692:3:4",
																		"type": "",
																		"value": "136"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2683:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:4"
																},
																"nativeSrc": "2683:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2683:13:4"
															},
															"variables": [
																{
																	"name": "t",
																	"nativeSrc": "2678:1:4",
																	"nodeType": "YulTypedName",
																	"src": "2678:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2798:180:4",
																"nodeType": "YulBlock",
																"src": "2798:180:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2827:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "2827:1:4"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2830:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "2830:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2823:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2823:3:4"
																					},
																					"nativeSrc": "2823:9:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2823:9:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "t",
																							"nativeSrc": "2838:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "2838:1:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "i",
																									"nativeSrc": "2846:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "2846:1:4"
																								},
																								{
																									"name": "hashed",
																									"nativeSrc": "2849:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "2849:6:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "2841:4:4",
																								"nodeType": "YulIdentifier",
																								"src": "2841:4:4"
																							},
																							"nativeSrc": "2841:15:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2841:15:4"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nativeSrc": "2834:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2834:3:4"
																					},
																					"nativeSrc": "2834:23:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2834:23:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2816:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2816:6:4"
																			},
																			"nativeSrc": "2816:42:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2816:42:4"
																		},
																		"nativeSrc": "2816:42:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:42:4"
																	},
																	{
																		"nativeSrc": "2875:14:4",
																		"nodeType": "YulAssignment",
																		"src": "2875:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2884:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "2884:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2887:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2880:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2880:3:4"
																			},
																			"nativeSrc": "2880:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2880:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2875:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "2875:1:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2919:45:4",
																			"nodeType": "YulBlock",
																			"src": "2919:45:4",
																			"statements": [
																				{
																					"nativeSrc": "2941:5:4",
																					"nodeType": "YulBreak",
																					"src": "2941:5:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2912:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "2912:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2915:2:4",
																					"nodeType": "YulLiteral",
																					"src": "2915:2:4",
																					"type": "",
																					"value": "20"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nativeSrc": "2909:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2909:2:4"
																			},
																			"nativeSrc": "2909:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2909:9:4"
																		},
																		"nativeSrc": "2906:58:4",
																		"nodeType": "YulIf",
																		"src": "2906:58:4"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "2779:1:4",
																"nodeType": "YulLiteral",
																"src": "2779:1:4",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "2732:246:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2781:16:4",
																"nodeType": "YulBlock",
																"src": "2781:16:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2736:42:4",
																"nodeType": "YulBlock",
																"src": "2736:42:4",
																"statements": [
																	{
																		"nativeSrc": "2754:10:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2754:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2763:1:4",
																			"nodeType": "YulLiteral",
																			"src": "2763:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "2758:1:4",
																				"nodeType": "YulTypedName",
																				"src": "2758:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2732:246:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "o",
																		"nativeSrc": "2998:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2998:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "o",
																						"nativeSrc": "3011:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3011:1:4"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3005:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "3005:5:4"
																				},
																				"nativeSrc": "3005:8:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3005:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3019:1:4",
																						"nodeType": "YulLiteral",
																						"src": "3019:1:4",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3032:4:4",
																										"nodeType": "YulLiteral",
																										"src": "3032:4:4",
																										"type": "",
																										"value": "0x00"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3026:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3026:5:4"
																								},
																								"nativeSrc": "3026:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3026:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "o",
																												"nativeSrc": "3049:1:4",
																												"nodeType": "YulIdentifier",
																												"src": "3049:1:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3043:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "3043:5:4"
																										},
																										"nativeSrc": "3043:8:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3043:8:4"
																									},
																									{
																										"name": "mask",
																										"nativeSrc": "3053:4:4",
																										"nodeType": "YulIdentifier",
																										"src": "3053:4:4"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "3039:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3039:3:4"
																								},
																								"nativeSrc": "3039:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3039:19:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3022:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3022:3:4"
																						},
																						"nativeSrc": "3022:37:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3022:37:4"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3015:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:4"
																				},
																				"nativeSrc": "3015:45:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3015:45:4"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nativeSrc": "3001:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:4"
																		},
																		"nativeSrc": "3001:60:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:60:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2991:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2991:6:4"
																},
																"nativeSrc": "2991:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2991:71:4"
															},
															"nativeSrc": "2991:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2991:71:4"
														},
														{
															"nativeSrc": "3075:17:4",
															"nodeType": "YulAssignment",
															"src": "3075:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "o",
																		"nativeSrc": "3084:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3084:1:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3087:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3087:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3080:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:4"
																},
																"nativeSrc": "3080:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3080:12:4"
															},
															"variableNames": [
																{
																	"name": "o",
																	"nativeSrc": "3075:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3075:1:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "o",
																		"nativeSrc": "3112:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3112:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "o",
																						"nativeSrc": "3125:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3125:1:4"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "3119:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "3119:5:4"
																				},
																				"nativeSrc": "3119:8:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3119:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3133:1:4",
																						"nodeType": "YulLiteral",
																						"src": "3133:1:4",
																						"type": "",
																						"value": "1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3146:4:4",
																										"nodeType": "YulLiteral",
																										"src": "3146:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3140:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3140:5:4"
																								},
																								"nativeSrc": "3140:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3140:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "o",
																												"nativeSrc": "3163:1:4",
																												"nodeType": "YulIdentifier",
																												"src": "3163:1:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3157:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "3157:5:4"
																										},
																										"nativeSrc": "3157:8:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3157:8:4"
																									},
																									{
																										"name": "mask",
																										"nativeSrc": "3167:4:4",
																										"nodeType": "YulIdentifier",
																										"src": "3167:4:4"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "3153:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3153:3:4"
																								},
																								"nativeSrc": "3153:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3153:19:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3136:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3136:3:4"
																						},
																						"nativeSrc": "3136:37:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3136:37:4"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "3129:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3129:3:4"
																				},
																				"nativeSrc": "3129:45:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3129:45:4"
																			}
																		],
																		"functionName": {
																			"name": "xor",
																			"nativeSrc": "3115:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3115:3:4"
																		},
																		"nativeSrc": "3115:60:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3115:60:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3105:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:4"
																},
																"nativeSrc": "3105:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3105:71:4"
															},
															"nativeSrc": "3105:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3105:71:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 932,
														"isOffset": false,
														"isSlot": false,
														"src": "2567:3:4",
														"valueSize": 1
													}
												],
												"id": 940,
												"nodeType": "InlineAssembly",
												"src": "2452:734:4"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "2010:261:4",
										"text": "@dev Returns the hexadecimal representation of `value`.\n The output is prefixed with \"0x\", encoded using 2 hexadecimal digits per byte,\n and the alphabets are capitalized conditionally according to\n https://eips.ethereum.org/EIPS/eip-55"
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexStringChecksummed",
									"nameLocation": "2285:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2316:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2308:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "2360:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "2346:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2346:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:19:4"
									},
									"scope": 995,
									"src": "2276:916:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "3430:358:4",
										"statements": [
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "str",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3440:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 952,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3466:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 951,
															"name": "toHexStringNoPrefix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																968,
																994
															],
															"referencedDeclaration": 968,
															"src": "3446:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																"typeString": "function (address) pure returns (string memory)"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3446:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3440:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "3440:32:4"
											},
											{
												"AST": {
													"nativeSrc": "3534:248:4",
													"nodeType": "YulBlock",
													"src": "3534:248:4",
													"statements": [
														{
															"nativeSrc": "3548:35:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3548:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "3575:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3575:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3569:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "3569:5:4"
																		},
																		"nativeSrc": "3569:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3569:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3581:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3581:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3565:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:4"
																},
																"nativeSrc": "3565:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3565:18:4"
															},
															"variables": [
																{
																	"name": "strLength",
																	"nativeSrc": "3552:9:4",
																	"nodeType": "YulTypedName",
																	"src": "3552:9:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "3626:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3626:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:6:4",
																		"nodeType": "YulLiteral",
																		"src": "3631:6:4",
																		"type": "",
																		"value": "0x3078"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:4"
																},
																"nativeSrc": "3619:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3619:19:4"
															},
															"nativeSrc": "3619:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3619:19:4"
														},
														{
															"nativeSrc": "3677:18:4",
															"nodeType": "YulAssignment",
															"src": "3677:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "3688:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3688:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3693:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3693:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3684:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3684:3:4"
																},
																"nativeSrc": "3684:11:4",
																"nodeType": "YulFunctionCall",
																"src": "3684:11:4"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "3677:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3677:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "3736:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:4"
																	},
																	{
																		"name": "strLength",
																		"nativeSrc": "3741:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3741:9:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3729:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:4"
																},
																"nativeSrc": "3729:22:4",
																"nodeType": "YulFunctionCall",
																"src": "3729:22:4"
															},
															"nativeSrc": "3729:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "3729:22:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "3575:3:4",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "3626:3:4",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "3677:3:4",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "3688:3:4",
														"valueSize": 1
													},
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": false,
														"src": "3736:3:4",
														"valueSize": 1
													}
												],
												"id": 956,
												"nodeType": "InlineAssembly",
												"src": "3525:257:4"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "3198:149:4",
										"text": "@dev Returns the hexadecimal representation of `value`.\n The output is prefixed with \"0x\" and encoded using 2 hexadecimal digits per byte."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "3361:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3381:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3373:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3372:15:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "3425:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "3411:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3411:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3410:19:4"
									},
									"scope": 995,
									"src": "3352:436:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "4011:1286:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4073:1218:4",
													"nodeType": "YulBlock",
													"src": "4073:1218:4",
													"statements": [
														{
															"nativeSrc": "4087:18:4",
															"nodeType": "YulAssignment",
															"src": "4087:18:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4100:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4100:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4094:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4094:5:4"
																},
																"nativeSrc": "4094:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4094:11:4"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "4087:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4412:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4412:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "4422:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4422:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4427:4:4",
																				"nodeType": "YulLiteral",
																				"src": "4427:4:4",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4418:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4418:3:4"
																		},
																		"nativeSrc": "4418:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4418:14:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4405:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4405:6:4"
																},
																"nativeSrc": "4405:28:4",
																"nodeType": "YulFunctionCall",
																"src": "4405:28:4"
															},
															"nativeSrc": "4405:28:4",
															"nodeType": "YulExpressionStatement",
															"src": "4405:28:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4512:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4512:4:4",
																		"type": "",
																		"value": "0x0f"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4518:34:4",
																		"nodeType": "YulLiteral",
																		"src": "4518:34:4",
																		"type": "",
																		"value": "0x30313233343536373839616263646566"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4505:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4505:6:4"
																},
																"nativeSrc": "4505:48:4",
																"nodeType": "YulFunctionCall",
																"src": "4505:48:4"
															},
															"nativeSrc": "4505:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "4505:48:4"
														},
														{
															"nativeSrc": "4567:18:4",
															"nodeType": "YulAssignment",
															"src": "4567:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "4578:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4583:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4583:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4574:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4574:3:4"
																},
																"nativeSrc": "4574:11:4",
																"nodeType": "YulFunctionCall",
																"src": "4574:11:4"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "4567:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "4605:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4605:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4598:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4598:6:4"
																},
																"nativeSrc": "4598:15:4",
																"nodeType": "YulFunctionCall",
																"src": "4598:15:4"
															},
															"nativeSrc": "4598:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "4598:15:4"
														},
														{
															"nativeSrc": "4627:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4627:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "4640:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4640:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4645:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4645:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4636:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4636:3:4"
																},
																"nativeSrc": "4636:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4636:14:4"
															},
															"variables": [
																{
																	"name": "o",
																	"nativeSrc": "4631:1:4",
																	"nodeType": "YulTypedName",
																	"src": "4631:1:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "o",
																				"nativeSrc": "4674:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "4674:1:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4677:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:4",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:4"
																		},
																		"nativeSrc": "4670:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4682:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4682:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4663:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:4"
																},
																"nativeSrc": "4663:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4663:21:4"
															},
															"nativeSrc": "4663:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "4663:21:4"
														},
														{
															"nativeSrc": "4698:23:4",
															"nodeType": "YulAssignment",
															"src": "4698:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4711:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4711:2:4",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4715:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4715:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4707:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:4"
																},
																"nativeSrc": "4707:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4707:14:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4698:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4698:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4969:312:4",
																"nodeType": "YulBlock",
																"src": "4969:312:4",
																"statements": [
																	{
																		"nativeSrc": "4987:26:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4987:26:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "o",
																					"nativeSrc": "5000:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "5000:1:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5007:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "5007:1:4"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "5010:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "5010:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5003:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5003:3:4"
																					},
																					"nativeSrc": "5003:9:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5003:9:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4996:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "4996:3:4"
																			},
																			"nativeSrc": "4996:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4996:17:4"
																		},
																		"variables": [
																			{
																				"name": "p",
																				"nativeSrc": "4991:1:4",
																				"nodeType": "YulTypedName",
																				"src": "4991:1:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5030:26:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5030:26:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5047:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "5047:1:4"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "5050:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "5050:5:4"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "5042:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5042:4:4"
																			},
																			"nativeSrc": "5042:14:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5042:14:4"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "5034:4:4",
																				"nodeType": "YulTypedName",
																				"src": "5034:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "p",
																							"nativeSrc": "5085:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "5085:1:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5088:1:4",
																							"nodeType": "YulLiteral",
																							"src": "5088:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5081:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "5081:3:4"
																					},
																					"nativeSrc": "5081:9:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5081:9:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "5102:4:4",
																									"nodeType": "YulIdentifier",
																									"src": "5102:4:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5108:2:4",
																									"nodeType": "YulLiteral",
																									"src": "5108:2:4",
																									"type": "",
																									"value": "15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "5098:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "5098:3:4"
																							},
																							"nativeSrc": "5098:13:4",
																							"nodeType": "YulFunctionCall",
																							"src": "5098:13:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5092:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5092:5:4"
																					},
																					"nativeSrc": "5092:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5092:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "5073:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5073:7:4"
																			},
																			"nativeSrc": "5073:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5073:40:4"
																		},
																		"nativeSrc": "5073:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5073:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "p",
																					"nativeSrc": "5138:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "5138:1:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5151:1:4",
																									"nodeType": "YulLiteral",
																									"src": "5151:1:4",
																									"type": "",
																									"value": "4"
																								},
																								{
																									"name": "temp",
																									"nativeSrc": "5154:4:4",
																									"nodeType": "YulIdentifier",
																									"src": "5154:4:4"
																								}
																							],
																							"functionName": {
																								"name": "shr",
																								"nativeSrc": "5147:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "5147:3:4"
																							},
																							"nativeSrc": "5147:12:4",
																							"nodeType": "YulFunctionCall",
																							"src": "5147:12:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5141:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5141:5:4"
																					},
																					"nativeSrc": "5141:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "5141:19:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "5130:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5130:7:4"
																			},
																			"nativeSrc": "5130:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5130:31:4"
																		},
																		"nativeSrc": "5130:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5130:31:4"
																	},
																	{
																		"nativeSrc": "5178:14:4",
																		"nodeType": "YulAssignment",
																		"src": "5178:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5187:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "5187:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5190:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5190:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5183:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5183:3:4"
																			},
																			"nativeSrc": "5183:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5183:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5178:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "5178:1:4"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5222:45:4",
																			"nodeType": "YulBlock",
																			"src": "5222:45:4",
																			"statements": [
																				{
																					"nativeSrc": "5244:5:4",
																					"nodeType": "YulBreak",
																					"src": "5244:5:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5215:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "5215:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5218:2:4",
																					"nodeType": "YulLiteral",
																					"src": "5218:2:4",
																					"type": "",
																					"value": "20"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nativeSrc": "5212:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "5212:2:4"
																			},
																			"nativeSrc": "5212:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:9:4"
																		},
																		"nativeSrc": "5209:58:4",
																		"nodeType": "YulIf",
																		"src": "5209:58:4"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "4950:1:4",
																"nodeType": "YulLiteral",
																"src": "4950:1:4",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "4903:378:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4952:16:4",
																"nodeType": "YulBlock",
																"src": "4952:16:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4907:42:4",
																"nodeType": "YulBlock",
																"src": "4907:42:4",
																"statements": [
																	{
																		"nativeSrc": "4925:10:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4925:10:4",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4934:1:4",
																			"nodeType": "YulLiteral",
																			"src": "4934:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4929:1:4",
																				"nodeType": "YulTypedName",
																				"src": "4929:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4903:378:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4087:3:4",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4422:3:4",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4567:3:4",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4578:3:4",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4605:3:4",
														"valueSize": 1
													},
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "4640:3:4",
														"valueSize": 1
													},
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "4698:5:4",
														"valueSize": 1
													},
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "4715:5:4",
														"valueSize": 1
													},
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "5050:5:4",
														"valueSize": 1
													}
												],
												"id": 966,
												"nodeType": "InlineAssembly",
												"src": "4064:1227:4"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3794:126:4",
										"text": "@dev Returns the hexadecimal representation of `value`.\n The output is encoded using 2 hexadecimal digits per byte."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexStringNoPrefix",
									"nameLocation": "3934:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:15:4"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "4006:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "3992:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3992:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:19:4"
									},
									"scope": 995,
									"src": "3925:1372:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5515:356:4",
										"statements": [
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 976,
														"name": "str",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "5525:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 978,
																"name": "raw",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "5551:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 977,
															"name": "toHexStringNoPrefix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																968,
																994
															],
															"referencedDeclaration": 994,
															"src": "5531:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																"typeString": "function (bytes memory) pure returns (string memory)"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5531:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5525:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "5525:30:4"
											},
											{
												"AST": {
													"nativeSrc": "5617:248:4",
													"nodeType": "YulBlock",
													"src": "5617:248:4",
													"statements": [
														{
															"nativeSrc": "5631:35:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:35:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "5658:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5658:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5652:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "5652:5:4"
																		},
																		"nativeSrc": "5652:10:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5652:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5664:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5664:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5648:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5648:3:4"
																},
																"nativeSrc": "5648:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5648:18:4"
															},
															"variables": [
																{
																	"name": "strLength",
																	"nativeSrc": "5635:9:4",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "5709:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5709:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5714:6:4",
																		"nodeType": "YulLiteral",
																		"src": "5714:6:4",
																		"type": "",
																		"value": "0x3078"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5702:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5702:6:4"
																},
																"nativeSrc": "5702:19:4",
																"nodeType": "YulFunctionCall",
																"src": "5702:19:4"
															},
															"nativeSrc": "5702:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "5702:19:4"
														},
														{
															"nativeSrc": "5760:18:4",
															"nodeType": "YulAssignment",
															"src": "5760:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "5771:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5771:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5776:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5776:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5767:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5767:3:4"
																},
																"nativeSrc": "5767:11:4",
																"nodeType": "YulFunctionCall",
																"src": "5767:11:4"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "5760:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "5819:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5819:3:4"
																	},
																	{
																		"name": "strLength",
																		"nativeSrc": "5824:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5812:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:4"
																},
																"nativeSrc": "5812:22:4",
																"nodeType": "YulFunctionCall",
																"src": "5812:22:4"
															},
															"nativeSrc": "5812:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "5812:22:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "5658:3:4",
														"valueSize": 1
													},
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "5709:3:4",
														"valueSize": 1
													},
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "5760:3:4",
														"valueSize": 1
													},
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "5771:3:4",
														"valueSize": 1
													},
													{
														"declaration": 974,
														"isOffset": false,
														"isSlot": false,
														"src": "5819:3:4",
														"valueSize": 1
													}
												],
												"id": 982,
												"nodeType": "InlineAssembly",
												"src": "5608:257:4"
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "5303:126:4",
										"text": "@dev Returns the hex encoded string from the raw bytes.\n The output is encoded using 2 hexadecimal digits per byte."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "5443:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "raw",
												"nameLocation": "5468:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5455:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 970,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:18:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "5510:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5496:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5496:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5495:19:4"
									},
									"scope": 995,
									"src": "5434:437:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "6097:879:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6159:811:4",
													"nodeType": "YulBlock",
													"src": "6159:811:4",
													"statements": [
														{
															"nativeSrc": "6173:24:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6173:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "raw",
																		"nativeSrc": "6193:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6187:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6187:5:4"
																},
																"nativeSrc": "6187:10:4",
																"nodeType": "YulFunctionCall",
																"src": "6187:10:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6177:6:4",
																	"nodeType": "YulTypedName",
																	"src": "6177:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6210:26:4",
															"nodeType": "YulAssignment",
															"src": "6210:26:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6227:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6227:4:4",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "6221:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "6221:5:4"
																		},
																		"nativeSrc": "6221:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6221:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6234:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6234:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6217:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:4"
																},
																"nativeSrc": "6217:19:4",
																"nodeType": "YulFunctionCall",
																"src": "6217:19:4"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "6210:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "6297:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6297:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6306:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6306:6:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6314:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6314:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6302:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:4"
																		},
																		"nativeSrc": "6302:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:19:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6290:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6290:6:4"
																},
																"nativeSrc": "6290:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6290:32:4"
															},
															"nativeSrc": "6290:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "6290:32:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6436:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6436:4:4",
																		"type": "",
																		"value": "0x0f"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6442:34:4",
																		"nodeType": "YulLiteral",
																		"src": "6442:34:4",
																		"type": "",
																		"value": "0x30313233343536373839616263646566"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6429:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:4"
																},
																"nativeSrc": "6429:48:4",
																"nodeType": "YulFunctionCall",
																"src": "6429:48:4"
															},
															"nativeSrc": "6429:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "6429:48:4"
														},
														{
															"nativeSrc": "6491:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6491:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "6504:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6504:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6509:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6509:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6500:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6500:3:4"
																},
																"nativeSrc": "6500:14:4",
																"nodeType": "YulFunctionCall",
																"src": "6500:14:4"
															},
															"variables": [
																{
																	"name": "o",
																	"nativeSrc": "6495:1:4",
																	"nodeType": "YulTypedName",
																	"src": "6495:1:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6527:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6527:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "raw",
																		"nativeSrc": "6542:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6547:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6547:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:4"
																},
																"nativeSrc": "6538:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6538:16:4"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "6531:3:4",
																	"nodeType": "YulTypedName",
																	"src": "6531:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6627:207:4",
																"nodeType": "YulBlock",
																"src": "6627:207:4",
																"statements": [
																	{
																		"nativeSrc": "6645:18:4",
																		"nodeType": "YulAssignment",
																		"src": "6645:18:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "raw",
																					"nativeSrc": "6656:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6656:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6661:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6661:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6652:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6652:3:4"
																			},
																			"nativeSrc": "6652:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6652:11:4"
																		},
																		"variableNames": [
																			{
																				"name": "raw",
																				"nativeSrc": "6645:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6645:3:4"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "o",
																							"nativeSrc": "6692:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "6692:1:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6695:1:4",
																							"nodeType": "YulLiteral",
																							"src": "6695:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6688:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6688:3:4"
																					},
																					"nativeSrc": "6688:9:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6688:9:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "raw",
																											"nativeSrc": "6715:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "6715:3:4"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "6709:5:4",
																										"nodeType": "YulIdentifier",
																										"src": "6709:5:4"
																									},
																									"nativeSrc": "6709:10:4",
																									"nodeType": "YulFunctionCall",
																									"src": "6709:10:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6721:2:4",
																									"nodeType": "YulLiteral",
																									"src": "6721:2:4",
																									"type": "",
																									"value": "15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "6705:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "6705:3:4"
																							},
																							"nativeSrc": "6705:19:4",
																							"nodeType": "YulFunctionCall",
																							"src": "6705:19:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6699:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6699:5:4"
																					},
																					"nativeSrc": "6699:26:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6699:26:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "6680:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6680:7:4"
																			},
																			"nativeSrc": "6680:46:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6680:46:4"
																		},
																		"nativeSrc": "6680:46:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6680:46:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "o",
																					"nativeSrc": "6751:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "6751:1:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "6768:1:4",
																											"nodeType": "YulLiteral",
																											"src": "6768:1:4",
																											"type": "",
																											"value": "4"
																										},
																										{
																											"arguments": [
																												{
																													"name": "raw",
																													"nativeSrc": "6777:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "6777:3:4"
																												}
																											],
																											"functionName": {
																												"name": "mload",
																												"nativeSrc": "6771:5:4",
																												"nodeType": "YulIdentifier",
																												"src": "6771:5:4"
																											},
																											"nativeSrc": "6771:10:4",
																											"nodeType": "YulFunctionCall",
																											"src": "6771:10:4"
																										}
																									],
																									"functionName": {
																										"name": "shr",
																										"nativeSrc": "6764:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "6764:3:4"
																									},
																									"nativeSrc": "6764:18:4",
																									"nodeType": "YulFunctionCall",
																									"src": "6764:18:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6784:2:4",
																									"nodeType": "YulLiteral",
																									"src": "6784:2:4",
																									"type": "",
																									"value": "15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "6760:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "6760:3:4"
																							},
																							"nativeSrc": "6760:27:4",
																							"nodeType": "YulFunctionCall",
																							"src": "6760:27:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6754:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6754:5:4"
																					},
																					"nativeSrc": "6754:34:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6754:34:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "6743:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6743:7:4"
																			},
																			"nativeSrc": "6743:46:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:46:4"
																		},
																		"nativeSrc": "6743:46:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:46:4"
																	},
																	{
																		"nativeSrc": "6806:14:4",
																		"nodeType": "YulAssignment",
																		"src": "6806:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "o",
																					"nativeSrc": "6815:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "6815:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6818:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6818:1:4",
																					"type": "",
																					"value": "2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6811:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6811:3:4"
																			},
																			"nativeSrc": "6811:9:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6811:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "o",
																				"nativeSrc": "6806:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "6806:1:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "raw",
																				"nativeSrc": "6599:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6599:3:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6604:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6604:3:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6596:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6596:2:4"
																		},
																		"nativeSrc": "6596:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6596:12:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6589:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6589:6:4"
																},
																"nativeSrc": "6589:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6589:20:4"
															},
															"nativeSrc": "6568:266:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6610:16:4",
																"nodeType": "YulBlock",
																"src": "6610:16:4",
																"statements": []
															},
															"pre": {
																"nativeSrc": "6572:16:4",
																"nodeType": "YulBlock",
																"src": "6572:16:4",
																"statements": []
															},
															"src": "6568:266:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "o",
																		"nativeSrc": "6854:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6854:1:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6857:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6857:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6847:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6847:6:4"
																},
																"nativeSrc": "6847:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6847:12:4"
															},
															"nativeSrc": "6847:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "6847:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6917:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6917:4:4",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "o",
																				"nativeSrc": "6927:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "6927:1:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6930:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6930:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6923:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6923:3:4"
																		},
																		"nativeSrc": "6923:12:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6923:12:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6910:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:4"
																},
																"nativeSrc": "6910:26:4",
																"nodeType": "YulFunctionCall",
																"src": "6910:26:4"
															},
															"nativeSrc": "6910:26:4",
															"nodeType": "YulExpressionStatement",
															"src": "6910:26:4"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6193:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6542:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6599:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6645:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6656:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6715:3:4",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "6777:3:4",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "6210:3:4",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "6297:3:4",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "6504:3:4",
														"valueSize": 1
													}
												],
												"id": 992,
												"nodeType": "InlineAssembly",
												"src": "6150:820:4"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "5877:126:4",
										"text": "@dev Returns the hex encoded string from the raw bytes.\n The output is encoded using 2 hexadecimal digits per byte."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexStringNoPrefix",
									"nameLocation": "6017:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "raw",
												"nameLocation": "6050:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "6037:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6037:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6036:18:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "6092:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "6078:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6077:19:4"
									},
									"scope": 995,
									"src": "6008:968:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 996,
							"src": "121:6857:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:6939:4"
				},
				"id": 4
			}
		}
	}
}