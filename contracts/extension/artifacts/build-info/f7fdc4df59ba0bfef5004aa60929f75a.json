{
	"id": "f7fdc4df59ba0bfef5004aa60929f75a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/extension/PrimarySale.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\nimport \"./interface/IPrimarySale.sol\";\n\n/**\n *  @title   Primary Sale\n *  @notice  Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n *           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n *           primary sales, if desired.\n */\n\nabstract contract PrimarySale is IPrimarySale {\n    /// @dev The sender is not authorized to perform the action\n    error PrimarySaleUnauthorized();\n\n    /// @dev The recipient is invalid\n    error PrimarySaleInvalidRecipient(address recipient);\n\n    /// @dev The address that receives all primary sales value.\n    address private recipient;\n\n    /// @dev Returns primary sale recipient address.\n    function primarySaleRecipient() public view override returns (address) {\n        return recipient;\n    }\n\n    /**\n     *  @notice         Updates primary sale recipient.\n     *  @dev            Caller should be authorized to set primary sales info.\n     *                  See {_canSetPrimarySaleRecipient}.\n     *                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\n     *\n     *  @param _saleRecipient   Address to be set as new recipient of primary sales.\n     */\n    function setPrimarySaleRecipient(address _saleRecipient) external override {\n        if (!_canSetPrimarySaleRecipient()) {\n            revert PrimarySaleUnauthorized();\n        }\n        _setupPrimarySaleRecipient(_saleRecipient);\n    }\n\n    /// @dev Lets a contract admin set the recipient for all primary sales.\n    function _setupPrimarySaleRecipient(address _saleRecipient) internal {\n        if (_saleRecipient == address(0)) {\n            revert PrimarySaleInvalidRecipient(_saleRecipient);\n        }\n\n        recipient = _saleRecipient;\n        emit PrimarySaleRecipientUpdated(_saleRecipient);\n    }\n\n    /// @dev Returns whether primary sale recipient can be set in the given execution context.\n    function _canSetPrimarySaleRecipient() internal view virtual returns (bool);\n}"
			},
			"contracts/extension/interface/IPrimarySale.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n *  Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n *  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n *  primary sales, if desired.\n */\n\ninterface IPrimarySale {\n    /// @dev The adress that receives all primary sales value.\n    function primarySaleRecipient() external view returns (address);\n\n    /// @dev Lets a module admin set the default recipient of all primary sales.\n    function setPrimarySaleRecipient(address _saleRecipient) external;\n\n    /// @dev Emitted when a new sale recipient is set.\n    event PrimarySaleRecipientUpdated(address indexed recipient);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/extension/PrimarySale.sol": {
				"PrimarySale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "PrimarySaleInvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PrimarySaleUnauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "PrimarySaleRecipientUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "primarySaleRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleRecipient",
									"type": "address"
								}
							],
							"name": "setPrimarySaleRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"PrimarySaleInvalidRecipient(address)": [
								{
									"details": "The recipient is invalid"
								}
							],
							"PrimarySaleUnauthorized()": [
								{
									"details": "The sender is not authorized to perform the action"
								}
							]
						},
						"events": {
							"PrimarySaleRecipientUpdated(address)": {
								"details": "Emitted when a new sale recipient is set."
							}
						},
						"kind": "dev",
						"methods": {
							"primarySaleRecipient()": {
								"details": "Returns primary sale recipient address."
							},
							"setPrimarySaleRecipient(address)": {
								"details": "Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.",
								"params": {
									"_saleRecipient": "Address to be set as new recipient of primary sales."
								}
							}
						},
						"stateVariables": {
							"recipient": {
								"details": "The address that receives all primary sales value."
							}
						},
						"title": "Primary Sale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"primarySaleRecipient()": "079fe40e",
							"setPrimarySaleRecipient(address)": "6f4f2837"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleInvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PrimarySaleUnauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"PrimarySaleInvalidRecipient(address)\":[{\"details\":\"The recipient is invalid\"}],\"PrimarySaleUnauthorized()\":[{\"details\":\"The sender is not authorized to perform the action\"}]},\"events\":{\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"}},\"kind\":\"dev\",\"methods\":{\"primarySaleRecipient()\":{\"details\":\"Returns primary sale recipient address.\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Caller should be authorized to set primary sales info.                  See {_canSetPrimarySaleRecipient}.                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\",\"params\":{\"_saleRecipient\":\"Address to be set as new recipient of primary sales.\"}}},\"stateVariables\":{\"recipient\":{\"details\":\"The address that receives all primary sales value.\"}},\"title\":\"Primary Sale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setPrimarySaleRecipient(address)\":{\"notice\":\"Updates primary sale recipient.\"}},\"notice\":\"Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about           primary sales, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/PrimarySale.sol\":\"PrimarySale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/PrimarySale.sol\":{\"keccak256\":\"0x40017dcb523b3554a877e438ecc97800961fb623ed8bfc85b2033952ab4bc871\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60697d01719f9db6994cfbf5c4a298ef51bf7b803250421aea92e1f19543435f\",\"dweb:/ipfs/QmR43VU3jnztLMNPugGEaPyc6TwmcBRvii2hc277EMpi3Z\"]},\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0xb4eced38645eb1be936fb30e449da88f31404d8812f639de2f1b58b316b019f0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0bb33e58739ecb3ede0482f9c87e1eb624c7b6aa66e0c3fa8c62f541cb6a297c\",\"dweb:/ipfs/QmVduBJCtEGjB9Wk4ZyyHrx4vF7xEt2RR5YyTrCTrrZVG8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "contracts/extension/PrimarySale.sol:PrimarySale",
								"label": "recipient",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setPrimarySaleRecipient(address)": {
								"notice": "Updates primary sale recipient."
							}
						},
						"notice": "Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about           primary sales, if desired.",
						"version": 1
					}
				}
			},
			"contracts/extension/interface/IPrimarySale.sol": {
				"IPrimarySale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "PrimarySaleRecipientUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "primarySaleRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleRecipient",
									"type": "address"
								}
							],
							"name": "setPrimarySaleRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PrimarySaleRecipientUpdated(address)": {
								"details": "Emitted when a new sale recipient is set."
							}
						},
						"kind": "dev",
						"methods": {
							"primarySaleRecipient()": {
								"details": "The adress that receives all primary sales value."
							},
							"setPrimarySaleRecipient(address)": {
								"details": "Lets a module admin set the default recipient of all primary sales."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"primarySaleRecipient()": "079fe40e",
							"setPrimarySaleRecipient(address)": "6f4f2837"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"}},\"kind\":\"dev\",\"methods\":{\"primarySaleRecipient()\":{\"details\":\"The adress that receives all primary sales value.\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Lets a module admin set the default recipient of all primary sales.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about  primary sales, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IPrimarySale.sol\":\"IPrimarySale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0xb4eced38645eb1be936fb30e449da88f31404d8812f639de2f1b58b316b019f0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0bb33e58739ecb3ede0482f9c87e1eb624c7b6aa66e0c3fa8c62f541cb6a297c\",\"dweb:/ipfs/QmVduBJCtEGjB9Wk4ZyyHrx4vF7xEt2RR5YyTrCTrrZVG8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about  primary sales, if desired.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/extension/PrimarySale.sol": {
				"ast": {
					"absolutePath": "contracts/extension/PrimarySale.sol",
					"exportedSymbols": {
						"IPrimarySale": [
							101
						],
						"PrimarySale": [
							80
						]
					},
					"id": 81,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "contracts/extension/interface/IPrimarySale.sol",
							"file": "./interface/IPrimarySale.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 102,
							"src": "86:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IPrimarySale",
										"nameLocations": [
											"508:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 101,
										"src": "508:12:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "508:12:0"
								}
							],
							"canonicalName": "PrimarySale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "126:347:0",
								"text": "  @title   Primary Sale\n  @notice  Thirdweb's `PrimarySale` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n           the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n           primary sales, if desired."
							},
							"fullyImplemented": false,
							"id": 80,
							"linearizedBaseContracts": [
								80,
								101
							],
							"name": "PrimarySale",
							"nameLocation": "493:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "527:59:0",
										"text": "@dev The sender is not authorized to perform the action"
									},
									"errorSelector": "7260843c",
									"id": 8,
									"name": "PrimarySaleUnauthorized",
									"nameLocation": "597:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "620:2:0"
									},
									"src": "591:32:0"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "629:33:0",
										"text": "@dev The recipient is invalid"
									},
									"errorSelector": "3df2b0dc",
									"id": 13,
									"name": "PrimarySaleInvalidRecipient",
									"nameLocation": "673:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "709:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "701:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:19:0"
									},
									"src": "667:53:0"
								},
								{
									"constant": false,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "726:59:0",
										"text": "@dev The address that receives all primary sales value."
									},
									"id": 16,
									"mutability": "mutable",
									"name": "recipient",
									"nameLocation": "806:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "790:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "790:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "946:33:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 16,
													"src": "963:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 22,
												"id": 24,
												"nodeType": "Return",
												"src": "956:16:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "822:48:0",
										"text": "@dev Returns primary sale recipient address."
									},
									"functionSelector": "079fe40e",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "primarySaleRecipient",
									"nameLocation": "884:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 19,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "919:8:0"
									},
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:9:0"
									},
									"scope": 80,
									"src": "875:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										95
									],
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1463:161:0",
										"statements": [
											{
												"condition": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1477:30:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 33,
															"name": "_canSetPrimarySaleRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1478:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1478:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 40,
												"nodeType": "IfStatement",
												"src": "1473:93:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "1509:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "PrimarySaleUnauthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "1530:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1530:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 38,
															"nodeType": "RevertStatement",
															"src": "1523:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 42,
															"name": "_saleRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1602:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 41,
														"name": "_setupPrimarySaleRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1575:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1575:42:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "985:398:0",
										"text": "  @notice         Updates primary sale recipient.\n  @dev            Caller should be authorized to set primary sales info.\n                  See {_canSetPrimarySaleRecipient}.\n                  Emits {PrimarySaleRecipientUpdated Event}; See {_setupPrimarySaleRecipient}.\n  @param _saleRecipient   Address to be set as new recipient of primary sales."
									},
									"functionSelector": "6f4f2837",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPrimarySaleRecipient",
									"nameLocation": "1397:23:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 31,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1454:8:0"
									},
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_saleRecipient",
												"nameLocation": "1429:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1421:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:24:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1463:0:0"
									},
									"scope": 80,
									"src": "1388:236:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "1775:220:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 52,
														"name": "_saleRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1789:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1815:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 53,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1807:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1807:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1789:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"nodeType": "IfStatement",
												"src": "1785:109:0",
												"trueBody": {
													"id": 62,
													"nodeType": "Block",
													"src": "1819:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "_saleRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "1868:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 58,
																	"name": "PrimarySaleInvalidRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1840:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1840:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 61,
															"nodeType": "RevertStatement",
															"src": "1833:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1904:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 65,
														"name": "_saleRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1916:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1904:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1904:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 69,
															"name": "_saleRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1973:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "PrimarySaleRecipientUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1945:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1940:48:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1630:71:0",
										"text": "@dev Lets a contract admin set the recipient for all primary sales."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupPrimarySaleRecipient",
									"nameLocation": "1715:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_saleRecipient",
												"nameLocation": "1750:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1742:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1741:24:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:0:0"
									},
									"scope": 80,
									"src": "1706:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2001:90:0",
										"text": "@dev Returns whether primary sale recipient can be set in the given execution context."
									},
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_canSetPrimarySaleRecipient",
									"nameLocation": "2105:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:2:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2166:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:6:0"
									},
									"scope": 80,
									"src": "2096:76:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 81,
							"src": "475:1699:0",
							"usedErrors": [
								8,
								13
							],
							"usedEvents": [
								100
							]
						}
					],
					"src": "39:2135:0"
				},
				"id": 0
			},
			"contracts/extension/interface/IPrimarySale.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IPrimarySale.sol",
					"exportedSymbols": {
						"IPrimarySale": [
							101
						]
					},
					"id": 102,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPrimarySale",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "86:290:1",
								"text": "  Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n  primary sales, if desired."
							},
							"fullyImplemented": false,
							"id": 101,
							"linearizedBaseContracts": [
								101
							],
							"name": "IPrimarySale",
							"nameLocation": "388:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "407:58:1",
										"text": "@dev The adress that receives all primary sales value."
									},
									"functionSelector": "079fe40e",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "primarySaleRecipient",
									"nameLocation": "479:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "525:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:1"
									},
									"scope": 101,
									"src": "470:64:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "540:76:1",
										"text": "@dev Lets a module admin set the default recipient of all primary sales."
									},
									"functionSelector": "6f4f2837",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPrimarySaleRecipient",
									"nameLocation": "630:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_saleRecipient",
												"nameLocation": "662:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "654:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:24:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:0:1"
									},
									"scope": 101,
									"src": "621:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "693:50:1",
										"text": "@dev Emitted when a new sale recipient is set."
									},
									"eventSelector": "299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b333",
									"id": 100,
									"name": "PrimarySaleRecipientUpdated",
									"nameLocation": "754:27:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "798:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "782:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:27:1"
									},
									"src": "748:61:1"
								}
							],
							"scope": 102,
							"src": "378:433:1",
							"usedErrors": [],
							"usedEvents": [
								100
							]
						}
					],
					"src": "39:772:1"
				},
				"id": 1
			}
		}
	}
}