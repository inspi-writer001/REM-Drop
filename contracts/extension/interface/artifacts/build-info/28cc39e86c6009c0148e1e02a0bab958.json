{
	"id": "28cc39e86c6009c0148e1e02a0bab958",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/extension/interface/IPrimarySale.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @author thirdweb\n\n/**\n *  Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n *  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n *  primary sales, if desired.\n */\n\ninterface IPrimarySale {\n    /// @dev The adress that receives all primary sales value.\n    function primarySaleRecipient() external view returns (address);\n\n    /// @dev Lets a module admin set the default recipient of all primary sales.\n    function setPrimarySaleRecipient(address _saleRecipient) external;\n\n    /// @dev Emitted when a new sale recipient is set.\n    event PrimarySaleRecipientUpdated(address indexed recipient);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/extension/interface/IPrimarySale.sol": {
				"IPrimarySale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "PrimarySaleRecipientUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "primarySaleRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_saleRecipient",
									"type": "address"
								}
							],
							"name": "setPrimarySaleRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PrimarySaleRecipientUpdated(address)": {
								"details": "Emitted when a new sale recipient is set."
							}
						},
						"kind": "dev",
						"methods": {
							"primarySaleRecipient()": {
								"details": "The adress that receives all primary sales value."
							},
							"setPrimarySaleRecipient(address)": {
								"details": "Lets a module admin set the default recipient of all primary sales."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"primarySaleRecipient()": "079fe40e",
							"setPrimarySaleRecipient(address)": "6f4f2837"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimarySaleRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"primarySaleRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_saleRecipient\",\"type\":\"address\"}],\"name\":\"setPrimarySaleRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PrimarySaleRecipientUpdated(address)\":{\"details\":\"Emitted when a new sale recipient is set.\"}},\"kind\":\"dev\",\"methods\":{\"primarySaleRecipient()\":{\"details\":\"The adress that receives all primary sales value.\"},\"setPrimarySaleRecipient(address)\":{\"details\":\"Lets a module admin set the default recipient of all primary sales.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about  primary sales, if desired.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/extension/interface/IPrimarySale.sol\":\"IPrimarySale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/extension/interface/IPrimarySale.sol\":{\"keccak256\":\"0xb4eced38645eb1be936fb30e449da88f31404d8812f639de2f1b58b316b019f0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0bb33e58739ecb3ede0482f9c87e1eb624c7b6aa66e0c3fa8c62f541cb6a297c\",\"dweb:/ipfs/QmVduBJCtEGjB9Wk4ZyyHrx4vF7xEt2RR5YyTrCTrrZVG8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about  primary sales, if desired.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/extension/interface/IPrimarySale.sol": {
				"ast": {
					"absolutePath": "contracts/extension/interface/IPrimarySale.sol",
					"exportedSymbols": {
						"IPrimarySale": [
							20
						]
					},
					"id": 21,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPrimarySale",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "86:290:0",
								"text": "  Thirdweb's `Primary` is a contract extension to be used with any base contract. It exposes functions for setting and reading\n  the recipient of primary sales, and lets the inheriting contract perform conditional logic that uses information about\n  primary sales, if desired."
							},
							"fullyImplemented": false,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IPrimarySale",
							"nameLocation": "388:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "407:58:0",
										"text": "@dev The adress that receives all primary sales value."
									},
									"functionSelector": "079fe40e",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "primarySaleRecipient",
									"nameLocation": "479:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "525:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:9:0"
									},
									"scope": 20,
									"src": "470:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "540:76:0",
										"text": "@dev Lets a module admin set the default recipient of all primary sales."
									},
									"functionSelector": "6f4f2837",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPrimarySaleRecipient",
									"nameLocation": "630:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_saleRecipient",
												"nameLocation": "662:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "654:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:24:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "686:0:0"
									},
									"scope": 20,
									"src": "621:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "693:50:0",
										"text": "@dev Emitted when a new sale recipient is set."
									},
									"eventSelector": "299d17e95023f496e0ffc4909cff1a61f74bb5eb18de6f900f4155bfa1b3b333",
									"id": 19,
									"name": "PrimarySaleRecipientUpdated",
									"nameLocation": "754:27:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "782:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:27:0"
									},
									"src": "748:61:0"
								}
							],
							"scope": 21,
							"src": "378:433:0",
							"usedErrors": [],
							"usedEvents": [
								19
							]
						}
					],
					"src": "39:772:0"
				},
				"id": 0
			}
		}
	}
}